{"version":3,"sources":["tapis-ui/_common/Paginator/Paginator.module.scss","tapis-app/Dashboard/_components/Dashboard/Dashboard.module.scss","tapis-app/Files/_components/Toolbar/MoveCopyModal/MoveCopyModal.module.scss","tapis-app/_components/Notifications/NotificationToast.module.scss","tapis-ui/_common/Breadcrumbs/Breadcrumbs.module.scss","tapis-ui/_common/TextCopyField/TextCopyField.module.scss","tapis-ui/components/files/FileListing/FileListing.module.scss","tapis-ui/_common/LayoutSections/LayoutSections.module.scss","tapis-ui/_wrappers/Navbar/Navbar.module.scss","tapis-app/UIPatterns/UIPatternsMessage/UIPatternsMessage.module.scss","tapis-app/UIPatterns/UIPatternsDescriptionList/UIPatternsDescriptionList.module.css","tapis-ui/_common/Section/Section.module.css","tapis-ui/_common/SectionHeader/SectionHeader.module.css","tapis-ui/_common/CopyButton/CopyButton.module.scss","tapis-ui/_common/PageLayout/PageLayout.module.scss","tapis-ui/_common/Collapse/Collapse.module.scss","tapis-ui/_common/Expand/Expand.module.scss","tapis-ui/_wrappers/SubmitWrapper/SubmitWrapper.module.scss","tapis-ui/components/files/TransferListing/TransferListing.module.scss","tapis-ui/components/systems/SystemListing/SystemListing.module.scss","tapis-ui/_common/Tabs/Tabs.module.scss","tapis-ui/_common/Progress/Progress.module.scss","tapis-app/Files/_components/Toolbar/DeleteModal/DeleteModal.module.scss","tapis-ui/_common/SectionContent/SectionContent.module.css","tapis-ui/_common/ReadMore/ReadMore.module.scss","tapis-ui/_common/FieldWrapperFormik/fields/FormikCheck.module.scss","tapis-ui/components/files/FileExplorer/FileExplorer.module.scss","tapis-ui/_common/JSONDisplay/JSONDisplay.module.scss","tapis-ui/components/jobs/JobLauncher/steps/SchedulerOptions.module.scss","tapis-app/Systems/_components/SystemToolbar/SystemToolbar.module.scss","tapis-app/Files/FileListing/_Layout/Layout.module.scss","tapis-app/Files/_components/Toolbar/Toolbar.module.scss","tapis-ui/components/jobs/JobLauncher/FieldArray.module.scss","tapis-app/_components/Sidebar/Sidebar.module.scss","tapis-ui/_common/Section/SectionMessages.module.css","tapis-ui/_common/SectionContent/SectionContent.layouts.module.css","tapis-ui/_common/DropdownSelector/DropdownSelector.module.css","tapis-ui/_common/Pill/Pill.module.scss","tapis-ui/components/jobs/JobLauncher/steps/FileInputArrays.module.scss","tapis-app/Files/_components/Toolbar/PermissionsModal/PermissionsModal.module.scss","tapis-app/Files/_Layout/Layout.module.scss","tapis-app/UIPatterns/UIPatternsReadMore/UIPatternsReadMore.module.scss","tapis-app/Systems/_components/SystemToolbar/CreateSystemModal/CreateSystemModal.module.scss","tapis-app/Files/_components/Toolbar/TransferModal/TransferModal.module.scss","tapis-ui/_wrappers/Wizard/Wizard.module.scss","tapis-app/UIPatterns/UIPatterns.module.scss","tapis-ui/_common/FieldWrapperFormik/FieldWrapperFormik.module.css","tapis-ui/_common/Message/Message.module.scss","tapis-ui/_common/DescriptionList/DescriptionList.module.scss","tapis-app/Files/_components/Toolbar/UploadModal/UploadModal.module.scss","tapis-ui/components/jobs/JobLauncher/steps/FileInputs.module.scss","tapis-hooks/context/TapisContext.tsx","tapis-hooks/context/useTapisConfig.ts","tapis-hooks/provider/index.ts","tapis-hooks/provider/TapisProvider.tsx","tapis-ui/_common/Breadcrumbs/Breadcrumbs.tsx","tapis-ui/_common/Breadcrumbs/index.ts","tapis-ui/_common/GenericModal/useModal.ts","tapis-ui/_common/GenericModal/index.ts","tapis-ui/_common/GenericModal/GenericModal.tsx","tapis-ui/_common/LoadingSpinner/LoadingSpinner.js","tapis-ui/_common/LoadingSpinner/index.js","tapis-ui/_constants/welcomeMessages.js","tapis-ui/_common/Section/SectionMessages.js","tapis-ui/_common/SectionContent/SectionContent.js","tapis-ui/_common/Section/Section.js","tapis-ui/_common/SectionHeader/SectionHeader.js","tapis-ui/_common/InfiniteScrollTable/InfiniteScrollTable.js","tapis-ui/_common/InfiniteScrollTable/index.js","tapis-ui/_common/Icon/Icon.js","tapis-ui/_common/Icon/index.js","tapis-ui/_common/Expand/Expand.js","tapis-ui/_common/Message/Message.js","tapis-ui/_common/Message/index.js","tapis-ui/_common/InlineMessage/InlineMessage.js","tapis-ui/_common/InlineMessage/index.js","tapis-ui/_common/SectionMessage/SectionMessage.js","tapis-ui/_common/SectionMessage/index.js","tapis-ui/_common/DescriptionList/DescriptionList.js","tapis-ui/_common/DescriptionList/index.js","tapis-ui/_common/DropdownSelector/DropdownSelector.js","tapis-ui/_common/DropdownSelector/index.js","tapis-ui/_common/WelcomeMessage/WelcomeMessage.js","tapis-ui/_common/Pill/Pill.js","tapis-ui/_common/Pill/index.js","tapis-ui/_common/TextCopyField/TextCopyField.js","tapis-ui/_common/ReadMore/ReadMore.js","tapis-ui/_common/ReadMore/index.js","tapis-ui/_common/Paginator/Paginator.js","tapis-ui/_common/ProtectedRoute/ProtectedRoute.tsx","tapis-ui/_common/ProtectedRoute/index.ts","tapis-ui/_common/CopyButton/CopyButton.js","tapis-ui/_common/CopyButton/index.js","tapis-ui/_common/FieldWrapperFormik/FieldWrapperFormik.tsx","tapis-ui/_common/FieldWrapperFormik/fields/FormikInput.tsx","tapis-ui/_common/FieldWrapperFormik/fields/formikPatch.ts","tapis-ui/_common/FieldWrapperFormik/fields/FormikSelect.tsx","tapis-ui/_common/FieldWrapperFormik/fields/FormikCheck.tsx","tapis-api/utils/apiGenerator.ts","tapis-api/utils/errorDecoder.ts","tapis-api/files/list.ts","tapis-api/files/mkdir.ts","tapis-api/files/moveCopy.ts","tapis-api/files/insertAxios.ts","tapis-api/files/stat.ts","tapis-api/files/permissions.ts","tapis-api/files/nativeOp.ts","tapis-api/files/delete.ts","tapis-api/files/downloadStream.ts","tapis-hooks/utils/infiniteQuery.ts","tapis-hooks/files/queryKeys.ts","tapis-hooks/files/useList.ts","tapis-hooks/files/useMkdir.ts","tapis-hooks/files/useMove.ts","tapis-hooks/files/useCopy.ts","tapis-hooks/files/useUpload.ts","tapis-hooks/files/useStat.ts","tapis-hooks/files/usePermissions.ts","tapis-hooks/files/useNativeOp.ts","tapis-hooks/files/useDelete.ts","tapis-hooks/files/useDownload.ts","tapis-ui/_wrappers/QueryWrapper/index.ts","tapis-ui/_wrappers/QueryWrapper/QueryWrapper.tsx","tapis-ui/_wrappers/SubmitWrapper/index.ts","tapis-ui/_wrappers/SubmitWrapper/SubmitWrapper.tsx","tapis-ui/_wrappers/Wizard/Wizard.tsx","tapis-ui/_wrappers/Wizard/index.ts","utils/sizeFormat.ts","utils/timeFormat.ts","tapis-api/utils/jobExecSystem.ts","tapis-api/systems/list.ts","tapis-api/systems/details.ts","tapis-api/systems/schedulerProfiles.ts","tapis-api/systems/credentials/createCredentials.ts","tapis-api/systems/makeNewSystem.ts","tapis-hooks/systems/queryKeys.ts","tapis-hooks/systems/useList.ts","tapis-hooks/systems/useDetails.ts","tapis-hooks/systems/useSchedulerProfiles.ts","tapis-hooks/systems/useCreateCredentials.ts","tapis-hooks/systems/useMakeNewSystem.ts","tapis-app/Systems/_components/AddCredentials/AuthenticationMethods/Password.tsx","tapis-app/Systems/_components/AddCredentials/AuthenticationMethods/Token.tsx","tapis-app/Systems/_components/AddCredentials/AuthenticationMethods/PkiKeys.tsx","tapis-app/Systems/_components/AddCredentials/AuthenticationMethods/Cert.tsx","tapis-app/Systems/_components/AddCredentials/AuthenticationMethods/AccessKey.tsx","tapis-app/Systems/_components/AddCredentials/index.ts","tapis-app/Systems/_components/AddCredentials/AddCredentials.tsx","tapis-ui/components/files/FileListing/FileListing.tsx","tapis-ui/components/files/FileStat/index.ts","tapis-ui/components/files/FileStat/FileStat.tsx","tapis-ui/components/files/FileOperation/index.ts","tapis-ui/components/files/FileOperation/FileOperation.tsx","tapis-api/files/transfers/create.ts","tapis-api/files/transfers/list.ts","tapis-api/files/transfers/cancel.ts","tapis-api/files/transfers/details.ts","tapis-hooks/files/transfers/queryKeys.ts","tapis-hooks/files/transfers/useCreate.ts","tapis-hooks/files/transfers/useDetails.ts","tapis-hooks/files/transfers/useList.ts","tapis-hooks/files/transfers/useCancel.ts","tapis-ui/components/files/TransferListing/index.ts","tapis-ui/components/files/TransferListing/TransferListing.tsx","tapis-ui/components/files/TransferDetails/TransferDetails.tsx","tapis-ui/components/files/TransferCancel/index.ts","tapis-ui/components/files/TransferCancel/TransferCancel.tsx","tapis-ui/components/files/TransferCreate/index.ts","tapis-ui/components/files/TransferCreate/TransferCreate.tsx","tapis-ui/_common/Breadcrumbs/breadcrumbsFromPathname.ts","tapis-ui/components/systems/SystemDetail/SystemDetail.tsx","tapis-ui/components/systems/SystemListing/SystemListing.tsx","tapis-ui/components/systems/SystemListing/index.ts","tapis-ui/components/files/FileExplorer/FileExplorer.tsx","tapis-ui/components/files/FileExplorer/index.tsx","tapis-ui/components/files/FileSelectModal/index.tsx","tapis-ui/components/files/FileSelectModal/FileSelectModal.tsx","tapis-ui/_common/FieldWrapperFormik/fields/FormikTapisFile.tsx","tapis-ui/_common/FieldWrapper/index.ts","tapis-ui/_common/FieldWrapper/FieldWrapper.tsx","tapis-ui/_common/PageLayout/PageLayout.tsx","tapis-ui/_common/LayoutSections/LayoutSections.tsx","tapis-ui/_common/Collapse/Collapse.tsx","tapis-ui/_common/JSONDisplay/JSONDisplay.tsx","tapis-ui/_common/JSONDisplay/index.tsx","tapis-ui/_common/Tabs/index.ts","tapis-ui/_common/Tabs/Tabs.tsx","tapis-ui/_wrappers/Navbar/Navbar.tsx","tapis-app/_components/Sidebar/Sidebar.tsx","tapis-api/authenticator/login.ts","tapis-api/authenticator/oAuthLogin.ts","tapis-hooks/authenticator/queryKeys.ts","tapis-hooks/authenticator/useLogin.ts","tapis-hooks/authenticator/useOAuthLogin.ts","tapis-api/apps/list.ts","tapis-api/apps/detail.ts","tapis-hooks/apps/queryKeys.ts","tapis-hooks/apps/useList.ts","tapis-hooks/apps/useDetail.ts","tapis-app/Apps/_components/AppsNav/AppsNav.tsx","tapis-app/Apps/_components/AppsNav/index.ts","tapis-api/jobs/list.ts","tapis-api/jobs/details.ts","tapis-api/jobs/submit.ts","tapis-hooks/jobs/queryKeys.ts","tapis-hooks/jobs/useList.ts","tapis-hooks/jobs/useDetails.ts","tapis-hooks/jobs/useSubmit.ts","tapis-ui/components/jobs/JobDetail/JobDetail.tsx","tapis-api/utils/jobFileInputs.ts","tapis-api/utils/jobFileInputArrays.ts","tapis-api/utils/jobArgs.ts","tapis-api/utils/jobDefaults.ts","tapis-ui/components/jobs/JobLauncher/components/StepSummaryField.tsx","tapis-ui/utils/withBuilder.tsx","tapis-ui/components/jobs/JobLauncher/components/useJobLauncher.tsx","tapis-ui/components/jobs/JobLauncher/steps/JobStart.tsx","tapis-app/Files/_components/Toolbar/_hooks/useFileOperations/index.ts","tapis-ui/components/jobs/JobLauncher/steps/utils.ts","tapis-ui/components/jobs/JobLauncher/steps/ExecOptions.tsx","tapis-ui/components/jobs/JobLauncher/steps/FileInputs.tsx","tapis-ui/components/jobs/JobLauncher/steps/FileInputArrays.tsx","tapis-ui/components/jobs/JobLauncher/steps/AppArgs.tsx","tapis-ui/components/jobs/JobLauncher/steps/EnvVariables.tsx","tapis-ui/components/jobs/JobLauncher/steps/SchedulerOptions.tsx","tapis-ui/components/jobs/JobLauncher/steps/Archive.tsx","tapis-api/utils/jobRequiredFields.ts","tapis-ui/components/jobs/JobLauncher/steps/JobSubmit.tsx","tapis-ui/components/jobs/JobLauncher/steps/index.ts","tapis-ui/components/jobs/JobLauncher/JobLauncherWizard.tsx","tapis-app/Apps/JobLauncher/_Layout/Layout.tsx","tapis-app/Apps/_Router/Router.tsx","tapis-app/Apps/_Layout/Layout.tsx","tapis-app/Login/_components/Login/index.ts","tapis-app/Login/_components/Login/Login.tsx","tapis-app/Login/_components/OAuthLogin/index.ts","tapis-app/Login/_components/OAuthLogin/OAuthLogin.tsx","tapis-app/Login/_Layout/Layout.tsx","tapis-app/Dashboard/_components/Dashboard/Dashboard.tsx","tapis-app/Jobs/_components/JobsNav/index.ts","tapis-app/Jobs/_components/JobsNav/JobsNav.tsx","tapis-app/Jobs/JobDetail/_Layout/Layout.tsx","tapis-app/Jobs/_Router/Router.tsx","tapis-app/Jobs/_Layout/Layout.tsx","tapis-app/Systems/_components/SystemsNav/index.ts","tapis-app/Systems/_components/SystemsNav/SystemsNav.tsx","tapis-app/Systems/_components/SystemToolbar/CreateSystemModal/Settings/Batch/BatchLogicalQueuesSettings.tsx","tapis-app/Systems/_components/SystemToolbar/CreateSystemModal/Settings/Batch/BatchSettings.tsx","tapis-app/Systems/_components/SystemToolbar/CreateSystemModal/Settings/ProxySettings.tsx","tapis-app/Systems/_components/SystemToolbar/CreateSystemModal/Settings/DtnSettings.tsx","tapis-app/Systems/_components/SystemToolbar/CreateSystemModal/Settings/CmdSettings.tsx","tapis-app/Systems/_components/SystemToolbar/CreateSystemModal/Settings/TagsSettings.tsx","tapis-app/Systems/_components/SystemToolbar/CreateSystemModal/Settings/Job/JobEnvVariableSettings.tsx","tapis-app/Systems/_components/SystemToolbar/CreateSystemModal/Settings/Job/JobCapabilitiesSettings.tsx","tapis-app/Systems/_components/SystemToolbar/CreateSystemModal/Settings/Job/JobSettings.tsx","tapis-app/Systems/_components/SystemToolbar/CreateSystemModal/Settings/AdvancedSettings.tsx","tapis-app/Systems/_components/SystemToolbar/CreateSystemModal/CreateSystemModal.tsx","tapis-app/Systems/_components/SystemToolbar/CreateSystemModal/index.ts","tapis-app/Systems/_components/SystemToolbar/SystemToolbar.tsx","tapis-app/Systems/_components/SystemToolbar/index.ts","tapis-app/Systems/SystemDetail/_Layout/Layout.tsx","tapis-app/Systems/_Router/Router.tsx","tapis-app/Systems/_Layout/Layout.tsx","tapis-app/Files/_components/SystemsNav/index.ts","tapis-app/Files/_components/SystemsNav/SystemsNav.tsx","tapis-app/Files/_components/FilesContext/FilesContext.tsx","tapis-app/Files/_components/FilesContext/FilesProvider.tsx","tapis-app/Files/_components/FilesContext/useFilesSelect.ts","tapis-app/Files/FileListing/_Layout/Layout.tsx","tapis-app/Files/_Router/Router.tsx","tapis-app/Files/_components/Toolbar/CreateDirModal/index.ts","tapis-app/Files/_components/Toolbar/CreateDirModal/CreateDirModal.tsx","tapis-hooks/utils/useMutations.ts","tapis-app/Files/_components/Toolbar/_hooks/useFileOperations/useFileOperations.ts","tapis-app/Files/_components/Toolbar/UploadModal/UploadModal.tsx","tapis-app/Files/_components/Toolbar/_components/FileOperationStatus/index.ts","tapis-app/Files/_components/Toolbar/_components/FileOperationStatus/FileOperationStatus.tsx","tapis-app/Files/_components/Toolbar/MoveCopyModal/index.ts","tapis-app/Files/_components/Toolbar/MoveCopyModal/MoveCopyModal.tsx","tapis-app/Files/_components/Toolbar/RenameModal/index.ts","tapis-app/Files/_components/Toolbar/RenameModal/RenameModal.tsx","tapis-ui/_common/Progress/index.ts","tapis-ui/_common/Progress/Progress.tsx","tapis-app/Files/_components/Toolbar/UploadModal/index.js","tapis-app/Files/_components/Toolbar/PermissionsModal/index.ts","tapis-app/Files/_components/Toolbar/PermissionsModal/PermissionsModal.tsx","tapis-app/Files/_components/Toolbar/DeleteModal/index.ts","tapis-app/Files/_components/Toolbar/DeleteModal/DeleteModal.tsx","tapis-app/Files/_components/Toolbar/TransferModal/index.ts","tapis-app/Files/_components/Toolbar/TransferModal/TransferModal.tsx","tapis-app/_components/Notifications/NotificationToast.tsx","tapis-app/_components/Notifications/NotificationsContext.tsx","tapis-app/_components/Notifications/useNotifications.ts","tapis-app/_components/Notifications/NotificationsProvider.tsx","tapis-app/Files/_components/Toolbar/Toolbar.tsx","tapis-app/Files/_components/Toolbar/index.ts","tapis-app/Files/_Layout/Layout.tsx","tapis-app/UIPatterns/UIPatternsMessage/UIPatternsMessage.js","tapis-app/UIPatterns/UIPatternsDescriptionList/UIPatternsDescriptionList.js","tapis-app/UIPatterns/UIPatternsDropdownSelector/UIPatternsDropdownSelector.js","tapis-app/UIPatterns/UIPatternsPill/UIPatternsPill.js","tapis-app/UIPatterns/UIPatternsReadMore/UIPatternsReadMore.js","tapis-app/UIPatterns/UIPatterns.js","tapis-app/_Router/Router.tsx","tapis-app/_Layout/index.ts","tapis-app/_Layout/Layout.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","authContext","basePath","TapisContext","React","createContext","useTapisConfig","useContext","getAccessToken","cookie","Cookies","get","JSON","parse","useQuery","initialData","data","refetch","accessToken","setAccessToken","resp","a","remove","expires","Date","expires_at","set","stringify","claims","access_token","jwt_decode","TapisProvider","token","children","contextValue","queryClient","QueryClient","Provider","value","QueryClientProvider","client","BreadcrumbFragment","to","onClick","text","className","styles","fragment","Button","color","link","e","preventDefault","Breadcrumbs","breadcrumbs","truncate","truncatedBreadcrumbs","length","slice","push","box","map","item","index","uuidv4","useModal","useState","modal","setModal","open","useCallback","close","GenericModal","toggle","title","body","footer","props","Modal","isOpen","ModalHeader","charCode","ModalBody","ModalFooter","LoadingSpinner","placement","Spinner","defaultProps","DASHBOARD","DATA","ALLOCATIONS","APPLICATIONS","HISTORY","ACCOUNT","TICKETS","UI","SectionMessages","routeName","welcomeMessageText","welcomeText","MESSAGES","welcomeMessageName","welcomeMessage","messageName","hasMessage","useShouldShowWelcomeMessage","hasMessageClass","useEffect","document","classList","add","root","LAYOUT_CLASS_MAP","oneRow","oneColumn","twoColumn","Object","keys","SectionContent","styleName","layoutName","shouldScroll","shouldDebugLayout","tagName","styleNameList","layoutClass","TagName","layoutStyles","join","Section","bodyClassName","content","contentClassName","contentLayoutName","contentShouldScroll","header","headerActions","headerClassName","manualContent","manualHeader","messages","messagesClassName","shouldBuildHeader","Error","actions","undefined","SectionHeader","isForForm","isForTable","HeadingTagName","heading","InfiniteScrollLoadingRow","isLoading","InfiniteScrollNoDataRow","display","noDataText","InfiniteScrollTable","tableColumns","tableData","onInfiniteScroll","getRowProps","columnMemoProps","columns","useMemo","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","onScroll","target","scrollHeight","scrollTop","clientHeight","row","cells","cell","getCellProps","offset","Icon","name","iconClassName","fullClassName","label","role","Expand","detail","message","setIsOpen","toggleCallback","Card","container","CardHeader","summary","tag","CardBody","ERROR_TEXT","TYPE_MAP","info","iconName","iconText","success","warning","error","warn","SCOPE_MAP","inline","section","Message","onDismiss","canDismiss","isVisible","scope","type","typeMap","scopeMap","typeClassName","scopeClassName","hasDismissSupport","console","modifierClassNames","containerStyleNames","fadeProps","Fade","unmountOnExit","baseClass","timeout","in","icon","InlineMessage","messageProps","SectionMessage","setIsVisible","DIRECTION_CLASS_MAP","vertical","horizontal","DEFAULT_DIRECTION","DENSITY_CLASS_MAP","compact","default","DEFAULT_DENSITY","DescriptionListArray","val","key","DescriptionListValue","Array","isArray","Set","from","DescriptionList","density","direction","modifierClasses","entries","Fragment","DropdownSelector","onChange","canSelectMany","multiple","useShouldShowMessage","welcomeMessages","WelcomeMessage","shouldShow","Alert","Pill","shouldTruncate","pillStyleName","TextCopyField","placeholder","isCopied","setIsCopied","onCopy","setTimeout","clearTimeout","stateTimeout","transitionDuration","isEmpty","style","disabled","event","input","readOnly","ReadMore","expanded","setExpanded","useResizeDetector","height","ref","hasOverflow","current","clamped","PaginatorPage","number","callback","page","Paginator","start","end","pages","spread","delta","Math","floor","middle","middlePages","fill","_","endcap","ProtectedRoute","rest","location","pathname","state","CopyButton","size","FieldWrapper","required","description","isHidden","Component","as","useField","meta","FormGroup","Label","alignItems","htmlFor","Badge","marginLeft","id","FormText","FormikInput","formikProps","Input","bsSize","memo","setFieldValue","formikContext","field","shouldValidate","setValues","validateForm","validateOnChange","values","setInValues","obj","path","res","clone","resVal","i","pathArray","toPath","currentPath","currentObj","getIn","isObject","nextPath","isInteger","Number","setIn","FormikSelect","useFormikContext","otherFormikProps","FormikCheck","check","nospace","checked","apiGenerator","api","jwt","Configuration","errorDecoder","func","result","json","list","params","Files","FileOperationsApi","listFiles","mkdir","systemId","mkdirRequest","moveCopy","newPath","operation","moveCopyRequest","insert","file","progressCallback","url","formData","FormData","append","config","onUploadProgress","progressEvent","progress","round","loaded","total","axios","post","stat","getStatInfo","permissions","PermissionsApi","getPermissions","nativeOp","recursive","argument","nativeLinuxOpRequest","runLinuxNativeOp","deleteFile","_delete","downloadStream","destination","zip","onStart","fileStream","StreamSaver","createWriteStream","fetch","then","response","readableStream","window","WritableStream","pipeTo","writer","getWriter","reader","getReader","pump","read","done","write","concatResults","reduce","accumulator","concat","tapisNextPageParam","lastPage","allPages","limit","QueryKeys","move","copy","insertAxios","delete","download","useList","options","useInfiniteQuery","pageParam","getNextPageParam","enabled","concatenatedResults","useMkdir","useMutation","mutate","isError","isSuccess","reset","useMove","MoveCopyRequestOperationEnum","Move","mutateAsync","moveAsync","useCopy","Copy","copyAsync","useUpload","uploadFile","uploadAsync","useStat","usePermissions","useNativeOp","nativeOpAsync","useDelete","deleteFileAsync","useDownload","downloadAsync","QueryWrapper","SubmitWrapper","reverse","wrapper","WizardContext","WizardNavigation","currentStep","previousStep","totalSteps","nextStep","goToStep","handleSubmit","onContinue","errors","onSkip","controls","WizardSummary","steps","goToNamedStep","editCallback","stepId","step","edit","StepContainer","formSubmit","validationSchema","initialValues","validate","onSubmit","enableReinitialize","Wizard","stepWizardProps","setStepWizardProps","instanceCallback","stepChangeCallback","activeStep","instance","onStepChange","transitions","stepName","createSizeString","bytes","log","bytesString","toFixed","formatDateTimeFromValue","dateTimeValue","dateTime","date","toLocaleDateString","day","month","year","formatDate","toLocaleTimeString","hour12","hour","minute","formatTime","ValidateExecSystemResult","Systems","SystemsApi","getSystems","details","getSystem","listSchedulerProfiles","SchedulerProfilesApi","getSchedulerProfiles","createCredentials","CredentialsApi","createUserCredential","makeNewSystem","reqPostSystem","skipCredentialCheck","createSystem","defaultParams","listType","ListTypeEnum","All","useDetails","useSchedulerProfiles","useCreateCredentials","useMakeNewSystem","Password","Token","PkiKeys","system","whiteSpace","href","rel","host","Cert","AccessKey","AddCredentials","select","isPassword","defaultAuthnMethod","AuthnEnum","isPkiKeys","isAccessKey","isToken","isCert","currentUsername","loginSchema","Yup","username","password","privateKey","publicKey","accessKey","accessSecret","refreshToken","certificate","userName","reqUpdateCredential","loginUser","FileListingDir","onNavigate","dir","stopPropagation","FileListingCheckboxCell","selected","filledSquare","faCheckSquare","faSquare","FileListingName","FileListingTable","files","prependColumns","appendColumns","selectMode","fields","mode","Header","accessor","Cell","el","original","some","sizeFormat","FileSelectHeader","onSelectAll","onUnselectAll","selectedFileDict","setChecked","allSelected","FileListing","onSelect","onUnselect","selectedFiles","hasNextPage","fetchNextPage","isFetchingNextPage","infiniteScrollCallback","selectedDict","forEach","types","fileSelectCallback","allowed","includes","FileStat","FileOperation","onSuccess","focusManager","setFocused","NativeLinuxOpRequestOperationEnum","Chmod","Chown","Chgrp","create","transferTaskRequest","TransfersApi","createTransferTask","getRecentTransferTasks","cancel","transferTaskId","cancelTransferTask","getTransferTaskDetails","useCreate","request","cancelAsync","TransferListing","selectedTransfer","setSelectedTransfer","selectWrapper","transfer","systems","uuid","selectable","SystemDetail","task","TransferCancel","detailsIsLoading","detailsError","cancelable","TransferTaskStatusEnum","Accepted","InProgress","Paused","Staged","Staging","status","useCancel","TransferCreate","sourceSystemId","destinationSystemId","destinationPath","destinationURI","elements","sourceURI","breadcrumbsFromPathname","items","pathParts","split","normalize","tabs","Details","SystemListingItem","SystemListing","selectedSystem","setSelectedSystem","FileExplorer","allowSystemChange","currentSystem","setCurrentSystem","setCurrentPath","targetBreadcrumbs","setTargetBreadcrumbs","onFileNavigate","onSystemNavigate","onBreadcrumbNavigate","newCrumbs","breadcrumb","unshift","FileSelectModal","initialSelection","setSelectedFiles","dirSelectMode","fileExplorerSelectCallback","fileExplorerUnselectCallback","filter","unselected","fileExplorerNavigateCallback","selectButtonCallback","selectionNames","selectType","pathToFile","pathParent","parentDir","FormikTapisFileInput","dirs","setValue","uri","match","filePath","parent","parseTapisURI","parsedSystemId","InputGroup","InputGroupAddon","addonType","FormikTapisFile","Layout","left","right","top","bottom","constrain","LayoutHeader","LayoutNavWrapper","nav","LayoutBody","Collapse","note","requiredText","isCollapsable","marginBottom","expand","simplifyObject","simplifiedValue","convertSets","JSONDisplay","simplified","setSimplified","jsonString","Tabs","tabNames","activeTab","setActiveTab","getTabClassname","tabName","tab","active","Nav","NavLink","TabContent","TabPane","tabId","pane","NavItem","activeClassName","exact","Navbar","Sidebar","login","reqCreateToken","grant_type","Authenticator","TokensApi","createToken","oAuthLogin","code","redirect_uri","useLogin","logout","useOAuthLogin","Apps","ApplicationsApi","getApps","getApp","useDetail","AppsNav","refetchOnWindowFocus","useRouteMatch","appList","app","version","Jobs","JobsApi","getJobList","getJob","submit","submitJob","reqSubmitJob","orderBy","jobUuid","useSubmit","appId","appVersion","JobDetail","job","execSystemOutputDir","execSystemId","getIncompleteAppInputs","jobAttributes","fileInputs","fileInput","sourceUrl","generateFileInputFromAppInput","targetPath","autoMountLocal","generateRequiredFileInputsFromApp","inputMode","FileInputModeEnum","Required","appFileInput","fileInputsComplete","inputType","getIncompleteAppInputsOfType","requiredInput","jobFileInput","find","optionalAppInputs","optionalJobInputs","optionalAppInput","jobInput","namedInputs","otherInput","getIncompleteAppInputArrays","fileInputArrays","sourceUrls","generateFileInputArrayFromAppInput","targetDir","generateRequiredFileInputArraysFromApp","appFileInputArray","fileInputArraysComplete","getIncompleteAppInputArraysOfType","requiredInputArray","jobFileInputArray","optionalAppInputArrays","optionalJobInputArrays","optionalAppInputArray","jobInputArray","otherInputArray","getArgMode","argSpecs","spec","argSpec","generateJobArgsFromSpec","arg","include","ArgInputModeEnum","IncludeOnDemand","generateJobArg","generateJobDefaults","archiveOnAppError","archiveSystemId","archiveSystemDir","nodeCount","coresPerNode","jobType","memoryMB","maxMinutes","isMpi","mpiCmd","cmdPrefix","parameterSet","appArgs","containerArgs","schedulerOptions","archiveFilter","envVariables","JobStartSummary","withBuilder","context","clear","useBuilderContext","useReducer","payload","action","dispatch","JobLauncherContext","schedulerProfiles","JobLauncherProvider","defaultValues","useJobLauncher","JobStart","StepSummaryField","min","max","generateInitialValues","computeDefaultSystem","source","computeDefaultQueue","execSystemLogicalQueue","queue","batchDefaultLogicalQueue","appSystem","computeDefaultJobType","canRunBatch","JobTypeEnum","Batch","Fork","FileOpEventStatusEnum","validateExecSystem","defaultSystem","ErrorNoExecSystem","computedSystem","ErrorExecSystemNotFound","computedJobType","Complete","batchLogicalQueues","ErrorExecSystemNoQueues","defaultQueue","ErrorNoQueue","ErrorQueueNotFound","capitalize","str","charAt","toUpperCase","getLogicalQueues","SystemSelector","queues","setQueues","selectableSystems","setSelectableSystems","systemSource","defaultSystemLabel","queueSource","defaultQueueLabel","jobTypeSource","defaultJobTypeLabel","isBatch","validSystems","fieldArrayStyles","ExecSystemDirs","ExecSystemQueueOptions","queueErrors","hasErrors","MPIOptions","ExecOptions","ExecOptionsSummary","computedQueue","execSystemExecDir","execSystemInputDir","validateThunk","validation","computedExecSystem","computedLogicalQueue","maxNodeCount","minNodeCount","maxCoresPerNode","minCoresPerNode","maxMemoryMB","minMemoryMB","minMinutes","JobInputField","appInput","isRequired","lower","toLowerCase","upperCaseFirstLetter","getFileInputsOfMode","OptionalInput","included","onInclude","defaultValue","OptionalInputs","arrayHelpers","optionalInputs","Optional","formFileInputs","array","optionalInput","alreadyIncluded","FixedInput","FixedInputs","fixedInputs","Fixed","fixedInput","JobInputs","requiredInputs","jobInputs","FileInputs","FileInputsSummary","jobFileInputs","appFileInputs","missingRequiredInputs","incompleteJobInputs","incompleteRequiredAppInputs","incompleteRequiredJobInputs","incompleteOptionalAppInputs","incompleteOptionalJobInputs","incompleteUserInputs","getIncompleteJobInputs","includedByDefault","includedInJob","getAppInputsIncludedByDefault","complete","incompleteInput","requiredFileInput","defaultInput","shape","of","SourceUrlsField","fileInputArrayIndex","newSourceUrl","arrayStyles","sourceUrlIndex","sourceUrlName","formStyles","JobInputArrayField","getFileInputArraysOfMode","appInputArray","OptionalInputArray","inputArray","OptionalInputArrays","optionalInputArrays","formFileInputArrays","optionalInputArray","FixedInputArray","FixedInputArrays","fixedInputArrays","fixedInputArray","JobInputArrays","requiredInputArrays","jobInputArrays","FileInputArrays","FileInputArraysSummary","jobFileInputArrays","appFileInputArrays","missingRequiredInputArrays","incompleteJobInputArrays","incompleteRequiredAppInputArrays","incompleteRequiredJobInputArrays","incompleteOptionalAppInputArrays","incompleteOptionalJobInputArrays","incompleteUserInputArrays","getIncompleteJobInputArrays","getAppInputArraysIncludedByDefault","ArgField","argType","argName","ArgsFieldArray","args","argsSchema","Args","appArgSpecs","containerArgSpecs","assembleArgSpec","previous","ArgsSummary","scheduleOptions","EnvVariableField","EnvVariablesRender","envVariable","EnvVariables","EnvVariablesSummary","findSchedulerProfile","profile","SchedulerProfiles","setSchedulerProfile","newProfile","existing","currentProfile","hiddenOptions","moduleLoads","owner","tenant","SchedulerOptionArray","schedulerOptionSpecs","SchedulerOptions","SchedulerOptionsSummary","ArrayGroup","ArchiveFilterRender","excludes","ArchiveOptions","Archive","ArchiveSummary","includeLaunchFiles","jobRequiredFieldsComplete","JobSubmit","isComplete","JobSubmitSummary","jobSteps","AppArgs","JobLauncherWizardRender","jobStep","stepProps","JobLauncherWizard","useAppDetail","useSystemsList","systemsData","systemsIsLoading","systemsError","schedulerProfilesData","schedulerProfilesIsLoading","schedulerProfilesError","flex","PageLayout","Router","sidebar","Login","replace","OAuthLogin","queryString","substring","indexOf","lastIndexOf","useLocation","DashboardCard","counter","loading","card","CardTitle","CardText","CardFooter","Dashboard","jobs","useJobsList","apps","useAppsList","cards","textDecoration","JobsNav","jobsList","SystemsNav","definitions","BatchLogicalQueuesField","BatchLogicalQueuesInputs","batchLogicalQueuesInput","BatchLogicalQueuesSettings","schedulerTypes","SchedulerTypeEnum","BatchSettings","isLinux","systemType","SystemTypeEnum","Linux","ProxySettings","useProxy","DtnSettings","isDtn","canExec","CmdSettings","TagsField","TagsInputs","tags","tagInput","TagsSettings","JobEnvVariablesField","JobEnvVariablesInputs","jobEnvVariables","jobEnvVariablesInput","JobEnvVariablesSettings","categories","CategoryEnum","datatypes","DatatypeEnum","JobCapabilitiesField","JobCapabilitiesInputs","jobCapabilities","jobCapabilitiesInput","JobCapabilitiesSettings","JobSettings","runtimeTypes","RuntimeTypeEnum","AdvancedSettings","isS3","S3","runtimeType","jobRuntimes","systemTypes","authnMethods","CreateSystemModal","useQueryClient","invalidateQueries","queryKeys","sysname","matches","rootDir","jobWorkingDir","effectiveUserId","batchSchedulerProfile","proxyHost","dtnSystemId","Singularity","bucketName","batchScheduler","Slurm","hpcQueueName","maxJobs","maxJobsPerUser","proxyPort","dtnMountPoint","dtnMountSourcePath","enableCmdPrefix","jobMaxJobs","jobMaxJobsPerUser","form","ToolbarButton","SystemToolbar","filesContext","FilesContext","FilesProvider","useFilesSelect","selectedSet","newSelection","has","unselect","systemPath","CreateDirModal","dirname","useMutations","fn","onError","onComplete","setIsLoading","isFinished","setIsFinished","run","pipe","concatMap","catch","subscribe","useFileOperations","started","setStarted","errorEntry","FileOpEventStatus","FileOperationStatus","MoveCopyModal","setDestinationPath","opFormatted","removeFile","operations","statusColumns","splice","RenameModal","inputName","setInputName","newname","dirOrFile","Progress","showProgress","UploadModal","maxFileSizeBytes","setFiles","fileProgressState","onProgress","uploadProgress","onDrop","uniqueFiles","selectedFile","existingFile","useDropzone","getRootProps","getInputProps","checkFile","filesToFileInfo","filesArr","statusColumn","PermissionsModal","permission","FilePermissionPermissionEnum","Modify","Info","DeleteModal","CopyMoveModal","setDestination","setTransfer","interval","setInterval","clearInterval","createTransferTab","listTransfersTab","TransferDetails","ToastMessage","notification","NotificationToast","useNotifications","notifications","markread","setOpen","notificationRecord","setNotificationRecord","transition","setTransition","Slide","Snackbar","anchorOrigin","TransitionComponent","autoHideDuration","onClose","_event","reason","TransitionProps","onExited","classes","anchorOriginBottomLeft","ContentProps","notificationsContext","NotificationsContext","reducer","findIndex","NotificationsProvider","Toolbar","onDownload","isZip","crumbs","EXAMPLE_LINK","short","long","EXAMPLE_TEXT","NOTIFICATION_TEXT","UIPatternsMessages","secondary","rowSpan","Username","Prefix","Name","Suffix","UIPatternsDropdownSelector","UIPatternsPill","UIPatternsReadMore","UIPatterns","UIPatternsMessage","UIPatternsDescriptionList","App","history","useHistory","src","alt","ButtonDropdown","DropdownToggle","caret","DropdownMenu","maxHeight","overflowY","DropdownItem","workbenchContent","flexGrow","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b0605a8f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Paginator_root__1z-Ua\",\"endcap\":\"Paginator_endcap__2RO8F\",\"page-root\":\"Paginator_page-root__3Gjsi\",\"page\":\"Paginator_page__PkH6m\",\"current\":\"Paginator_current__82eHE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cards\":\"Dashboard_cards__2FNuR\",\"card\":\"Dashboard_card__1MOwv\",\"card-header\":\"Dashboard_card-header__1gMPI\",\"card-footer\":\"Dashboard_card-footer__ByrWr\",\"header\":\"Dashboard_header__2o3jP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"col-header\":\"MoveCopyModal_col-header__BpJPI\",\"file-list\":\"MoveCopyModal_file-list__3ssMt\",\"file-list-origin\":\"MoveCopyModal_file-list-origin__95st0\",\"nav-list\":\"MoveCopyModal_nav-list__2tObI\",\"remove-file\":\"MoveCopyModal_remove-file__3o70F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification-toast-container\":\"NotificationToast_notification-toast-container__3v4Cz\",\"MuiSnackbar-anchorOriginBottomLeft\":\"NotificationToast_MuiSnackbar-anchorOriginBottomLeft__gSrzM\",\"notification-toast\":\"NotificationToast_notification-toast__3Usjp\",\"MuiSnackbarContent-root\":\"NotificationToast_MuiSnackbarContent-root__3IttC\",\"toast-is-error\":\"NotificationToast_toast-is-error__1BIGF\",\"notification-toast-body\":\"NotificationToast_notification-toast-body__wL5Kk\",\"MuiSnackbarContent-message\":\"NotificationToast_MuiSnackbarContent-message__2I5ZD\",\"notification-toast-icon-wrapper\":\"NotificationToast_notification-toast-icon-wrapper__2KxSt\",\"notification-toast-content\":\"NotificationToast_notification-toast-content__YS-pU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"Breadcrumbs_box__3k9X9\",\"fragment\":\"Breadcrumbs_fragment__1MgSp\",\"link\":\"Breadcrumbs_link__17cDm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"TextCopyField_input__1fztk bootstrap_form_form-control__3JyGg\",\"copy-button\":\"TextCopyField_copy-button__IUKh4 c-button_c-button--secondary__22Cay\",\"is-copied\":\"TextCopyField_is-copied__18hMg\",\"button__icon\":\"TextCopyField_button__icon__aIDYM c-button_c-button__icon--before__2PDTf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"file-list\":\"FileListing_file-list__3wKB2\",\"file-list-select\":\"FileListing_file-list-select__13QfA\",\"link\":\"FileListing_link__2fi8N\",\"selected\":\"FileListing_selected__3F9id\",\"select-all\":\"FileListing_select-all__1TgE2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"LayoutSections_body__MIAF2\",\"constrain\":\"LayoutSections_constrain__O1u_3\",\"nav\":\"LayoutSections_nav__1qrzp\",\"detail\":\"LayoutSections_detail__35AJZ\",\"sub-header\":\"LayoutSections_sub-header__NJoO1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav-list\":\"Navbar_nav-list__3MPLr\",\"nav-link\":\"Navbar_nav-link__3WfXQ\",\"active\":\"Navbar_active__1wiRk\",\"nav-text\":\"Navbar_nav-text__2CNK9\",\"nav-content\":\"Navbar_nav-content__1z1nH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"UIPatternsMessage_container__2KK1-\",\"is-row-end\":\"UIPatternsMessage_is-row-end__3M7kw\",\"secondary\":\"UIPatternsMessage_secondary__L-0th\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item-narrow\":\"UIPatternsDescriptionList_item-narrow__-Sesu\",\"item-x-narrow\":\"UIPatternsDescriptionList_item-x-narrow__2FhXS\",\"list-cols\":\"UIPatternsDescriptionList_list-cols__3bTVt\",\"list-rows\":\"UIPatternsDescriptionList_list-rows__1LLfu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Section_root__oT5mq\",\"messages\":\"Section_messages__1MPS4\",\"header\":\"Section_header__2Nj4s\",\"content\":\"Section_content__23BLV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"SectionHeader_root__2kXRe\",\"heading\":\"SectionHeader_heading__UPEP-\",\"for-form\":\"SectionHeader_for-form__2aqji\",\"for-table\":\"SectionHeader_for-table__3uH99\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"CopyButton_input__3oXnS bootstrap_form_form-control__3JyGg\",\"copy-button\":\"CopyButton_copy-button__3EjZN c-button_c-button--secondary__22Cay\",\"is-copied\":\"CopyButton_is-copied__718oW\",\"button__icon\":\"CopyButton_button__icon__1g2Y0 c-button_c-button__icon--before__2PDTf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout-root\":\"PageLayout_layout-root__FslDW\",\"layout-row\":\"PageLayout_layout-row__3jGem\",\"constrain\":\"PageLayout_constrain__ykrk3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Collapse_header__1_MCS\",\"controls\":\"Collapse_controls__2yEk7\",\"expand\":\"Collapse_expand__30LD1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Expand_container__3sl_d\",\"summary\":\"Expand_summary__34ijc\",\"header\":\"Expand_header__25VB9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"SubmitWrapper_wrapper__3HLGZ\",\"loading-spinner\":\"SubmitWrapper_loading-spinner__24zAp\",\"reverse\":\"SubmitWrapper_reverse__rt176\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transfer-list\":\"TransferListing_transfer-list__3dWTu\",\"selected\":\"TransferListing_selected__39zTf\",\"link\":\"TransferListing_link__1d1go\",\"selectable\":\"TransferListing_selectable__IQrXG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"system-list\":\"SystemListing_system-list__1AbHy\",\"selected\":\"SystemListing_selected__2R8HQ\",\"link\":\"SystemListing_link__1IJy2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tab\":\"Tabs_tab__3sagy\",\"active\":\"Tabs_active__DkH7u\",\"pane\":\"Tabs_pane__1GuLn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"progress-bar\":\"Progress_progress-bar__tPWYD\",\"inner-bar\":\"Progress_inner-bar__30Z1h\",\"overlay\":\"Progress_overlay__1YNMo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"file-list-table\":\"DeleteModal_file-list-table__3q9fY\",\"remove-file\":\"DeleteModal_remove-file__Q1Yuu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"SectionContent_root__1FxyJ\",\"should-scroll\":\"SectionContent_should-scroll__3dKfI\",\"should-debug-layout\":\"SectionContent_should-debug-layout__LG4ti\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"clamped\":\"ReadMore_clamped__1L0vp\",\"expanded\":\"ReadMore_expanded__3Wo7t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nospace\":\"FormikCheck_nospace__18S9a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"file-list\":\"FileExplorer_file-list__2qwEM\",\"nav-list\":\"FileExplorer_nav-list__18Pqu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"json\":\"JSONDisplay_json__30aIw\",\"controls\":\"JSONDisplay_controls__28heq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"scheduler-option\":\"SchedulerOptions_scheduler-option__26ljV\",\"scheduler-option-list\":\"SchedulerOptions_scheduler-option-list__3lnS1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toolbar-wrapper\":\"SystemToolbar_toolbar-wrapper__31xGQ\",\"toolbar-btn\":\"SystemToolbar_toolbar-btn__38bbn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"Layout_body__1gtCR\",\"container\":\"Layout_container__3wytJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toolbar-wrapper\":\"Toolbar_toolbar-wrapper__2L4Vw\",\"toolbar-btn\":\"Toolbar_toolbar-btn__1UQBN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"array\":\"FieldArray_array__1FdXA\",\"item\":\"FieldArray_item__3igsS\",\"array-group\":\"FieldArray_array-group__TnXNf\",\"description\":\"FieldArray_description__3gmsr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Sidebar_root__XkIbE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"SectionMessages_root__31Az9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"one-row\":\"SectionContent_layouts_one-row__2bgYF\",\"one-column\":\"SectionContent_layouts_one-column__1WdLz\",\"two-column\":\"SectionContent_layouts_two-column__3n1EU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"DropdownSelector_container___L3s8 bootstrap_form_form-control__3JyGg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Pill_root__20jYh\",\"should-truncate\":\"Pill_should-truncate__3G_4O\",\"is-danger\":\"Pill_is-danger__RWDLI\",\"is-success\":\"Pill_is-success__3i8Z2\",\"is-warning\":\"Pill_is-warning__2ghgs\",\"is-normal\":\"Pill_is-normal__3e2Uh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sourceUrls\":\"FileInputArrays_sourceUrls__21S5-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tab\":\"PermissionsModal_tab__1MAcr\",\"active\":\"PermissionsModal_active__H58iE\",\"tab-content\":\"PermissionsModal_tab-content__2QObh\",\"list-content\":\"PermissionsModal_list-content__KtOVc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"breadcrumbs\":\"Layout_breadcrumbs__C5-FT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"UIPatternsReadMore_root__1rUhg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal-settings\":\"CreateSystemModal_modal-settings__P6why\",\"item\":\"CreateSystemModal_item__1CtON\",\"array\":\"CreateSystemModal_array__1Dkce\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"col-header\":\"TransferModal_col-header__2R25o\",\"file-list\":\"TransferModal_file-list__2symZ\",\"file-list-origin\":\"TransferModal_file-list-origin__yo8K4\",\"nav-list\":\"TransferModal_nav-list__35PBl\",\"transfer-list\":\"TransferModal_transfer-list__m1564\",\"body\":\"TransferModal_body__3u0Rq\",\"pane\":\"TransferModal_pane__1Hlc7\",\"transfer-detail\":\"TransferModal_transfer-detail__3L68M\",\"transfer-cancel\":\"TransferModal_transfer-cancel__3kWDP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Wizard_container__3nypl\",\"step-summary\":\"Wizard_step-summary__3jbjG\",\"name\":\"Wizard_name__3gSp9\",\"content\":\"Wizard_content__2MstC\",\"edit\":\"Wizard_edit__afhEW\",\"step\":\"Wizard_step__22G1J\",\"controls\":\"Wizard_controls__3LG1r\",\"submit\":\"Wizard_submit__2MBIS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"UIPatterns_container__1wOgY\",\"header\":\"UIPatterns_header__2GSY0\",\"grid-item\":\"UIPatterns_grid-item__1IjYy\",\"items\":\"UIPatterns_items__1Szqz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form-field__label\":\"FieldWrapperFormik_form-field__label__12sZb\",\"form-field__help\":\"FieldWrapperFormik_form-field__help__1XKbr\",\"form-field__validation-error\":\"FieldWrapperFormik_form-field__validation-error__n8UUS\",\"hidden\":\"FieldWrapperFormik_hidden__2lmNK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Message_container__PHGJX\",\"is-scope-inline\":\"Message_is-scope-inline__2uX3B\",\"is-scope-section\":\"Message_is-scope-section__2DGew\",\"text\":\"Message_text__11RO7\",\"type-icon\":\"Message_type-icon__26GVH\",\"close-button\":\"Message_close-button__22u4_\",\"is-info\":\"Message_is-info__3EBl2\",\"icon\":\"Message_icon__1I81B\",\"is-warn\":\"Message_is-warn__2B5bs\",\"is-error\":\"Message_is-error__ILOSU\",\"is-success\":\"Message_is-success__xT7pL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"array-entry\":\"DescriptionList_array-entry__2R02r\",\"container\":\"DescriptionList_container__3IZeA\",\"is-horz\":\"DescriptionList_is-horz__2TeOi\",\"key\":\"DescriptionList_key__2XuAI\",\"value\":\"DescriptionList_value__1nG0K\",\"is-narrow\":\"DescriptionList_is-narrow__ikNw_\",\"is-wide\":\"DescriptionList_is-wide__FobkI\",\"is-vert\":\"DescriptionList_is-vert__2JNuC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"file-dropzone\":\"UploadModal_file-dropzone__17S0q\",\"files-list-header\":\"UploadModal_files-list-header__2ntgk\",\"files-list-container\":\"UploadModal_files-list-container__1js2n\",\"file-list-table\":\"UploadModal_file-list-table__1lOlU\",\"upload-error\":\"UploadModal_upload-error__3V1VQ\",\"remove-file\":\"UploadModal_remove-file__2Cq81\",\"progress-bar-container\":\"UploadModal_progress-bar-container__24cyZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"remove\":\"FileInputs_remove__2VlJN\",\"nospace\":\"FileInputs_nospace__wxRT1\",\"job-input\":\"FileInputs_job-input__1kRk4\"};","import React from 'react';\n\nexport type TapisContextType = {\n  basePath: string;\n};\n\nexport const authContext: TapisContextType = {\n  basePath: '',\n};\n\nconst TapisContext: React.Context<TapisContextType> =\n  React.createContext<TapisContextType>(authContext);\n\nexport default TapisContext;\n","import { useContext } from 'react';\nimport { useQuery } from 'react-query';\nimport Cookies from 'js-cookie';\nimport { Authenticator } from '@tapis/tapis-typescript';\nimport jwt_decode from 'jwt-decode';\nimport TapisContext from './TapisContext';\n\nconst useTapisConfig = () => {\n  const { basePath } = useContext(TapisContext);\n\n  const getAccessToken = ():\n    | Authenticator.NewAccessTokenResponse\n    | undefined => {\n    const cookie = Cookies.get('tapis-token');\n    if (!!cookie) return JSON.parse(cookie);\n    return undefined;\n  };\n\n  const { data, refetch } = useQuery<\n    Authenticator.NewAccessTokenResponse | undefined\n  >('tapis-token', getAccessToken, {\n    initialData: () => getAccessToken(),\n  });\n\n  const setAccessToken = async (\n    resp: Authenticator.NewAccessTokenResponse | null | undefined\n  ): Promise<void> => {\n    if (!resp) {\n      Cookies.remove('tapis-token');\n      await refetch();\n      return;\n    }\n    const expires = new Date(resp.expires_at ?? 0);\n    Cookies.set('tapis-token', JSON.stringify(resp), { expires });\n    await refetch();\n  };\n\n  const claims: { [key: string]: any } = data?.access_token\n    ? jwt_decode(data?.access_token)\n    : {};\n\n  return {\n    basePath,\n    accessToken: data,\n    setAccessToken,\n    claims,\n  };\n};\n\nexport default useTapisConfig;\n","import { default as TapisProvider } from './TapisProvider';\n\nexport default TapisProvider;\n","import React from 'react';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport { Authenticator } from '@tapis/tapis-typescript';\nimport TapisContext, { TapisContextType } from '../context/TapisContext';\n\ninterface TapisProviderProps {\n  token?: Authenticator.NewAccessTokenResponse;\n  basePath: string;\n}\n\nconst TapisProvider: React.FC<React.PropsWithChildren<TapisProviderProps>> = ({\n  token,\n  basePath,\n  children,\n}) => {\n  // Provide a context state for the rest of the application, including\n  // a way of modifying the state\n  const contextValue: TapisContextType = {\n    basePath,\n  };\n\n  // react-query client\n  const queryClient = new QueryClient();\n\n  return (\n    <TapisContext.Provider value={contextValue}>\n      <QueryClientProvider client={queryClient}>{children}</QueryClientProvider>\n    </TapisContext.Provider>\n  );\n};\n\nexport default TapisProvider;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Button } from 'reactstrap';\nimport styles from './Breadcrumbs.module.scss';\n\nexport type BreadcrumbType = {\n  to?: string;\n  onClick?: (to: string) => void;\n  text: string;\n};\n\nconst BreadcrumbFragment: React.FC<BreadcrumbType> = ({\n  to,\n  onClick,\n  text,\n}) => {\n  if (onClick) {\n    return (\n      <span className={styles.fragment}>\n        {' '}\n        <Button\n          color=\"link\"\n          className={styles.link}\n          onClick={(e) => {\n            e.preventDefault();\n            to && onClick(to);\n          }}\n        >\n          {text}\n        </Button>\n        &nbsp;/&nbsp;\n      </span>\n    );\n  }\n  if (to) {\n    return (\n      <span className={styles.fragment}>\n        <NavLink to={to}>{text}</NavLink>&nbsp;/&nbsp;\n      </span>\n    );\n  }\n\n  return (\n    <span className={styles.fragment}>\n      {text}&nbsp;{`${text !== '...' ? '/' : ''}`}&nbsp;\n    </span>\n  );\n};\n\ntype BreadcrumbsProps = {\n  breadcrumbs: Array<BreadcrumbType>;\n  truncate?: boolean;\n};\n\nconst Breadcrumbs: React.FC<BreadcrumbsProps> = ({ breadcrumbs, truncate }) => {\n  let truncatedBreadcrumbs = breadcrumbs;\n  if (truncate && breadcrumbs.length >= 5) {\n    // First 2 breadcrumbs\n    truncatedBreadcrumbs = [...breadcrumbs.slice(0, 2)];\n\n    // Ellipsis representing truncated breadcrumbs\n    truncatedBreadcrumbs.push({ text: '\\u2026' });\n\n    // Last 2 breadcrumbs\n    truncatedBreadcrumbs.push(\n      ...breadcrumbs.slice(breadcrumbs.length - 2, breadcrumbs.length)\n    );\n  }\n\n  return (\n    <div className={styles.box}>\n      {truncatedBreadcrumbs.map((item, index) => {\n        const { text, to, onClick } = item;\n        if (index === truncatedBreadcrumbs.length - 1) {\n          return <BreadcrumbFragment text={text} key={uuidv4()} />;\n        }\n        return (\n          <BreadcrumbFragment\n            text={text}\n            to={to}\n            onClick={onClick}\n            key={uuidv4()}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Breadcrumbs;\n","import Breadcrumbs from './Breadcrumbs';\n\nexport default Breadcrumbs;\n","import { useState, useCallback } from 'react';\n\nconst useModal = () => {\n  const [modal, setModal] = useState(false);\n  const open = useCallback(() => {\n    setModal(true);\n  }, [setModal]);\n  const close = useCallback(() => {\n    setModal(false);\n  }, [setModal]);\n  return {\n    modal,\n    open,\n    close,\n  };\n};\n\nexport default useModal;\n","import GenericModal from './GenericModal';\n\nexport default GenericModal;\nexport { default as useModal } from './useModal';\n","import React from 'react';\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nexport type GenericModalProps = {\n  toggle: () => void;\n  title: string;\n  body: React.ReactNode;\n  footer?: React.ReactNode;\n  [key: string]: any;\n};\n\nconst GenericModal: React.FC<GenericModalProps> = ({\n  toggle,\n  title,\n  body,\n  footer,\n  ...props\n}) => {\n  return (\n    <Modal isOpen={true} toggle={toggle} {...props}>\n      <ModalHeader toggle={toggle} charCode=\"&#x2715;\">\n        <span>{title}</span>\n      </ModalHeader>\n      <ModalBody>{body}</ModalBody>\n      {footer && <ModalFooter>{footer}</ModalFooter>}\n    </Modal>\n  );\n};\n\nexport default GenericModal;\n","import React from 'react';\nimport { Spinner } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport './LoadingSpinner.scss';\n\nconst LoadingSpinner = ({ placement, className }) => {\n  return (\n    <div className={`loading-icon ${className}`} data-testid=\"loading-spinner\">\n      <Spinner className={placement} />\n    </div>\n  );\n};\nLoadingSpinner.propTypes = {\n  placement: PropTypes.string,\n  className: PropTypes.string,\n};\nLoadingSpinner.defaultProps = {\n  placement: 'section',\n  className: '',\n};\n\nexport default LoadingSpinner;\n","import LoadingSpinner from './LoadingSpinner';\n\nexport default LoadingSpinner;\n","/**\n * Standard welcome message texts\n *\n * Notes:\n * - Each of these is expected-not-required to match a route from `./routes.js`.\n * - To customize message text (example: dynamic content) use `<Section>` props.\n */\nexport const DASHBOARD =\n  'This page allows you to monitor your job status, get help with tickets, and view the status of the High Performance Computing (HPC) systems.';\nexport const DATA = 'This page allows you to upload and manage your files.';\nexport const ALLOCATIONS =\n  'This page allows you to monitor the status of allocations on the HPC systems and view a breakdown of team usage.';\nexport const APPLICATIONS =\n  'This page allows you to submit jobs to the HPC systems or access Cloud services using a variety of applications.';\nexport const HISTORY =\n  'This page allows you to monitor a log of all previous job submissions.';\nexport const ACCOUNT =\n  'This page allows you to manage your account profile, change your password and view software licenses.';\nexport const TICKETS =\n  'This page allows you to submit a help request via an RT Ticket.';\nexport const UI =\n  'This hidden page allows developers to review UI components in isolation.';\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  WelcomeMessage,\n  useShouldShowMessage as useShouldShowWelcomeMessage,\n} from '..';\nimport * as MESSAGES from '../../_constants/welcomeMessages';\n\nimport styles from './SectionMessages.module.css';\nimport './SectionMessages.css';\n\n/**\n * A list for section messages that supports:\n *\n * - manual messages\n * - manual welcome message\n * - automatic welcome message\n * - automatic welcome message with custom text\n *\n * @example\n * // an automatic welcome message (if found), no additional messages\n * <SectionMessages routeName=\"DASHBOARD\" />\n * @example\n * // overwrite text of an automatic welcome message, no additional messages\n * <SectionMessages\n *   routeName=\"DASHBOARD\"\n *   welcomeText={`We welcome you to the dashboard, ${givenName}`} />\n * @example\n * // define text for a manual welcome message, no additional messages\n * <SectionMessages welcomeText={`We welcome you to this page, ${givenName}`} />\n * @example\n * // an automatic welcome message (if found), some additional messages\n * <SectionMessages routeName=\"DASHBOARD\">\n *   <Alert color=\"success\">You win!</Alert>\n *   <Alert color=\"secondary\">\n *     <button>Claim your prize.</button>\n *   </Alert>\n * </SectionMessages>\n * @example\n * // no automatic welcome message, some additional messages\n * <SectionMessages>\n *   <Alert color=\"success\">You win!</Alert>\n *   <Alert color=\"secondary\">\n *     <button>Claim your prize.</button>\n *   </Alert>\n * </SectionMessages>\n */\nfunction SectionMessages({ children, className, routeName, welcomeText }) {\n  const welcomeMessageText = welcomeText || MESSAGES[routeName];\n  /* FAQ: An alternate message name allows tracking custom message dismissal */\n  const welcomeMessageName = routeName || welcomeMessageText;\n  const welcomeMessage = welcomeMessageText && (\n    <WelcomeMessage messageName={welcomeMessageName}>\n      {welcomeMessageText}\n    </WelcomeMessage>\n  );\n  const hasMessage =\n    useShouldShowWelcomeMessage(routeName) || children.length > 0;\n  const hasMessageClass = 'has-message';\n\n  useEffect(() => {\n    if (hasMessage) {\n      document.body.classList.add(hasMessageClass);\n    } else {\n      document.body.classList.remove(hasMessageClass);\n    }\n  }, [hasMessage]);\n\n  return (\n    <aside className={`${styles.root} ${className}`}>\n      {welcomeMessage}\n      {children}\n    </aside>\n  );\n}\nSectionMessages.propTypes = {\n  /** Component-based message(s) (e.g. <Alert>, <Message>) (welcome message found automatically, given `routeName`) */\n  children: PropTypes.node,\n  /** Any additional className(s) for the root element */\n  className: PropTypes.string,\n  /** The name of the route section (to search for required welcome message) */\n  routeName: PropTypes.string,\n  /** Custom welcome text (can overwrite `routeName`-based welcome message) */\n  welcomeText: PropTypes.string,\n};\nSectionMessages.defaultProps = {\n  children: '',\n  className: '',\n  routeName: '',\n  welcomeText: '',\n};\n\nexport default SectionMessages;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n/* eslint-disable no-unused-vars */\nimport styles from './SectionContent.module.css';\nimport layoutStyles from './SectionContent.layouts.module.css';\n/* eslint-enable no-unused-vars */\n\n/**\n * Map of layout names to CSS classes\n * @enum {number}\n */\nexport const LAYOUT_CLASS_MAP = {\n  /** One full-height row of flexible blocks */\n  oneRow: 'one-row',\n  /** One full-width column of flexible blocks */\n  oneColumn: 'one-column',\n  /**\n   * Two left/right columns (wide/narrow) of flexible blocks\n   *\n   * (On narrow screens, this behaves like `oneColumn`)\n   */\n  twoColumn: 'two-column',\n};\nexport const DEFAULT_LAYOUT = 'oneRow';\nexport const LAYOUTS = [...Object.keys(LAYOUT_CLASS_MAP)];\n\n/**\n * A content panel wrapper that supports:\n *\n * - lay out panels (based on layout name and panel position)\n * - change element tag (like `section` instead of `div`)\n * - scroll root element (overflow of panel content is not managed)\n * - debug layout (via color-coded panels)\n *\n * @example\n * // features: lay out panels, change tag, allow content scroll, color-coded\n * <SectionContent\n *   layoutName=\"oneColumn\"\n *   tagName=\"main\",\n *   shouldScroll,\n *   shouldDebugLayout\n * >\n *   <div>Thing 1</div>\n *   <div>Thing 2</div>\n *   <div>Thing 3</div>\n * </SectionContent>\n */\nfunction SectionContent({\n  className,\n  children,\n  layoutName,\n  shouldScroll,\n  shouldDebugLayout,\n  tagName,\n}) {\n  let styleName = '';\n  const styleNameList = ['styles.root'];\n  const layoutClass = LAYOUT_CLASS_MAP[layoutName];\n  const TagName = tagName;\n\n  if (shouldScroll) styleNameList.push(styles['should-scroll']);\n  if (shouldDebugLayout) styleNameList.push(styles['should-debug-layout']);\n  if (layoutClass) styleNameList.push(layoutStyles[layoutClass]);\n\n  // Do not join inside JSX (otherwise arcane styleName error occurs)\n  styleName = styleNameList.join(' ');\n\n  return <TagName className={`${className} ${styleName}`}>{children}</TagName>;\n}\nSectionContent.propTypes = {\n  /** Any additional className(s) for the root element */\n  className: PropTypes.string,\n  /** Content nodes where each node is a block to be laid out */\n  children: PropTypes.node.isRequired,\n  /** The name of the layout by which to arrange the nodes */\n  layoutName: PropTypes.oneOf(LAYOUTS).isRequired,\n  /** Whether to allow root element to scroll */\n  shouldScroll: PropTypes.bool,\n  /** Whether to allow panel debugging (highlight each panel with unique hue) */\n  shouldDebugLayout: PropTypes.bool,\n  /** Override tag of the root element */\n  tagName: PropTypes.string,\n};\nSectionContent.defaultProps = {\n  className: '',\n  shouldScroll: false,\n  shouldDebugLayout: false,\n  tagName: 'div',\n};\n\nexport default SectionContent;\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { SectionHeader, SectionContent } from '..';\nimport SectionMessages from './SectionMessages';\nimport { LAYOUTS, DEFAULT_LAYOUT } from '../SectionContent';\n\nimport styles from './Section.module.css';\n\n/**\n * A section layout structure that supports:\n *\n * - messages (automatically loads welcome message)\n * - header (with actions, e.g. links, buttons, form)\n * - content (that will be arranged in the layout you choose)\n * - manual or automatic sub-components (i.e. header, content)\n *\n * @example\n * // manually build messages, automatically build welcome message\n * <Section\n *   routeName=\"DASHBOARD\"\n *   messages={<>…</>}\n * />\n * @example\n * // overwrite text of an automatic welcome message, no additional messages\n * <Section\n *   routeName=\"DASHBOARD\"\n *   welcomeMessageText={`We welcome you to the dashboard, ${givenName}`}\n * />\n * @example\n * // define text for a manual welcome message, no additional messages\n * <Section\n *   welcomeMessageText={`We welcome you to this page, ${givenName}`}\n * />\n * @example\n * // add class to <body>, automatically build sub-components\n * // FAQ: class on <body> + `Bob.global.css` + `body.global-bob-class`\n * //      = unlimited, explicit, isolated CSS side effects\n * <Section\n *   bodyClassName=\"has-loaded-some_section\"\n *   content={…}\n * />\n * @example\n * // automatically build sub-components, with some customization\n * <Section\n *   header=\"Dashboard\"\n *   headerStyleName=\"header\"\n *   headerActions={…}\n *   content={…}\n *   contentStyleName=\"items\"\n *   contentLayoutName=\"twoColumn\"\n * />\n * @example\n * // alternate syntax to automatically build content\n * <Section\n *   contentStyleName=\"items\"\n *   contentLayoutName=\"twoColumn\"\n * >\n *   {…} <!-- i.e. content -->\n * </Section>\n * @example\n * // manually build sub-components\n * // WARNING: This component's styles are NOT applied to manual sub-components\n * // FAQ: The <SectionHeader> offers auto-built header's layout styles\n * // FAQ: The <SectionContent> offers auto-built content's layout styles\n * <Section\n *   manualHeader={\n *     <SectionHeader {…} />\n *   }\n *   manualContent={\n *     <SectionContent {…} />\n *   }\n * />\n * @example\n * // manually build content (alternate method)\n * // WARNING: This component's styles are NOT applied to manual sub-components\n * // FAQ: The <SectionContent> offers auto-built content's layout options\n * <Section manualContent>\n *   <SectionContent {…} />\n * />\n */\nfunction Section({\n  bodyClassName,\n  children,\n  className,\n  content,\n  contentClassName,\n  contentLayoutName,\n  contentShouldScroll,\n  header,\n  headerActions,\n  headerClassName,\n  manualContent,\n  manualHeader,\n  // manualSidebar,\n  // sidebar,\n  // sidebarClassName,\n  messages,\n  messagesClassName,\n  routeName,\n  welcomeMessageText,\n}) {\n  const shouldBuildHeader = header || headerClassName || headerActions;\n\n  // Allowing ineffectual prop combinations would lead to confusion\n  if (\n    manualContent &&\n    (content || contentClassName || contentLayoutName || contentShouldScroll)\n  ) {\n    throw new Error(\n      'When passing `manualContent`, the following props are ineffectual: `content`, `contentClassName`, `contentLayoutName`, `contentShouldScroll`'\n    );\n  }\n  if (manualHeader && (header || headerClassName || headerActions)) {\n    throw new Error(\n      'When passing `manualHeader`, the following props are ineffectual: `header`, `headerClassName`, `headerActions`'\n    );\n  }\n  // if (manualSidebar && (sidebar || sidebarClassName)) {\n  //   throw new Error(\n  //     'When passing `manualSidebar`, the following props are ineffectual: `sidebar`, `sidebarClassName`'\n  //   );\n  // }\n\n  useEffect(() => {\n    if (bodyClassName) document.body.classList.add(bodyClassName);\n\n    return function cleanup() {\n      if (bodyClassName) document.body.classList.remove(bodyClassName);\n    };\n  }, [bodyClassName]);\n\n  return (\n    <section className={`${className} ${styles.root}`}>\n      {/* eslint-disable */}\n      <SectionMessages\n        className={styles.messages}\n        routeName={routeName}\n        className={messagesClassName}\n        welcomeText={welcomeMessageText}\n      >\n        {messages}\n      </SectionMessages>\n      {/* {manualSidebar ? (\n        <>{manualSidebar}</>\n      ) : (\n        <Sidebar styleName=\"sidebar\" className={sidebarClassName}>\n          {sidebar}\n        </Sidebar>\n      )} */}\n      {manualHeader ? (\n        <>{manualHeader}</>\n      ) : (\n        shouldBuildHeader && (\n          <SectionHeader\n            className={`${headerClassName} ${styles.header}`}\n            actions={headerActions}\n          >\n            {header}\n          </SectionHeader>\n        )\n      )}\n      {manualContent ? (\n        <>\n          {manualContent}\n          {children}\n        </>\n      ) : (\n        <SectionContent\n          tagName=\"main\"\n          className={`${contentClassName} ${styles.content}`}\n          layoutName={contentLayoutName || DEFAULT_LAYOUT}\n          shouldScroll={contentShouldScroll}\n        >\n          {content}\n          {children}\n        </SectionContent>\n      )}\n    </section>\n  );\n}\nSection.propTypes = {\n  /** Name of class to append to body when section is active */\n  bodyClassName: PropTypes.string,\n  /** Alternate way to pass `manualContent` and `content` */\n  children: PropTypes.node,\n  /** Any additional className(s) for the root element */\n  className: PropTypes.string,\n  /** The section content children (content element built automatically) */\n  content: PropTypes.node,\n  /** Any additional className(s) for the content element */\n  contentClassName: PropTypes.string,\n  /** The name of the layout by which to arrange the content children */\n  contentLayoutName: PropTypes.oneOf(LAYOUTS.concat('')),\n  /** Whether to allow content to scroll */\n  contentShouldScroll: PropTypes.bool,\n  /** The section header text (header element built automatically) */\n  header: PropTypes.node,\n  /** Any section actions for the header element */\n  headerActions: PropTypes.node,\n  /** Any additional className(s) for the header element */\n  headerClassName: PropTypes.string,\n  /** The section content (built by user) flag or element */\n  /* RFE: Ideally, limit these to one relevant `Section[…]` component */\n  /* SEE: https://github.com/facebook/react/issues/2979 */\n  manualContent: PropTypes.oneOfType([PropTypes.bool, PropTypes.element]),\n  /** The section header (built by user) element */\n  manualHeader: PropTypes.element,\n  // /** The page-specific sidebar */\n  // sidebar: PropTypes.node,\n  // /** Additional className for the sidebar element */\n  // sidebarClassName: PropTypes.string,\n  /** Any component-based message(s) (e.g. <Alert>, <Message>) (welcome message found automatically, given `routeName`) */\n  messages: PropTypes.node,\n  /** Any additional className(s) for the message list */\n  messagesClassName: PropTypes.string,\n  /** The name of the route section (to search for a welcome message) */\n  routeName: PropTypes.string,\n  /** Any additional className(s) for the sidebar list */\n  // sidebarClassName: '',\n  /** Custom welcome text (can overwrite `routeName`-based welcome message) */\n  welcomeMessageText: PropTypes.string,\n};\nSection.defaultProps = {\n  bodyClassName: '',\n  children: '',\n  className: '',\n  content: '',\n  contentClassName: '',\n  contentLayoutName: '',\n  contentShouldScroll: false,\n  header: '',\n  headerActions: '',\n  headerClassName: '',\n  manualContent: undefined,\n  manualHeader: undefined,\n  messages: '',\n  messagesClassName: '',\n  routeName: '',\n  // sidebarClassName: '',\n  welcomeMessageText: '',\n};\n\nexport default Section;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './SectionHeader.module.css';\n\n/**\n * A header for a `Section[…]` component\n *\n * - heading text\n * - actions (e.g. links, buttons, form)\n * - automatic styles or markup for given context (ex: within a form or a table)\n *\n * @example\n * // a section header with heading text\n * <SectionHeader>\n *   <a href=\"…\">Hyperlinked Name of Section</a>\n * </SectionHeader>\n * @example\n * // a form header with actions and heading text\n * <SectionHeader\n *   actions={<button type=\"reset\">Reset</button>}\n *   isForForm\n * >\n *   Name of Form\n * </SectionHeader>\n * @example\n * // a table header with actions and heading text\n * <SectionHeader\n *   actions={<input type=\"search\" />}\n *   isForTable\n * >\n *   Name of Table\n * </SectionHeader>\n */\nfunction SectionHeader({\n  actions,\n  children,\n  className,\n  isForForm,\n  isForTable,\n}) {\n  let styleName = '';\n  const styleNameList = [styles['root']];\n  const HeadingTagName = isForForm || isForTable ? 'h3' : 'h2';\n\n  if (isForForm) styleNameList.push(styles['for-form']);\n  if (isForTable) styleNameList.push(styles['for-table']);\n\n  // Do not join inside JSX (otherwise arcane styleName error occurs)\n  styleName = styleNameList.join(' ');\n\n  return (\n    <header className={`${styleName} ${className}`}>\n      {children && (\n        <HeadingTagName className={styles.heading}>{children}</HeadingTagName>\n      )}\n      {actions}\n    </header>\n  );\n}\nSectionHeader.propTypes = {\n  /** Any actions (buttons, links, forms, etc) */\n  actions: PropTypes.node,\n  /** The text a.k.a. title */\n  children: PropTypes.node,\n  /** Any additional className(s) for the root element */\n  className: PropTypes.string,\n  /** Whether this header is for a form */\n  isForForm: PropTypes.bool,\n  /** Whether this header is for a table */\n  isForTable: PropTypes.bool,\n};\nSectionHeader.defaultProps = {\n  actions: '',\n  className: '',\n  children: '',\n  isForForm: false,\n  isForTable: false,\n};\n\nexport default SectionHeader;\n","import React from 'react';\nimport { useTable } from 'react-table';\nimport PropTypes from 'prop-types';\nimport LoadingSpinner from '../LoadingSpinner';\nimport './InfiniteScrollTable.scss';\n\nconst rowContentPropType = PropTypes.oneOfType([\n  PropTypes.string,\n  PropTypes.element,\n  PropTypes.oneOf([React.Fragment]),\n]);\n\nconst InfiniteScrollLoadingRow = ({ isLoading }) => {\n  if (!isLoading) {\n    return null;\n  }\n  return (\n    <tr className=\"-status\">\n      <td>\n        <LoadingSpinner placement=\"inline\" />\n      </td>\n    </tr>\n  );\n};\nInfiniteScrollLoadingRow.propTypes = {\n  isLoading: PropTypes.bool.isRequired,\n};\n\nconst InfiniteScrollNoDataRow = ({ display, noDataText }) => {\n  if (!display) {\n    return null;\n  }\n  return (\n    <tr className=\"-status\">\n      <td>\n        <span className=\"-status__message\">{noDataText}</span>\n      </td>\n    </tr>\n  );\n};\nInfiniteScrollNoDataRow.propTypes = {\n  display: PropTypes.bool.isRequired,\n  noDataText: rowContentPropType.isRequired,\n};\n\nconst InfiniteScrollTable = ({\n  tableColumns,\n  tableData,\n  onInfiniteScroll,\n  isLoading,\n  className,\n  noDataText,\n  getRowProps,\n  columnMemoProps,\n}) => {\n  const columns = React.useMemo(\n    () => tableColumns,\n    /* eslint-disable-next-line */\n    [columnMemoProps, tableColumns]\n  );\n  const data = React.useMemo(() => tableData, [tableData]);\n\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\n    useTable({ columns, data });\n  const onScroll = ({ target }) => {\n    const bottom =\n      target.scrollHeight - target.scrollTop === target.clientHeight;\n    if (bottom && target.scrollTop > 0) {\n      onInfiniteScroll(tableData.length);\n    }\n  };\n\n  return (\n    <table {...getTableProps()} className={`${className} InfiniteScrollTable`}>\n      <thead>\n        {headerGroups.map((headerGroup) => (\n          <tr {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map((column) => (\n              <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n            ))}\n          </tr>\n        ))}\n      </thead>\n      <tbody {...getTableBodyProps()} onScroll={onScroll}>\n        {rows.map((row) => {\n          prepareRow(row);\n          return (\n            <tr {...row.getRowProps()} {...getRowProps(row)}>\n              {row.cells.map((cell) => {\n                return (\n                  <td\n                    {...cell.getCellProps({ className: cell.column.className })}\n                  >\n                    {cell.render('Cell')}\n                  </td>\n                );\n              })}\n            </tr>\n          );\n        })}\n        <InfiniteScrollLoadingRow isLoading={isLoading} />\n        <InfiniteScrollNoDataRow\n          display={!isLoading && tableData.length === 0}\n          noDataText={noDataText}\n        />\n      </tbody>\n    </table>\n  );\n};\n\nInfiniteScrollTable.propTypes = {\n  tableColumns: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  tableData: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  onInfiniteScroll: PropTypes.func,\n  isLoading: PropTypes.bool,\n  className: PropTypes.string,\n  noDataText: rowContentPropType,\n  getRowProps: PropTypes.func,\n  columnMemoProps: PropTypes.arrayOf(PropTypes.any),\n};\nInfiniteScrollTable.defaultProps = {\n  onInfiniteScroll: (offset) => {},\n  isLoading: false,\n  className: '',\n  noDataText: '',\n  getRowProps: (row) => {},\n  columnMemoProps: [],\n};\n\nexport default InfiniteScrollTable;\n","import InfiniteScrollTable from './InfiniteScrollTable';\n\nexport default InfiniteScrollTable;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Icon.module.css';\n\nconst Icon = ({ children, className, name }) => {\n  const iconClassName = `icon icon-${name}`;\n  // FAQ: The conditional avoids an extra space in class attribute value\n  const fullClassName = className\n    ? [className, iconClassName].join(' ')\n    : iconClassName;\n  const label = children;\n\n  return <i className={fullClassName} role=\"img\" aria-label={label} />;\n};\nIcon.propTypes = {\n  /** A text alternative to the icon (for accessibility) */\n  children: PropTypes.string,\n  /** Additional className for the root element */\n  className: PropTypes.string,\n  /** Name of icon from icon font (without the (`icon-` prefix) */\n  name: PropTypes.string.isRequired,\n};\nIcon.defaultProps = {\n  children: '',\n  className: '',\n};\n\nexport default Icon;\n","import Icon from './Icon';\n\nexport default Icon;\n","import React, { useState, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { CardHeader, CardBody, Card, Collapse } from 'reactstrap';\nimport Icon from '../Icon';\nimport './Expand.global.scss';\nimport styles from './Expand.module.scss';\n\nconst Expand = ({ className, detail, message }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const toggleCallback = useCallback(() => {\n    setIsOpen(!isOpen);\n  }, [isOpen, setIsOpen]);\n\n  // TODO: Use `details/summary` tags, when `onToggle` support is \"last 2 versions\"\n  // SEE: https://github.com/facebook/react/issues/15486#issuecomment-669674869\n  return (\n    /* eslint-disable-next-line */\n    <Card className={styles.container} className={className} tag=\"div\">\n      <CardHeader className={styles.summary} onClick={toggleCallback} tag=\"div\">\n        <strong className={styles.header}>{detail}</strong>\n        <Icon name={isOpen ? 'collapse' : 'expand'} />\n      </CardHeader>\n      <Collapse isOpen={isOpen}>\n        <CardBody>{message}</CardBody>\n      </Collapse>\n    </Card>\n  );\n};\n\nExpand.propTypes = {\n  /** Additional className for the root element */\n  className: PropTypes.string,\n\n  detail: PropTypes.string.isRequired,\n  message: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\n};\nExpand.defaultProps = {\n  className: '',\n};\n\nexport default Expand;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Fade } from 'reactstrap';\nimport Icon from '../Icon';\n\nimport styles from './Message.module.scss';\n\nexport const ERROR_TEXT = {\n  mismatchCanDismissScope:\n    'For a <(Section)Message> to use `canDismiss`, `scope` must equal `section`.',\n  deprecatedType:\n    'In a <(Section|Inline)Message> `type=\"warn\"` is deprecated. Use `type=\"warning\"` instead.',\n  missingScope:\n    'A <Message> without a `scope` should become an <InlineMessage>. (If <Message> must be used, then explicitely set `scope=\"inline\"`.)',\n};\n\nexport const TYPE_MAP = {\n  info: {\n    iconName: 'conversation',\n    className: 'is-info',\n    iconText: 'Notice',\n  },\n  success: {\n    iconName: 'approved-reverse',\n    className: 'is-success',\n    iconText: 'Notice',\n  },\n  warning: {\n    iconName: 'alert',\n    className: 'is-warn',\n    iconText: 'Warning',\n  },\n  error: {\n    iconName: 'alert',\n    className: 'is-error',\n    iconText: 'Error',\n  },\n};\nTYPE_MAP.warn = TYPE_MAP.warning; // FAQ: Deprecated support for `type=\"warn\"`\nexport const TYPES = Object.keys(TYPE_MAP);\n\nexport const SCOPE_MAP = {\n  inline: {\n    className: 'is-scope-inline',\n    role: 'status',\n    tagName: 'span',\n  },\n  section: {\n    className: 'is-scope-section',\n    role: 'status',\n    tagName: 'p',\n  },\n  // app: { … } // FAQ: Do not use; instead, use a <NotificationToast>\n};\nexport const SCOPES = ['', ...Object.keys(SCOPE_MAP)];\nexport const DEFAULT_SCOPE = 'inline'; // FAQ: Historical support for default\n\n/**\n * Show an event-based message to the user\n * @todo Document examples\n * @example\n * // Blah blah…\n * <Sample jsx>\n */\nconst Message = ({\n  children,\n  className,\n  onDismiss,\n  canDismiss,\n  isVisible,\n  scope,\n  type,\n}) => {\n  const typeMap = TYPE_MAP[type];\n  const scopeMap = SCOPE_MAP[scope || DEFAULT_SCOPE];\n  const { iconName, iconText, className: typeClassName } = typeMap;\n  const { role, tagName, className: scopeClassName } = scopeMap;\n\n  const hasDismissSupport = scope === 'section';\n\n  // Manage prop warnings\n  /* eslint-disable no-console */\n  if (canDismiss && !hasDismissSupport) {\n    // Component will work, except `canDismiss` is ineffectual\n    console.error(ERROR_TEXT.mismatchCanDismissScope);\n  }\n  if (type === 'warn') {\n    // Component will work, but `warn` is deprecated value\n    console.info(ERROR_TEXT.deprecatedType);\n  }\n  if (!scope) {\n    // Component will work, but `scope` should be defined\n    console.info(ERROR_TEXT.missingScope);\n  }\n  /* eslint-enable no-console */\n\n  // Manage class names\n  const modifierClassNames = [];\n  modifierClassNames.push(typeClassName);\n  modifierClassNames.push(scopeClassName);\n  const containerStyleNames = ['container', ...modifierClassNames]\n    .map((name) => styles[name])\n    .join(' ');\n\n  // Manage disappearance\n  // FAQ: Design does not want fade, but we still use <Fade> to manage dismissal\n  // TODO: Consider replacing <Fade> with a replication of `unmountOnExit: true`\n  const shouldFade = false;\n  const fadeProps = {\n    ...Fade.defaultProps,\n    unmountOnExit: true,\n    baseClass: shouldFade ? Fade.defaultProps.baseClass : '',\n    timeout: shouldFade ? Fade.defaultProps.timeout : 0,\n  };\n\n  return (\n    <Fade\n      // Avoid manually syncing Reactstrap <Fade>'s default props\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...fadeProps}\n      tag={tagName}\n      className={`${className} ${containerStyleNames}`}\n      role={role}\n      in={isVisible}\n    >\n      <Icon\n        className={`${styles['icon']} ${styles['type-icon']}`}\n        name={iconName}\n      >\n        {iconText}\n      </Icon>\n      <span className={styles.text} data-testid=\"text\">\n        {children}\n      </span>\n      {canDismiss && hasDismissSupport ? (\n        <button\n          type=\"button\"\n          className={styles['close-button']}\n          aria-label=\"Close\"\n          onClick={onDismiss}\n        >\n          <Icon\n            className={`${styles.icon} ${styles['close-icon']}`}\n            name=\"close\"\n          />\n        </button>\n      ) : null}\n    </Fade>\n  );\n};\nMessage.propTypes = {\n  /** Whether an action can be dismissed (requires scope equals `section`) */\n  canDismiss: PropTypes.bool,\n  /** Message text (as child node) */\n  /* FAQ: We can support any values, even a component */\n  children: PropTypes.node.isRequired, // This checks for any render-able value\n  /** Additional className for the root element */\n  className: PropTypes.string,\n  /** Whether message is visible (pair with `onDismiss`) */\n  isVisible: PropTypes.bool,\n  /** Action on message dismissal (pair with `isVisible`) */\n  onDismiss: PropTypes.func,\n  /** How to place the message within the layout */\n  scope: PropTypes.oneOf(SCOPES), // RFE: Require scope; change all instances\n  /** Message type or severity */\n  type: PropTypes.oneOf(TYPES).isRequired,\n};\nMessage.defaultProps = {\n  className: '',\n  canDismiss: false,\n  isVisible: true,\n  onDismiss: () => {},\n  scope: '', // RFE: Require scope; remove this line\n};\n\nexport default Message;\n","import Message from './Message';\n\nexport default Message;\n","import React from 'react';\nimport Message from '../Message';\n\n/**\n * Show an event-based message to the user\n * @todo Document examples\n * @example\n * // Blah blah…\n * <Sample jsx>\n */\nconst InlineMessage = (props) => {\n  // Override default props\n  const messageProps = {\n    ...Message.defaultProps,\n    ...props,\n    canDismiss: false,\n    scope: 'inline',\n  };\n\n  // Avoid manually syncing <Message>'s props\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return <Message {...messageProps} />;\n};\nInlineMessage.propTypes = Message.propTypes;\nInlineMessage.defaultProps = Message.defaultProps;\n\nexport default InlineMessage;\n","import InlineMessage from './InlineMessage';\n\nexport default InlineMessage;\n","import React, { useCallback, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Message from '../Message';\n\n/**\n * Show an event-based message to the user\n * @todo Document examples\n * @example\n * // Blah blah…\n * <Sample jsx>\n */\nconst SectionMessage = (props) => {\n  const [isVisible, setIsVisible] = useState(true);\n\n  // Manage visibility\n  const onDismiss = useCallback(() => {\n    setIsVisible(!isVisible);\n  }, [isVisible]);\n\n  // Override default props\n  const messageProps = {\n    ...Message.defaultProps,\n    ...props,\n    isVisible,\n    onDismiss,\n    scope: 'section',\n  };\n\n  // Avoid manually syncing <Message>'s props\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return <Message {...messageProps} />;\n};\nSectionMessage.propTypes = {\n  ...Message.propTypes,\n  isVisible: PropTypes.bool,\n  onDismiss: PropTypes.func,\n};\nSectionMessage.defaultProps = Message.defaultProps;\n\nexport default SectionMessage;\n","import SectionMessage from './SectionMessage';\n\nexport default SectionMessage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport styles from './DescriptionList.module.scss';\n\nexport const DIRECTION_CLASS_MAP = {\n  vertical: 'is-vert',\n  horizontal: 'is-horz',\n};\nexport const DEFAULT_DIRECTION = 'vertical';\nexport const DIRECTIONS = ['', ...Object.keys(DIRECTION_CLASS_MAP)];\n\nexport const DENSITY_CLASS_MAP = {\n  compact: 'is-narrow',\n  default: 'is-wide',\n};\nexport const DEFAULT_DENSITY = 'default';\nexport const DENSITIES = ['', ...Object.keys(DENSITY_CLASS_MAP)];\n\nconst DescriptionListArray = ({ value }) => {\n  if (value.length === 0) {\n    return (\n      <dd className={styles.value}>\n        <i>None</i>\n      </dd>\n    );\n  }\n  return (\n    <dl>\n      {value.map((val, index) => (\n        <div key={uuidv4()} className={styles['array-entry']}>\n          <dt className={styles.key}>\n            <i>{index}</i>\n          </dt>\n          <dd className={styles.value} data-testid=\"value\">\n            <DescriptionListValue value={val} />\n          </dd>\n        </div>\n      ))}\n    </dl>\n  );\n};\n\nconst DescriptionListValue = ({ value }) => {\n  if (value === undefined) {\n    return <i>Undefined</i>;\n  }\n  if (Array.isArray(value)) {\n    return <DescriptionListArray value={value} />;\n  }\n  if (value instanceof Set) {\n    return <DescriptionListArray value={Array.from(value)} />;\n  }\n  if (typeof value === 'object') {\n    return <DescriptionList data={value} />;\n  }\n  if (typeof value === 'string') {\n    return <>{value}</>;\n  }\n  return <>{JSON.stringify(value)}</>;\n};\n\nconst DescriptionList = ({ className, data, density, direction }) => {\n  const modifierClasses = [];\n  modifierClasses.push(DENSITY_CLASS_MAP[density || DEFAULT_DENSITY]);\n  modifierClasses.push(DIRECTION_CLASS_MAP[direction || DEFAULT_DIRECTION]);\n  const containerStyleNames = ['container', ...modifierClasses]\n    .map((name) => styles[name])\n    .join(' ');\n  const entries = Object.entries(data);\n  if (entries.length === 0) {\n    return (\n      <div>\n        <i>Empty object</i>\n      </div>\n    );\n  }\n\n  return (\n    <dl className={`${className} ${containerStyleNames}`} data-testid=\"list\">\n      {entries.map(([key, value]) => (\n        <React.Fragment key={key}>\n          <dt className={styles.key} data-testid=\"key\">\n            {key}\n          </dt>\n          <dd className={styles.value} data-testid=\"value\">\n            <DescriptionListValue value={value} />\n          </dd>\n        </React.Fragment>\n      ))}\n    </dl>\n  );\n};\nDescriptionList.propTypes = {\n  /** Additional className for the root element */\n  className: PropTypes.string,\n  /** Selector type */\n  /* FAQ: We can support any values, even a component */\n  // eslint-disable-next-line react/forbid-prop-types\n  data: PropTypes.object.isRequired,\n  /** Layout density */\n  density: PropTypes.oneOf(DENSITIES),\n  /** Layout direction */\n  direction: PropTypes.oneOf(DIRECTIONS),\n};\nDescriptionList.defaultProps = {\n  className: '',\n  density: DEFAULT_DENSITY,\n  direction: DEFAULT_DIRECTION,\n};\n\nexport default DescriptionList;\n","import DescriptionList from './DescriptionList';\n\nexport default DescriptionList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Input as BootstrapInput } from 'reactstrap';\n\nimport styles from './DropdownSelector.module.css';\n\nexport const TYPES = ['', 'single', 'multiple'];\nexport const DEFAULT_TYPE = 'single';\n\n// RFE: Support `options` object prop and require either `options` or `children` prop:\n//      - https://stackoverflow.com/a/49682510/11817077\n//      - https://stackoverflow.com/a/52661344/11817077\n//      - https://www.npmjs.com/package/react-either-property\n//      - \"customProp\" at https://reactjs.org/docs/typechecking-with-proptypes.html#proptypes\n\nconst DropdownSelector = ({ type, onChange, ...props }) => {\n  const canSelectMany = type === 'multiple';\n\n  return (\n    <BootstrapInput\n      // FAQ: This is a one-off, so it does not belong in `.eslintrc`\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...props}\n      onChange={onChange}\n      type=\"select\"\n      className={styles.container}\n      multiple={canSelectMany}\n      data-testid=\"selector\"\n      // The ARIA role for a `<select>` is implicit (and depends on `<select>` attributes)\n      // SEE: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select#Technical_summary\n    />\n  );\n};\nDropdownSelector.propTypes = {\n  /** Selector type */\n  type: PropTypes.oneOf(TYPES),\n  /** Selector type */\n  onChange: PropTypes.func,\n  /** Options (as children, like Reactstrap) */\n  // FAQ: Limiting and documenting this has become a rabbit hole; help welcome — Wes B\n  // children: PropTypes.any.isRequired\n};\nDropdownSelector.defaultProps = {\n  type: DEFAULT_TYPE,\n  onChange: () => {},\n};\n\nexport default DropdownSelector;\n","import DropdownSelector from './DropdownSelector';\n\nexport default DropdownSelector;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Alert } from 'reactstrap';\n\n/**\n * Whether to show a welcome message\n * @param {String} messageName - The name of the message to check\n */\nexport function useShouldShowMessage(messageName) {\n  const welcomeMessages = {};\n  return welcomeMessages && welcomeMessages[messageName];\n}\n\n/**\n * A message which, when dismissed, will not appear again unless browser storage is cleared\n *\n * _This message is designed for user introduction to sections, but can be abstracted further into a `<DismissableMessage>` or abstracted less such that a message need not be passed in._\n *\n * @example\n * // message with custom text, class, and identifier\n * <WelcomeMessage\n *   className=\"external-message-class\"\n *   messageName={identifierForMessageLikeRouteName}\n * >\n *   Introductory text (defined externally).\n * </WelcomeMessage>\n */\nfunction WelcomeMessage({ children, className, messageName }) {\n  const shouldShow = useShouldShowMessage(messageName);\n  const welcomeMessages = {};\n\n  function onDismiss(name) {\n    const newMessagesState = {\n      ...welcomeMessages,\n      [name]: false,\n    };\n    return newMessagesState;\n  }\n\n  return (\n    <Alert\n      isOpen={shouldShow}\n      toggle={() => onDismiss(messageName)}\n      color=\"secondary\"\n      className={className}\n    >\n      {children}\n    </Alert>\n  );\n}\nWelcomeMessage.propTypes = {\n  /** Message as text or element(s) */\n  children: PropTypes.node.isRequired,\n  /** Additional className for the root element */\n  className: PropTypes.string,\n  /** A unique identifier for the message */\n  messageName: PropTypes.string.isRequired,\n};\nWelcomeMessage.defaultProps = {\n  className: '',\n};\n\nexport default WelcomeMessage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Pill.module.scss';\n\nfunction Pill({ children, type, className, shouldTruncate }) {\n  let pillStyleName = `root is-${type}`;\n\n  if (shouldTruncate) pillStyleName += ' should-truncate';\n\n  return (\n    <span className={`${styles[pillStyleName]} ${className}`}>{children}</span>\n  );\n}\n\nPill.propTypes = {\n  children: PropTypes.string.isRequired,\n  type: PropTypes.string,\n  className: PropTypes.string,\n  shouldTruncate: PropTypes.bool,\n};\n\nPill.defaultProps = {\n  type: 'normal',\n  className: '',\n  shouldTruncate: true,\n};\n\nexport default Pill;\n","import Pill from './Pill';\n\nexport default Pill;\n","import React, { useCallback, useState } from 'react';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport PropTypes from 'prop-types';\nimport { Button } from 'reactstrap';\nimport Icon from '../Icon';\nimport styles from './TextCopyField.module.scss';\n\nconst TextCopyField = ({ value, placeholder }) => {\n  const transitionDuration = 0.15; // second(s)\n  const stateDuration = 1; // second(s)\n  const stateTimeout = transitionDuration + stateDuration; // second(s)\n\n  const [isCopied, setIsCopied] = useState(false);\n\n  const onCopy = useCallback(() => {\n    setIsCopied(true);\n\n    const timeout = setTimeout(() => {\n      setIsCopied(false);\n      clearTimeout(timeout);\n    }, stateTimeout * 1000);\n  }, [setIsCopied, stateTimeout]);\n  const isEmpty = !value || value.length === 0;\n  const onChange = (event) => {\n    // Swallow keyboard events on the Input control, but\n    // still allow selecting the text. readOnly property of\n    // Input is not adequate for this purpose because it\n    // prevents text selection\n    event.preventDefault();\n  };\n\n  return (\n    <div className=\"input-group\">\n      <div className=\"input-group-prepend\">\n        <CopyToClipboard text={value}>\n          <Button\n            className={`${styles['copy-button']} ${\n              isCopied ? styles['is-copied'] : ''\n            }`}\n            // RFE: Avoid manual JS ↔ CSS sync of transition duration by using:\n            //      - `data-attribute` and `attr()` (pending browser support)\n            //      - PostCSS and JSON variables (pending greater need for this)\n            style={{ '--transition-duration': `${transitionDuration}s` }}\n            onClick={onCopy}\n            disabled={isEmpty}\n            type=\"button\"\n          >\n            <Icon\n              name={isCopied ? 'approved-reverse' : 'link'}\n              className={styles['button__icon']}\n            />\n            <span className={styles['button__text']}>Copy</span>\n          </Button>\n        </CopyToClipboard>\n      </div>\n      <input\n        type=\"text\"\n        onChange={onChange}\n        value={value}\n        className={`form-control ${styles.input}`}\n        placeholder={placeholder}\n        data-testid=\"input\"\n        readOnly\n      />\n    </div>\n  );\n};\n\nTextCopyField.propTypes = {\n  value: PropTypes.string,\n  placeholder: PropTypes.string,\n};\n\nTextCopyField.defaultProps = {\n  value: '',\n  placeholder: '',\n};\n\nexport default TextCopyField;\n","import React, { useState, useCallback } from 'react';\nimport { useResizeDetector } from 'react-resize-detector';\nimport PropTypes from 'prop-types';\nimport { Button } from 'reactstrap';\nimport styles from './ReadMore.module.scss';\n\nconst ReadMore = ({ className, children }) => {\n  const [expanded, setExpanded] = useState(false);\n\n  const toggleCallback = useCallback(() => {\n    setExpanded(!expanded);\n  }, [expanded, setExpanded]);\n\n  const { height, ref } = useResizeDetector();\n\n  const hasOverflow =\n    ref && ref.current ? ref.current.scrollHeight > height : false;\n\n  return (\n    <>\n      {\n        <div\n          className={`${\n            expanded ? styles.expanded : styles.clamped\n          } ${className}`}\n          ref={ref}\n        >\n          {children}\n        </div>\n      }\n      {(hasOverflow || expanded) && (\n        <Button color=\"link\" onClick={toggleCallback}>\n          {expanded ? 'Read Less' : 'Read More'}\n        </Button>\n      )}\n    </>\n  );\n};\n\nReadMore.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};\n\nReadMore.defaultProps = {\n  className: '',\n};\n\nexport default ReadMore;\n","import ReadMore from './ReadMore';\n\nexport default ReadMore;\n","import React from 'react';\nimport { Button } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport styles from './Paginator.module.scss';\n\nconst PaginatorPage = ({ number, callback, current }) => {\n  return (\n    <div className={styles['page-root']}>\n      <Button\n        className={`${styles.page} ${number === current ? styles.current : ''}`}\n        onClick={() => callback(number)}\n      >\n        {number}\n      </Button>\n    </div>\n  );\n};\n\nPaginatorPage.propTypes = {\n  number: PropTypes.number.isRequired,\n  callback: PropTypes.func.isRequired,\n  current: PropTypes.number.isRequired,\n};\n\nconst Paginator = ({ pages, current, callback, spread }) => {\n  let start, end;\n  if (pages === 1) {\n    end = 0;\n    start = 1;\n  } else if (pages > 2 && pages <= spread) {\n    start = 2;\n    end = pages - 1;\n  } else if (pages > spread && current <= 4) {\n    start = 2;\n    end = spread - 1;\n  } else if (pages > spread && current > pages - (spread - 2)) {\n    start = pages - (spread - 2);\n    end = pages - 1;\n  } else {\n    const delta = Math.floor((spread - 2) / 2);\n    start = current - delta;\n    end = current + delta;\n  }\n  const middle = end - start + 1;\n  const middlePages =\n    middle > 0\n      ? Array(middle)\n          .fill()\n          .map((_, index) => start + index)\n      : [];\n  return (\n    <div className={styles.root}>\n      <Button\n        color=\"link\"\n        className={styles.root}\n        onClick={() => callback(current - 1)} // eslint-disable-line\n        disabled={current === 1}\n      >\n        <span>&lt; Previous</span>\n      </Button>\n      <PaginatorPage number={1} callback={callback} current={current} />\n      {middlePages[0] > 2 && <span>...</span>}\n      {middlePages.map((number) => {\n        return (\n          <PaginatorPage\n            number={number}\n            key={number}\n            current={current}\n            callback={callback}\n          />\n        );\n      })}\n      {middlePages[middlePages.length - 1] < pages - 1 && <span>...</span>}\n      {pages > 1 && (\n        <PaginatorPage number={pages} callback={callback} current={current} />\n      )}\n      <Button\n        color=\"link\"\n        className={styles.endcap}\n        onClick={() => callback(current + 1)} // eslint-disable-line\n        disabled={current === pages}\n      >\n        <span>Next &gt;</span>\n      </Button>\n    </div>\n  );\n};\n\nPaginator.propTypes = {\n  pages: PropTypes.number.isRequired,\n  current: PropTypes.number.isRequired,\n  callback: PropTypes.func.isRequired,\n  spread: PropTypes.number, // Number of page buttons to show\n};\n\nPaginator.defaultProps = {\n  spread: 11,\n};\n\nexport default Paginator;\n","import { Route, Redirect, RouteProps } from 'react-router-dom';\nimport { useTapisConfig } from 'tapis-hooks';\n\n// A wrapper for <Route> that redirects to the login\n// screen if you're not yet authenticated.\nfunction ProtectedRoute({ children, ...rest }: RouteProps) {\n  const { accessToken } = useTapisConfig();\n  return (\n    <Route\n      {...rest}\n      render={({ location }: RouteProps) =>\n        accessToken ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: '/login',\n              state: { from: location },\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n\nexport default ProtectedRoute;\n","import ProtectedRoute from './ProtectedRoute';\n\nexport default ProtectedRoute;\n","import React, { useCallback, useState } from 'react';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport PropTypes from 'prop-types';\nimport { Button } from 'reactstrap';\nimport Icon from '../Icon';\nimport styles from './CopyButton.module.scss';\n\nconst CopyButton = ({ value, className }) => {\n  const transitionDuration = 0.15; // second(s)\n  const stateDuration = 1; // second(s)\n  const stateTimeout = transitionDuration + stateDuration; // second(s)\n\n  const [isCopied, setIsCopied] = useState(false);\n\n  const onCopy = useCallback(() => {\n    setIsCopied(true);\n\n    const timeout = setTimeout(() => {\n      setIsCopied(false);\n      clearTimeout(timeout);\n    }, stateTimeout * 1000);\n  }, [setIsCopied, stateTimeout]);\n  const isEmpty = !value || value.length === 0;\n\n  return (\n    <CopyToClipboard text={value}>\n      <Button\n        className={`${styles['copy-button']} ${\n          isCopied ? styles['is-copied'] : ''\n        } ${className}`}\n        // RFE: Avoid manual JS ↔ CSS sync of transition duration by using:\n        //      - `data-attribute` and `attr()` (pending browser support)\n        //      - PostCSS and JSON variables (pending greater need for this)\n        style={{ '--transition-duration': `${transitionDuration}s` }}\n        onClick={onCopy}\n        disabled={isEmpty}\n        type=\"button\"\n        size=\"sm\"\n      >\n        <Icon\n          name={isCopied ? 'approved-reverse' : 'copy'}\n          className={styles['button__icon']}\n        />\n        <span className={styles['button__text']}>Copy</span>\n      </Button>\n    </CopyToClipboard>\n  );\n};\n\nCopyButton.propTypes = {\n  value: PropTypes.string,\n  className: PropTypes.string,\n};\n\nCopyButton.defaultProps = {\n  value: '',\n  className: '',\n};\n\nexport default CopyButton;\n","import CopyButton from './CopyButton';\n\nexport default CopyButton;\n","import React from 'react';\nimport { FormGroup, Label, FormText, Badge } from 'reactstrap';\nimport styles from './FieldWrapperFormik.module.css';\nimport { Field, useField } from 'formik';\nexport type FieldWrapperProps = {\n  name: string;\n  label: string;\n  required: boolean;\n  description: string;\n  isHidden?: boolean;\n  as: React.ComponentType<any>;\n};\nconst FieldWrapper: React.FC<FieldWrapperProps> = ({\n  name,\n  label,\n  required,\n  description,\n  isHidden = false,\n  as: Component,\n}) => {\n  const [, meta] = useField(name);\n  return (\n    <FormGroup>\n      <span className={isHidden ? styles['hidden'] : ''}>\n        <Label\n          className=\"form-field__label\"\n          size=\"sm\"\n          style={{ display: 'flex', alignItems: 'center' }}\n          htmlFor={name}\n        >\n          {label}\n          {required && !isHidden ? (\n            <Badge color=\"danger\" style={{ marginLeft: '10px' }}>\n              Required\n            </Badge>\n          ) : null}\n        </Label>\n        <Field name={name} as={Component} id={name} />\n        {meta.error && (\n          <FormText className={styles['form-field__help']} color=\"danger\">\n            {meta.error}\n          </FormText>\n        )}\n        {description && !meta.error && (\n          <FormText className={styles['form-field__help']} color=\"muted\">\n            {description}\n          </FormText>\n        )}\n      </span>\n    </FormGroup>\n  );\n};\n\nexport default FieldWrapper;\n","import React from 'react';\nimport FieldWrapper from '../FieldWrapperFormik';\nimport { Input } from 'reactstrap';\nimport { FieldInputProps } from 'formik';\nimport { FormikInputProps } from '.';\n\nconst FormikInput: React.FC<FormikInputProps> = ({\n  name,\n  label,\n  required,\n  description,\n  ...props\n}: FormikInputProps) => (\n  <FieldWrapper\n    name={name}\n    label={label}\n    required={required}\n    description={description}\n    isHidden={props.type && props.type === 'hidden'}\n    as={(formikProps: FieldInputProps<any>) => (\n      <Input bsSize=\"sm\" {...props} {...formikProps} />\n    )}\n  />\n);\n\nexport default React.memo(FormikInput);\n","import { FormikContextType, getIn, isObject, isInteger } from 'formik';\nimport _ from 'lodash';\n\n/**\n * Adaptation of setFieldValue wrapper from https://github.com/jaredpalmer/formik/issues/2332#issuecomment-819571154\n *\n * There is a bug in the setIn function of Formik that deletes form keys that have undefined values rather than\n * setting the field value to undefined. This is inconsistent with other types of Formik behavior, such as\n * empty text Inputs resulting in form keys with undefined values\n *\n * @param formikContext\n * @param field\n * @param value\n * @param shouldValidate\n */\nexport function setFieldValue(\n  formikContext: FormikContextType<unknown>,\n  field: string,\n  value: any,\n  shouldValidate?: boolean\n): void {\n  const { setValues, validateForm, validateOnChange, setFieldValue, values } =\n    formikContext;\n  // Override default behavior by forcing undefined to be set on the state\n  if (value === undefined) {\n    const setInValues = setIn(values, field, undefined);\n    setValues(setInValues);\n\n    const willValidate =\n      shouldValidate === undefined ? validateOnChange : shouldValidate;\n    if (willValidate) {\n      validateForm(setInValues);\n    }\n  } else {\n    // Use default behavior for normal values\n    setFieldValue(field, value, shouldValidate);\n  }\n}\n\n/**\n * A copy of Formik's setIn function, except it assigns undefined instead of deleting the property if the value\n * being set is undefined.\n * https://github.com/jaredpalmer/formik/issues/2332\n */\nfunction setIn(obj: any, path: string, value: any): any {\n  const res: any = _.clone(obj); // This keeps inheritance when obj is a class\n  let resVal: any = res;\n  let i = 0;\n  const pathArray = _.toPath(path);\n\n  for (; i < pathArray.length - 1; i++) {\n    const currentPath: string = pathArray[i];\n    const currentObj: any = getIn(obj, pathArray.slice(0, i + 1));\n\n    if (currentObj && (isObject(currentObj) || Array.isArray(currentObj))) {\n      resVal = resVal[currentPath] = _.clone(currentObj);\n    } else {\n      const nextPath: string = pathArray[i + 1];\n      resVal = resVal[currentPath] =\n        isInteger(nextPath) && Number(nextPath) >= 0 ? [] : {};\n    }\n  }\n\n  // Return original object if new value is the same as current\n  if ((i === 0 ? obj : resVal)[pathArray[i]] === value) {\n    return obj;\n  }\n\n  if (value === undefined) {\n    resVal[pathArray[i]] = undefined;\n  } else {\n    resVal[pathArray[i]] = value;\n  }\n\n  // If the path array has a single element, the loop did not run.\n  // Deleting on `resVal` had no effect in this scenario, so we delete on the result instead.\n  if (i === 0 && value === undefined) {\n    res[pathArray[i]] = undefined;\n  }\n\n  return res;\n}\n","import { ChangeEvent } from 'react';\nimport FieldWrapper from '../FieldWrapperFormik';\nimport { Input } from 'reactstrap';\nimport { FieldInputProps, useFormikContext } from 'formik';\nimport { FormikInputProps } from '.';\nimport { setFieldValue } from './formikPatch';\n\nconst FormikSelect: React.FC<React.PropsWithChildren<FormikInputProps>> = ({\n  name,\n  label,\n  required,\n  description,\n  children,\n  ...props\n}: FormikInputProps) => {\n  const formikContext = useFormikContext();\n  return (\n    <FieldWrapper\n      name={name}\n      label={label}\n      required={required}\n      description={description}\n      as={(formikProps: FieldInputProps<any>) => {\n        const { onChange: formikOnChange, ...otherFormikProps } = formikProps;\n        const onChange = (event: ChangeEvent<HTMLInputElement>) => {\n          // Use patched formik setFieldValue\n          // An option with no children and value set to undefined will preduce an empty string as the target value\n          // ex: <option value={undefined} label=\"Please select a value\" />\n          setFieldValue(\n            formikContext,\n            name,\n            event.target.value === '' ? undefined : event.target.value\n          );\n        };\n        return (\n          <Input\n            bsSize=\"sm\"\n            type=\"select\"\n            onChange={onChange}\n            {...props}\n            {...otherFormikProps}\n          >\n            {children}\n          </Input>\n        );\n      }}\n    />\n  );\n};\n\nexport default FormikSelect;\n","import { FieldInputProps, Field } from 'formik';\nimport { FormikInputProps } from '.';\nimport { Input, FormText, FormGroup, Label } from 'reactstrap';\nimport styles from './FormikCheck.module.scss';\n\nconst FormikCheck: React.FC<FormikInputProps> = ({\n  name,\n  label,\n  required,\n  description,\n  ...props\n}: FormikInputProps) => {\n  return (\n    <FormGroup check>\n      <Label check className={`form-field__label ${styles.nospace}`} size=\"sm\">\n        <Field\n          name={name}\n          as={(formikProps: FieldInputProps<any>) => (\n            <Input\n              bsSize={props['bsSize'] ?? 'sm'}\n              type=\"checkbox\"\n              {...props}\n              {...formikProps}\n              checked={formikProps.value}\n            />\n          )}\n        />\n        {label}\n      </Label>\n      <FormText className={`form-field__help ${styles.nospace}`} color=\"muted\">\n        {description}\n      </FormText>\n    </FormGroup>\n  );\n};\n\nexport default FormikCheck;\n","type BaseApiClass = {\n  new (...args: any[]): any;\n};\n\ntype ApiModule = {\n  Configuration: {\n    new (...args: any[]): any;\n  };\n};\n\nconst apiGenerator = <T extends unknown>(\n  module: ApiModule,\n  api: BaseApiClass,\n  basePath: string,\n  jwt: string | null\n): T => {\n  const headers: any = {};\n  if (jwt) {\n    headers['X-Tapis-Token'] = jwt;\n  }\n\n  // Generate a configuration object for the module with the\n  // API URL and the authorization header\n  const configuration = new module.Configuration({\n    basePath,\n    headers,\n  });\n\n  // Create an instance of the API\n  const result: T = new api(configuration);\n  return result;\n};\n\nexport default apiGenerator;\n","const errorDecoder = async <T>(func: () => Promise<T>) => {\n  try {\n    // Call the specified function name, and expect that specific return type\n    const result: T = await func();\n    return result;\n  } catch (error) {\n    // If an exception occurred, try to decode the json response from it and\n    // rethrow it\n    if ((error as any).json) {\n      const decoded = await (error as any).json();\n      throw decoded;\n    } else {\n      throw error;\n    }\n  }\n};\n\nexport default errorDecoder;\n","import { Files } from '@tapis/tapis-typescript';\nimport { apiGenerator, errorDecoder } from 'tapis-api/utils';\n\nconst list = (\n  params: Files.ListFilesRequest,\n  basePath: string,\n  jwt: string\n) => {\n  const api: Files.FileOperationsApi = apiGenerator<Files.FileOperationsApi>(\n    Files,\n    Files.FileOperationsApi,\n    basePath,\n    jwt\n  );\n  return errorDecoder<Files.FileListingResponse>(() => api.listFiles(params));\n};\n\nexport default list;\n","import { Files } from '@tapis/tapis-typescript';\nimport { apiGenerator, errorDecoder } from 'tapis-api/utils';\n\nconst mkdir = (\n  systemId: string,\n  path: string,\n  basePath: string,\n  jwt: string\n) => {\n  const api: Files.FileOperationsApi = apiGenerator<Files.FileOperationsApi>(\n    Files,\n    Files.FileOperationsApi,\n    basePath,\n    jwt\n  );\n  return errorDecoder<Files.FileStringResponse>(() =>\n    api.mkdir({ systemId, mkdirRequest: { path } })\n  );\n};\n\nexport default mkdir;\n","import { Files } from '@tapis/tapis-typescript';\nimport { apiGenerator, errorDecoder } from 'tapis-api/utils';\n\nconst moveCopy = (\n  systemId: string,\n  path: string,\n  newPath: string,\n  operation: Files.MoveCopyRequestOperationEnum,\n  basePath: string,\n  jwt: string\n) => {\n  const api: Files.FileOperationsApi = apiGenerator<Files.FileOperationsApi>(\n    Files,\n    Files.FileOperationsApi,\n    basePath,\n    jwt\n  );\n  return errorDecoder<Files.FileStringResponse>(() =>\n    api.moveCopy({ systemId, path, moveCopyRequest: { operation, newPath } })\n  );\n};\n\nexport default moveCopy;\n","import { Files } from '@tapis/tapis-typescript';\nimport { errorDecoder } from 'tapis-api/utils';\nimport axios from 'axios';\n\nconst insert = (\n  systemId: string,\n  path: string,\n  file: File,\n  basePath: string,\n  jwt: string,\n  progressCallback?: (progress: number, file: File) => void\n): Promise<Files.FileStringResponse> => {\n  const url = `${basePath}/v3/files/ops/${systemId}/${path}${file.name}`;\n  const formData = new FormData();\n  formData.append('file', file);\n\n  const config = {\n    headers: {\n      'content-type': 'multipart/form-data',\n      'X-Tapis-Token': jwt,\n    },\n    onUploadProgress: (progressEvent: any) => {\n      if (progressCallback) {\n        let progress: number = Math.round(\n          (progressEvent.loaded * 100) / progressEvent.total\n        );\n        progressCallback(progress, file);\n      }\n    },\n  };\n\n  return errorDecoder<Files.FileStringResponse>(() =>\n    axios.post(url, formData, config)\n  );\n};\n\nexport default insert;\n","import { Files } from '@tapis/tapis-typescript';\nimport { apiGenerator, errorDecoder } from 'tapis-api/utils';\n\nconst stat = (\n  params: Files.GetStatInfoRequest,\n  basePath: string,\n  jwt: string\n) => {\n  const api: Files.FileOperationsApi = apiGenerator<Files.FileOperationsApi>(\n    Files,\n    Files.FileOperationsApi,\n    basePath,\n    jwt\n  );\n  return errorDecoder<Files.FileStatInfoResponse>(() =>\n    api.getStatInfo(params)\n  );\n};\n\nexport default stat;\n","import { Files } from '@tapis/tapis-typescript';\nimport { apiGenerator, errorDecoder } from 'tapis-api/utils';\n\nconst permissions = (\n  params: Files.GetPermissionsRequest,\n  basePath: string,\n  jwt: string\n) => {\n  const api: Files.PermissionsApi = apiGenerator<Files.PermissionsApi>(\n    Files,\n    Files.PermissionsApi,\n    basePath,\n    jwt\n  );\n  return errorDecoder<Files.FilePermissionResponse>(() =>\n    api.getPermissions(params)\n  );\n};\n\nexport default permissions;\n","import { Files } from '@tapis/tapis-typescript';\nimport { apiGenerator, errorDecoder } from 'tapis-api/utils';\n\nconst nativeOp = (\n  systemId: string,\n  path: string,\n  recursive: boolean,\n  operation: Files.NativeLinuxOpRequestOperationEnum,\n  argument: string,\n  basePath: string,\n  jwt: string\n) => {\n  const api: Files.FileOperationsApi = apiGenerator<Files.FileOperationsApi>(\n    Files,\n    Files.FileOperationsApi,\n    basePath,\n    jwt\n  );\n  const params: Files.RunLinuxNativeOpRequest = {\n    systemId,\n    path,\n    recursive,\n    nativeLinuxOpRequest: {\n      operation,\n      argument,\n    },\n  };\n  return errorDecoder<Files.NativeLinuxOpResultResponse>(() =>\n    api.runLinuxNativeOp(params)\n  );\n};\n\nexport default nativeOp;\n","import { Files } from '@tapis/tapis-typescript';\nimport { apiGenerator, errorDecoder } from 'tapis-api/utils';\n\nconst deleteFile = (\n  systemId: string,\n  path: string,\n  basePath: string,\n  jwt: string\n) => {\n  const api: Files.FileOperationsApi = apiGenerator<Files.FileOperationsApi>(\n    Files,\n    Files.FileOperationsApi,\n    basePath,\n    jwt\n  );\n  return errorDecoder<Files.FileStringResponse>(() =>\n    api._delete({ systemId, path })\n  );\n};\n\nexport default deleteFile;\n","import { errorDecoder } from 'tapis-api/utils';\nimport StreamSaver from 'streamsaver';\n\nconst downloadStream = (\n  systemId: string,\n  path: string,\n  destination: string,\n  zip: boolean,\n  onStart: null | ((response: Response) => void),\n  basePath: string,\n  jwt: string\n): Promise<Response> => {\n  const fileStream = StreamSaver.createWriteStream(destination);\n  const url = `${basePath}/v3/files/content/${systemId}/${path}${\n    zip ? '?zip=true' : ''\n  }`;\n\n  const config = {\n    headers: {\n      'X-Tapis-Token': jwt,\n    },\n  };\n\n  return errorDecoder<Response>(() =>\n    fetch(url, config).then((response) => {\n      onStart && onStart(response);\n      if (!response.body) {\n        throw new Error('Download response had no body!');\n      }\n\n      const readableStream = response.body;\n\n      // more optimized\n      if (window.WritableStream && readableStream?.pipeTo) {\n        return readableStream.pipeTo(fileStream);\n        //.then(() => console.log('done writing'));\n      }\n\n      (window as any).writer = fileStream.getWriter();\n\n      const reader = response.body!.getReader();\n      const pump = () =>\n        reader\n          .read()\n          .then((res) =>\n            res.done\n              ? (window as any).writer.close()\n              : (window as any).writer.write(res.value).then(pump)\n          );\n\n      return pump();\n    })\n  );\n};\n\nexport default downloadStream;\n","export type ResultPages<T> = { result?: T[] }[];\n\nexport const concatResults = <T>(pages: ResultPages<T>): T[] =>\n  pages.reduce(\n    (accumulator: T[], current) => accumulator.concat(current.result ?? []),\n    []\n  );\n\nexport const tapisNextPageParam = <T extends { result?: Array<any> }>(\n  lastPage: T,\n  allPages: T[],\n  params: { limit?: number }\n) => {\n  if ((lastPage.result?.length ?? 0) < params.limit!) return undefined;\n  return { ...params, offset: allPages.length * params.limit! };\n};\n","const QueryKeys = {\n  list: 'files/list',\n  mkdir: 'files/mkdir',\n  move: 'files/move',\n  copy: 'files/copy',\n  insert: 'files/insert',\n  insertAxios: 'files/insertAxios',\n  nativeOp: 'files/nativeOp',\n  permissions: 'files/permissions',\n  stat: 'files/stat',\n  delete: 'files/delete',\n  download: 'files/download',\n};\n\nexport default QueryKeys;\n","import { useInfiniteQuery, UseInfiniteQueryOptions } from 'react-query';\nimport { list } from 'tapis-api/files';\nimport { Files } from '@tapis/tapis-typescript';\nimport { useTapisConfig } from 'tapis-hooks';\nimport {\n  concatResults,\n  tapisNextPageParam,\n} from 'tapis-hooks/utils/infiniteQuery';\nimport QueryKeys from './queryKeys';\n\n// Does not use defaultParams because systemId and path are required\nconst useList = (\n  params: Files.ListFilesRequest,\n  options: UseInfiniteQueryOptions<Files.FileListingResponse, Error> = {}\n) => {\n  const { accessToken, basePath } = useTapisConfig();\n\n  // Set default limit to 100, as per TAPIS OpenAPI spec\n  params.limit = params.limit ?? 100;\n\n  const result = useInfiniteQuery<Files.FileListingResponse, Error>(\n    [QueryKeys.list, params.systemId, params.path, accessToken],\n    // Default to no token. This will generate a 403 when calling the list function\n    // which is expected behavior for not having a token\n    ({ pageParam = params }) =>\n      list(pageParam, basePath, accessToken?.access_token ?? ''),\n    {\n      ...options,\n      // getNextPageParam function computes offset, with guarantee that\n      // params.limit is set to default of 100\n      getNextPageParam: (lastPage, allPages) =>\n        tapisNextPageParam<Files.FileListingResponse>(\n          lastPage,\n          allPages,\n          params\n        ),\n      enabled: !!accessToken,\n    }\n  );\n\n  // If there are result pages, concatenate the results\n  const concatenatedResults = result.data?.pages\n    ? concatResults<Files.FileInfo>(result.data.pages)\n    : null;\n\n  return {\n    ...result,\n    concatenatedResults,\n  };\n};\n\nexport default useList;\n","import { useMutation, MutateOptions } from 'react-query';\nimport { Files } from '@tapis/tapis-typescript';\nimport { mkdir } from 'tapis-api/files';\nimport { useTapisConfig } from 'tapis-hooks';\nimport QueryKeys from './queryKeys';\n\ntype MkdirHookParams = {\n  systemId: string;\n  path: string;\n};\n\nconst useMkdir = () => {\n  const { basePath, accessToken } = useTapisConfig();\n  const jwt = accessToken?.access_token || '';\n\n  // The useMutation react-query hook is used to call operations that make server-side changes\n  // (Other hooks would be used for data retrieval)\n  //\n  // In this case, mkdir helper is called to perform the operation\n  const { mutate, isLoading, isError, isSuccess, data, error, reset } =\n    useMutation<Files.FileStringResponse, Error, MkdirHookParams>(\n      [QueryKeys.mkdir, basePath, jwt],\n      ({ systemId, path }) => mkdir(systemId, path, basePath, jwt)\n    );\n\n  // Return hook object with loading states and login function\n  return {\n    isLoading,\n    isError,\n    isSuccess,\n    data,\n    error,\n    reset,\n    mkdir: (\n      systemId: string,\n      path: string,\n      // react-query options to allow callbacks such as onSuccess\n      options?: MutateOptions<Files.FileStringResponse, Error, MkdirHookParams>\n    ) => {\n      // Call mutate to trigger a single post-like API operation\n      return mutate({ systemId, path }, options);\n    },\n  };\n};\n\nexport default useMkdir;\n","import { MoveCopyHookParams } from '.';\nimport { useMutation, MutateOptions } from 'react-query';\nimport { Files } from '@tapis/tapis-typescript';\nimport { moveCopy } from 'tapis-api/files';\nimport { useTapisConfig } from 'tapis-hooks';\nimport QueryKeys from './queryKeys';\n\nconst useMove = () => {\n  const { basePath, accessToken } = useTapisConfig();\n  const jwt = accessToken?.access_token || '';\n\n  // The useMutation react-query hook is used to call operations that make server-side changes\n  // (Other hooks would be used for data retrieval)\n  //\n  // In this case, move helper is called to perform the operation\n  const {\n    mutate,\n    mutateAsync,\n    isLoading,\n    isError,\n    isSuccess,\n    data,\n    error,\n    reset,\n  } = useMutation<Files.FileStringResponse, Error, MoveCopyHookParams>(\n    [QueryKeys.move, basePath, jwt],\n    ({ systemId, path, newPath }) =>\n      moveCopy(\n        systemId,\n        path,\n        newPath,\n        Files.MoveCopyRequestOperationEnum.Move,\n        basePath,\n        jwt\n      )\n  );\n\n  // Return hook object with loading states and login function\n  return {\n    isLoading,\n    isError,\n    isSuccess,\n    data,\n    error,\n    reset,\n    move: (\n      params: MoveCopyHookParams,\n      // react-query options to allow callbacks such as onSuccess\n      options?: MutateOptions<\n        Files.FileStringResponse,\n        Error,\n        MoveCopyHookParams\n      >\n    ) => {\n      // Call mutate to trigger a single post-like API operation\n      return mutate(params, options);\n    },\n    moveAsync: (\n      params: MoveCopyHookParams,\n      options?: MutateOptions<\n        Files.FileStringResponse,\n        Error,\n        MoveCopyHookParams\n      >\n    ) => mutateAsync(params, options),\n  };\n};\n\nexport default useMove;\n","import { MoveCopyHookParams } from '.';\nimport { useMutation, MutateOptions } from 'react-query';\nimport { Files } from '@tapis/tapis-typescript';\nimport { moveCopy } from 'tapis-api/files';\nimport { useTapisConfig } from 'tapis-hooks';\nimport QueryKeys from './queryKeys';\n\nconst useCopy = () => {\n  const { basePath, accessToken } = useTapisConfig();\n  const jwt = accessToken?.access_token || '';\n\n  // The useMutation react-query hook is used to call operations that make server-side changes\n  // (Other hooks would be used for data retrieval)\n  //\n  // In this case, move helper is called to perform the operation\n  const {\n    mutate,\n    mutateAsync,\n    isLoading,\n    isError,\n    isSuccess,\n    data,\n    error,\n    reset,\n  } = useMutation<Files.FileStringResponse, Error, MoveCopyHookParams>(\n    [QueryKeys.move, basePath, jwt],\n    ({ systemId, path, newPath }) =>\n      moveCopy(\n        systemId,\n        path,\n        newPath,\n        Files.MoveCopyRequestOperationEnum.Copy,\n        basePath,\n        jwt\n      )\n  );\n\n  // Return hook object with loading states and login function\n  return {\n    isLoading,\n    isError,\n    isSuccess,\n    data,\n    error,\n    reset,\n    copy: (\n      params: MoveCopyHookParams,\n      // react-query options to allow callbacks such as onSuccess\n      options?: MutateOptions<\n        Files.FileStringResponse,\n        Error,\n        MoveCopyHookParams\n      >\n    ) => mutate(params, options),\n    copyAsync: (\n      params: MoveCopyHookParams,\n      options?: MutateOptions<\n        Files.FileStringResponse,\n        Error,\n        MoveCopyHookParams\n      >\n    ) => mutateAsync(params, options),\n  };\n};\n\nexport default useCopy;\n","import { useMutation, MutateOptions } from 'react-query';\nimport { Files } from '@tapis/tapis-typescript';\nimport { insertAxios as insert } from 'tapis-api/files';\nimport { useTapisConfig } from 'tapis-hooks';\nimport QueryKeys from './queryKeys';\n\nexport type InsertHookParams = {\n  systemId: string;\n  path: string;\n  file: File;\n  progressCallback?: (progress: number, file: File) => void;\n};\n\nconst useUpload = () => {\n  const { basePath, accessToken } = useTapisConfig();\n  const jwt = accessToken?.access_token || '';\n\n  // The useMutation react-query hook is used to call operations that make server-side changes\n  // (Other hooks would be used for data retrieval)\n  //\n  // In this case, upload helper is called to perform the operation\n  const {\n    mutate,\n    mutateAsync,\n    isLoading,\n    isError,\n    isSuccess,\n    data,\n    error,\n    reset,\n  } = useMutation<Files.FileStringResponse, Error, InsertHookParams>(\n    [QueryKeys.insertAxios, basePath, jwt],\n    ({ systemId, path, file, progressCallback }) =>\n      insert(systemId, path, file, basePath, jwt, progressCallback)\n  );\n\n  // Return hook object with loading states and login function\n  return {\n    isLoading,\n    isError,\n    isSuccess,\n    data,\n    error,\n    reset,\n    uploadFile: (\n      params: InsertHookParams,\n      // react-query options to allow callbacks such as onSuccess\n      options?: MutateOptions<Files.FileStringResponse, Error, InsertHookParams>\n    ) => {\n      // Call mutate to trigger a single post-like API operation\n      return mutate(params, options);\n    },\n    uploadAsync: (\n      params: InsertHookParams,\n      options?: MutateOptions<Files.FileStringResponse, Error, InsertHookParams>\n    ) => mutateAsync(params, options),\n  };\n};\n\nexport default useUpload;\n","import { useQuery } from 'react-query';\nimport { stat } from 'tapis-api/files';\nimport { Files } from '@tapis/tapis-typescript';\nimport { useTapisConfig } from 'tapis-hooks';\nimport QueryKeys from './queryKeys';\n\nconst useStat = (params: Files.GetStatInfoRequest) => {\n  const { accessToken, basePath } = useTapisConfig();\n  const result = useQuery<Files.FileStatInfoResponse, Error>(\n    [QueryKeys.stat, params, accessToken],\n    // Default to no token. This will generate a 403 when calling the list function\n    // which is expected behavior for not having a token\n    () => stat(params, basePath, accessToken?.access_token ?? ''),\n    {\n      enabled: !!accessToken,\n    }\n  );\n  return result;\n};\n\nexport default useStat;\n","import { useQuery } from 'react-query';\nimport { permissions } from 'tapis-api/files';\nimport { Files } from '@tapis/tapis-typescript';\nimport { useTapisConfig } from 'tapis-hooks';\nimport QueryKeys from './queryKeys';\n\nconst usePermissions = (params: Files.GetPermissionsRequest) => {\n  const { accessToken, basePath } = useTapisConfig();\n  const result = useQuery<Files.FilePermissionResponse, Error>(\n    [QueryKeys.permissions, params, accessToken],\n    // Default to no token. This will generate a 403 when calling the list function\n    // which is expected behavior for not having a token\n    () => permissions(params, basePath, accessToken?.access_token ?? ''),\n    {\n      enabled: !!accessToken,\n    }\n  );\n  return result;\n};\n\nexport default usePermissions;\n","import { useMutation, MutateOptions } from 'react-query';\nimport { Files } from '@tapis/tapis-typescript';\nimport { nativeOp } from 'tapis-api/files';\nimport { useTapisConfig } from 'tapis-hooks';\nimport { NativeOpParams } from '.';\nimport QueryKeys from './queryKeys';\n\nconst useNativeOp = () => {\n  const { basePath, accessToken } = useTapisConfig();\n  const jwt = accessToken?.access_token || '';\n\n  // The useMutation react-query hook is used to call operations that make server-side changes\n  // (Other hooks would be used for data retrieval)\n  //\n  // In this case, move helper is called to perform the operation\n  const {\n    mutate,\n    mutateAsync,\n    isLoading,\n    isError,\n    isSuccess,\n    data,\n    error,\n    reset,\n  } = useMutation<Files.NativeLinuxOpResultResponse, Error, NativeOpParams>(\n    [QueryKeys.nativeOp, basePath, jwt],\n    ({ systemId, path, recursive, operation, argument }) =>\n      nativeOp(\n        systemId,\n        path,\n        recursive ? true : false,\n        operation,\n        argument ?? '',\n        basePath,\n        jwt\n      )\n  );\n\n  // Return hook object with loading states and login function\n  return {\n    isLoading,\n    isError,\n    isSuccess,\n    data,\n    error,\n    reset,\n    nativeOp: (\n      params: NativeOpParams,\n      // react-query options to allow callbacks such as onSuccess\n      options?: MutateOptions<\n        Files.NativeLinuxOpResultResponse,\n        Error,\n        NativeOpParams\n      >\n    ) => {\n      // Call mutate to trigger a single post-like API operation\n      return mutate(params, options);\n    },\n    nativeOpAsync: (\n      params: NativeOpParams,\n      options?: MutateOptions<\n        Files.NativeLinuxOpResultResponse,\n        Error,\n        NativeOpParams\n      >\n    ) => mutateAsync(params, options),\n  };\n};\n\nexport default useNativeOp;\n","import { useMutation, MutateOptions } from 'react-query';\nimport { Files } from '@tapis/tapis-typescript';\nimport { deleteFile } from 'tapis-api/files';\nimport { useTapisConfig } from 'tapis-hooks';\nimport QueryKeys from './queryKeys';\n\nexport type DeleteHookParams = {\n  systemId: string;\n  path: string;\n};\n\nconst useDelete = () => {\n  const { basePath, accessToken } = useTapisConfig();\n  const jwt = accessToken?.access_token || '';\n\n  // The useMutation react-query hook is used to call operations that make server-side changes\n  // (Other hooks would be used for data retrieval)\n  //\n  // In this case, _delete helper is called to perform the operation\n  const {\n    mutate,\n    mutateAsync,\n    isLoading,\n    isError,\n    isSuccess,\n    data,\n    error,\n    reset,\n  } = useMutation<Files.FileStringResponse, Error, DeleteHookParams>(\n    [QueryKeys.delete, basePath, jwt],\n    ({ systemId, path }) => deleteFile(systemId, path, basePath, jwt)\n  );\n\n  // Return hook object with loading states and login function\n  return {\n    isLoading,\n    isError,\n    isSuccess,\n    data,\n    error,\n    reset,\n    deleteFile: (\n      params: DeleteHookParams,\n      // react-query options to allow callbacks such as onSuccess\n      options?: MutateOptions<Files.FileStringResponse, Error, DeleteHookParams>\n    ) => {\n      // Call mutate to trigger a single post-like API operation\n      return mutate(params, options);\n    },\n    deleteFileAsync: (\n      params: DeleteHookParams,\n      options?: MutateOptions<Files.FileStringResponse, Error, DeleteHookParams>\n    ) => mutateAsync(params, options),\n  };\n};\n\nexport default useDelete;\n","import { useMutation, MutateOptions } from 'react-query';\nimport { downloadStream } from 'tapis-api/files';\nimport { useTapisConfig } from 'tapis-hooks';\nimport QueryKeys from './queryKeys';\nimport { DownloadStreamParams } from '.';\n\nconst useDownload = () => {\n  const { basePath, accessToken } = useTapisConfig();\n  const jwt = accessToken?.access_token || '';\n\n  // The useMutation react-query hook is used to call operations that make server-side changes\n  // (Other hooks would be used for data retrieval)\n  //\n  // In this case, move helper is called to perform the operation\n  const {\n    mutate,\n    mutateAsync,\n    isLoading,\n    isError,\n    isSuccess,\n    data,\n    error,\n    reset,\n  } = useMutation<Response, Error, DownloadStreamParams>(\n    [QueryKeys.download, basePath, jwt],\n    ({ systemId, path, destination, zip = false, onStart = null }) =>\n      downloadStream(systemId, path, destination, zip, onStart, basePath, jwt)\n  );\n\n  // Return hook object with loading states and login function\n  return {\n    isLoading,\n    isError,\n    isSuccess,\n    data,\n    error,\n    reset,\n    download: (\n      params: DownloadStreamParams,\n      // react-query options to allow callbacks such as onSuccess\n      options?: MutateOptions<Response, Error, DownloadStreamParams>\n    ) => {\n      // Call mutate to trigger a single post-like API operation\n      return mutate(params, options);\n    },\n    downloadAsync: (\n      params: DownloadStreamParams,\n      options?: MutateOptions<Response, Error, DownloadStreamParams>\n    ) => mutateAsync(params, options),\n  };\n};\n\nexport default useDownload;\n","import { default as QueryWrapper } from './QueryWrapper';\n\nexport default QueryWrapper;\n","import React from 'react';\nimport { LoadingSpinner, Message } from 'tapis-ui/_common';\n\ntype QueryWrapperProps = React.PropsWithChildren<{\n  isLoading: boolean;\n  error: Error | null;\n  className?: string;\n}>;\n\nconst QueryWrapper: React.FC<QueryWrapperProps> = ({\n  isLoading,\n  error,\n  children,\n  className = '',\n}) => {\n  if (isLoading) {\n    return (\n      <div className={className}>\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className={className}>\n        <Message canDismiss={false} type=\"error\" scope=\"inline\">\n          {(error as any).message ?? error}\n        </Message>\n      </div>\n    );\n  }\n  return <div className={className}>{children}</div>;\n};\n\nexport default QueryWrapper;\n","import SubmitWrapper from './SubmitWrapper';\n\nexport default SubmitWrapper;\n","import React from 'react';\nimport { LoadingSpinner, Message } from 'tapis-ui/_common';\nimport styles from './SubmitWrapper.module.scss';\n\ntype SubmitWrapperProps = React.PropsWithChildren<{\n  isLoading: boolean;\n  success: string | undefined;\n  error: Error | null;\n  className?: string;\n  reverse?: boolean;\n}>;\n\nconst SubmitWrapper: React.FC<SubmitWrapperProps> = ({\n  isLoading,\n  error,\n  success,\n  children,\n  className = '',\n  reverse = false,\n}) => {\n  return (\n    <div\n      className={`${className} ${styles.wrapper} ${reverse && styles.reverse}`}\n    >\n      {children}\n      {isLoading && (\n        <LoadingSpinner\n          className={styles['loading-spinner']}\n          placement=\"inline\"\n        />\n      )}\n      {error ? (\n        <Message canDismiss={false} type=\"error\" scope=\"inline\">\n          {(error as any)?.message ?? error}\n        </Message>\n      ) : (\n        success && (\n          <Message canDismiss={false} type=\"success\" scope=\"inline\">\n            {success}\n          </Message>\n        )\n      )}\n    </div>\n  );\n};\n\nexport default SubmitWrapper;\n","import React, { useState, useContext, useCallback, useEffect } from 'react';\nimport StepWizard, { StepWizardChildProps } from 'react-step-wizard';\nimport { Button } from 'reactstrap';\nimport { WizardStep } from '.';\nimport { Formik, Form, useFormikContext } from 'formik';\nimport styles from './Wizard.module.scss';\n\nexport type WizardContextType = Partial<StepWizardChildProps>;\n\nconst WizardContext: React.Context<WizardContextType> =\n  React.createContext<WizardContextType>({});\n\nexport const useWizard = () => {\n  const props = useContext(WizardContext);\n  return props;\n};\n\nexport const WizardNavigation: React.FC = () => {\n  const { currentStep, previousStep, totalSteps, nextStep, goToStep } =\n    useWizard();\n  const { validateForm, handleSubmit } = useFormikContext();\n  const onContinue = useCallback(async () => {\n    try {\n      const errors = await validateForm();\n      if (!Object.keys(errors).length) {\n        handleSubmit && handleSubmit();\n        nextStep && nextStep();\n      }\n    } catch {}\n  }, [validateForm, nextStep, handleSubmit]);\n  const onSkip = useCallback(async () => {\n    try {\n      const errors = await validateForm();\n      if (!Object.keys(errors).length && goToStep && !!totalSteps) {\n        // Skip to End button doesn't appear to trigger handleSubmit,\n        // so it must be called explicitly\n        handleSubmit();\n        goToStep(totalSteps);\n      }\n    } catch {}\n  }, [validateForm, handleSubmit, goToStep, totalSteps]);\n  return (\n    <div className={styles.controls}>\n      {!!currentStep && currentStep > 1 && (\n        <Button onClick={previousStep}>Back</Button>\n      )}\n      {!!currentStep && !!totalSteps && currentStep < totalSteps && (\n        <>\n          <Button type=\"submit\" color=\"primary\" onClick={onContinue}>\n            Continue\n          </Button>\n          <Button type=\"submit\" color=\"secondary\" onClick={onSkip}>\n            Skip to End\n          </Button>\n        </>\n      )}\n    </div>\n  );\n};\n\ntype WizardControlProps<T> = {\n  steps: Array<WizardStep<T>>;\n} & Partial<StepWizardChildProps>;\n\nfunction WizardSummary<T>({\n  steps,\n  ...stepWizardProps\n}: WizardControlProps<T>) {\n  const { goToNamedStep } = stepWizardProps;\n  const editCallback = useCallback(\n    (stepId: string) => goToNamedStep && goToNamedStep(stepId),\n    [goToNamedStep]\n  );\n  return (\n    <div className={styles.summary}>\n      <h3>Summary</h3>\n      {steps.map((step) => (\n        <div\n          className={styles['step-summary']}\n          key={`wizard-summary-${step.id}`}\n        >\n          <div className={styles.name}>\n            <b>{step.name}</b>\n            <Button\n              color=\"link\"\n              onClick={() => editCallback(step.id)}\n              className={styles.edit}\n            >\n              edit\n            </Button>\n          </div>\n          <div className={styles.content}>{step.summary}</div>\n        </div>\n      ))}\n    </div>\n  );\n}\n\ntype StepContainerProps<T> = {\n  step: WizardStep<T>;\n  formSubmit: (values: Partial<T>) => void;\n} & Partial<StepWizardChildProps>;\n\nfunction StepContainer<T>({ step, formSubmit }: StepContainerProps<T>) {\n  const { validationSchema, initialValues, validate } = step;\n  return (\n    <Formik\n      validationSchema={validationSchema}\n      initialValues={initialValues}\n      validate={validate}\n      onSubmit={formSubmit}\n      enableReinitialize={true}\n    >\n      <Form>\n        <div className={styles.step}>\n          {step.render}\n          <WizardNavigation />\n        </div>\n      </Form>\n    </Formik>\n  );\n}\n\ntype WizardProps<T> = {\n  steps: Array<WizardStep<T>>;\n  memo?: any;\n  formSubmit: (values: Partial<T>) => void;\n};\n\nfunction Wizard<T>({ steps, memo, formSubmit }: WizardProps<T>) {\n  const [stepWizardProps, setStepWizardProps] = useState<\n    Partial<StepWizardChildProps>\n  >({});\n\n  const instanceCallback = useCallback(\n    (props: Partial<StepWizardChildProps>) => {\n      setStepWizardProps({\n        currentStep: 1,\n        totalSteps: steps.length,\n        ...props,\n      });\n    },\n    [setStepWizardProps, steps]\n  );\n\n  const stepChangeCallback = useCallback(\n    ({ activeStep }: { previousStep: number; activeStep: number }) => {\n      setStepWizardProps({\n        ...stepWizardProps,\n        currentStep: activeStep,\n      });\n    },\n    [setStepWizardProps, stepWizardProps]\n  );\n\n  const { goToStep } = stepWizardProps;\n\n  useEffect(\n    () => {\n      goToStep && goToStep(1);\n    },\n    /* eslint-disable-next-line */\n    [memo]\n  );\n\n  return (\n    <WizardContext.Provider value={stepWizardProps}>\n      <div className={styles.container}>\n        <StepWizard\n          instance={instanceCallback}\n          className={styles.steps}\n          onStepChange={stepChangeCallback}\n          transitions={{}}\n        >\n          {steps.map((step) => (\n            <StepContainer<T>\n              step={step}\n              key={`wizard-step-${step.id}`}\n              stepName={step.id}\n              formSubmit={formSubmit}\n            />\n          ))}\n        </StepWizard>\n        <WizardSummary steps={steps} {...stepWizardProps} />\n      </div>\n    </WizardContext.Provider>\n  );\n}\n\nexport default Wizard;\n","import React from 'react';\nimport Wizard from './Wizard';\n\nexport type WizardStep<T> = {\n  id: string;\n  name: string;\n  render: React.ReactNode;\n  summary: React.ReactNode;\n  validationSchema: any;\n  initialValues: Partial<T>;\n  validate?: (values: Partial<T>) => void;\n};\n\nexport { useWizard, WizardNavigation } from './Wizard';\nexport default Wizard;\n","/**\n * Create a string representation of a file/folder size using internal standard\n * @param {number} bytes - The size of an entity\n * @returns {string}\n */\nfunction createSizeString(bytes: number): string {\n  const units = ['bytes', 'kB', 'MB', 'GB', 'TB', 'PB'];\n  const number = bytes === 0 ? 0 : Math.floor(Math.log(bytes) / Math.log(1024));\n  const bytesString = (bytes / 1024 ** Math.floor(number)).toFixed(1);\n\n  return `${bytesString} ${units[number]}`;\n}\n\nexport default createSizeString;\n","/**\n * Create a string representation of date using internal standard\n * @param {Date} dateTime - A date object\n * @returns {string}\n */\nexport function formatDate(dateTime: Date) {\n  return dateTime.toLocaleDateString('en-US', {\n    day: '2-digit',\n    month: '2-digit',\n    year: 'numeric',\n  });\n}\n\n/**\n * Create a string representation of time using internal standard\n * @param {Date} dateTime - A date object\n * @returns {string}\n */\nexport function formatTime(dateTime: Date) {\n  return dateTime.toLocaleTimeString('en-US', {\n    hour12: false,\n    hour: '2-digit',\n    minute: '2-digit',\n  });\n}\n\n/**\n * Create a string representation of date and time using internal standard\n * @param {Date} dateTime - A date object\n * @returns {string}\n */\nexport function formatDateTime(dateTime: Date) {\n  return `${formatDate(dateTime)} ${formatTime(dateTime)}`;\n}\n\n/**\n * A standard-format date string or UNIX timestamp\n * @typedef {string|number} DateTimeValue\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/Date\n */\n/**\n * Create a string representation of date/time using internal standard\n * @param {DateTimeValue} dateTimeValue - A single value date-time representation\n * @returns {string}\n */\nexport function formatDateTimeFromValue(dateTimeValue: Date) {\n  const date = new Date(dateTimeValue);\n\n  return formatDateTime(date);\n}\n","import { Apps, Jobs, Systems } from '@tapis/tapis-typescript';\n\ntype DefaultSystem = {\n  source?: 'app';\n  systemId?: string;\n};\n\n/**\n * Computes the default execution system ID that will be used\n *\n * @param app\n * @returns\n */\nexport const computeDefaultSystem = (app: Apps.TapisApp): DefaultSystem => {\n  if (app.jobAttributes?.execSystemId) {\n    return {\n      source: 'app',\n      systemId: app.jobAttributes?.execSystemId,\n    };\n  }\n  return {\n    source: undefined,\n    systemId: undefined,\n  };\n};\n\ntype DefaultQueue = {\n  source?: 'app' | 'system' | 'app system';\n  queue?: string;\n};\n\n/**\n * Computes the logical queue that will be used, if the job does not\n * specify one\n *\n * @param job\n * @param app\n * @param systems\n * @returns\n */\nexport const computeDefaultQueue = (\n  job: Partial<Jobs.ReqSubmitJob>,\n  app: Apps.TapisApp,\n  systems: Array<Systems.TapisSystem>\n): DefaultQueue => {\n  // If the app specifies the logical queue, use that\n  if (app.jobAttributes?.execSystemLogicalQueue) {\n    return {\n      source: 'app',\n      queue: app.jobAttributes?.execSystemLogicalQueue,\n    };\n  }\n\n  // If the job specifies a system, look for its default logical queue\n  if (job.execSystemId) {\n    const selectedSystem = systems.find(\n      (system) => system.id === job.execSystemId\n    );\n    if (selectedSystem?.batchDefaultLogicalQueue) {\n      return {\n        source: 'system',\n        queue: selectedSystem.batchDefaultLogicalQueue,\n      };\n    }\n  }\n\n  // If the app specifies a system, look for its default logical queue\n  if (app.jobAttributes?.execSystemId) {\n    const appSystem = systems.find(\n      (system) => system.id === app.jobAttributes?.execSystemId\n    );\n    if (appSystem?.batchDefaultLogicalQueue) {\n      return {\n        source: 'app system',\n        queue: appSystem.batchDefaultLogicalQueue,\n      };\n    }\n  }\n\n  // Return a result that has no computed default logical queue\n  return {\n    source: undefined,\n    queue: undefined,\n  };\n};\n\ntype DefaultJobType = {\n  source: 'app' | 'app system' | 'system' | 'tapis';\n  jobType: Apps.JobTypeEnum;\n};\n\n/**\n * Determines the default jobType if one is not specified in the jobType field in a job\n * using the algorithm specified at:\n *\n * https://tapis.readthedocs.io/en/latest/technical/jobs.html#job-type\n *\n * @param job\n * @param app\n * @param systems\n * @returns\n */\nexport const computeDefaultJobType = (\n  job: Partial<Jobs.ReqSubmitJob>,\n  app: Apps.TapisApp,\n  systems: Array<Systems.TapisSystem>\n): DefaultJobType => {\n  if (app.jobType) {\n    return {\n      source: 'app',\n      jobType: app.jobType!,\n    };\n  }\n  if (job?.execSystemId) {\n    const selectedSystem = systems.find(\n      (system) => system.id === job.execSystemId\n    );\n    if (selectedSystem?.canRunBatch) {\n      return {\n        source: 'system',\n        jobType: Apps.JobTypeEnum.Batch,\n      };\n    }\n  }\n  if (app.jobAttributes?.execSystemId) {\n    const appSystem = systems.find(\n      (system) => system.id === app.jobAttributes?.execSystemId\n    );\n    if (appSystem?.canRunBatch) {\n      return {\n        source: 'app system',\n        jobType: Apps.JobTypeEnum.Batch,\n      };\n    }\n  }\n  return {\n    source: 'tapis',\n    jobType: Apps.JobTypeEnum.Fork,\n  };\n};\n\nexport enum ValidateExecSystemResult {\n  Complete = 'COMPLETE',\n  ErrorNoExecSystem = 'ERROR_NO_EXEC_SYSTEM',\n  ErrorExecSystemNotFound = 'ERROR_EXEC_SYSTEM_NOT_FOUND',\n  ErrorExecSystemNoQueues = 'ERROR_EXEC_SYSTEM_NO_QUEUES',\n  ErrorNoQueue = 'ERROR_NO_QUEUE',\n  ErrorQueueNotFound = 'ERROR_QUEUE_NOT_FOUND',\n}\n\nexport const validateExecSystem = (\n  job: Partial<Jobs.ReqSubmitJob>,\n  app: Apps.TapisApp,\n  systems: Array<Systems.TapisSystem>\n): ValidateExecSystemResult => {\n  const defaultSystem = computeDefaultSystem(app);\n\n  // Check that an exec system can be computed\n  if (!job.execSystemId && !defaultSystem?.systemId) {\n    return ValidateExecSystemResult.ErrorNoExecSystem;\n  }\n\n  const computedSystem = systems.find(\n    (system) => system.id === (job.execSystemId ?? defaultSystem?.systemId)\n  );\n  if (!computedSystem) {\n    return ValidateExecSystemResult.ErrorExecSystemNotFound;\n  }\n\n  // If the job will be a FORK job, skip queue validation\n  const computedJobType = computeDefaultJobType(job, app, systems);\n  if (\n    job.jobType !== Apps.JobTypeEnum.Batch &&\n    computedJobType.jobType === Apps.JobTypeEnum.Fork\n  ) {\n    return ValidateExecSystemResult.Complete;\n  }\n\n  // If the job will be a BATCH job, make sure that the selected execution system\n  // has queues\n  if (!computedSystem.batchLogicalQueues?.length) {\n    return ValidateExecSystemResult.ErrorExecSystemNoQueues;\n  }\n\n  const defaultQueue = computeDefaultQueue(job, app, systems);\n\n  // If the job type will be a BATCH job, ensure that a queue is specified\n  // If no queue exists, there must be a fallback to the app or system default\n  if (!job.execSystemLogicalQueue && !defaultQueue.queue) {\n    return ValidateExecSystemResult.ErrorNoQueue;\n  }\n\n  // Check to see that the logical queue selected exists on the selected system\n  const selectedSystem = systems.find(\n    (system) => system.id === (job.execSystemId ?? defaultSystem?.systemId)\n  );\n  if (\n    !selectedSystem?.batchLogicalQueues?.some(\n      (queue) =>\n        queue.name === (job.execSystemLogicalQueue ?? defaultQueue.queue)\n    )\n  ) {\n    return ValidateExecSystemResult.ErrorQueueNotFound;\n  }\n\n  return ValidateExecSystemResult.Complete;\n};\n","import { Systems } from '@tapis/tapis-typescript';\nimport { apiGenerator, errorDecoder } from 'tapis-api/utils';\n\nconst list = (\n  params: Systems.GetSystemsRequest, // contains all params, example: {select: 'allAttributes', listType: ListTypeEnum.All}\n  basePath: string,\n  jwt: string\n) => {\n  const api: Systems.SystemsApi = apiGenerator<Systems.SystemsApi>(\n    Systems,\n    Systems.SystemsApi,\n    basePath,\n    jwt\n  );\n  return errorDecoder<Systems.RespSystems>(() => api.getSystems(params));\n};\n\nexport default list;\n","import { Systems } from '@tapis/tapis-typescript';\nimport { apiGenerator, errorDecoder } from 'tapis-api/utils';\n\nconst details = (\n  params: Systems.GetSystemRequest,\n  basePath: string,\n  jwt: string\n) => {\n  const api: Systems.SystemsApi = apiGenerator<Systems.SystemsApi>(\n    Systems,\n    Systems.SystemsApi,\n    basePath,\n    jwt\n  );\n  return errorDecoder<Systems.RespSystem>(() => api.getSystem(params));\n};\n\nexport default details;\n","import { Systems } from '@tapis/tapis-typescript';\nimport { apiGenerator, errorDecoder } from 'tapis-api/utils';\n\nconst listSchedulerProfiles = (basePath: string, jwt: string) => {\n  const api: Systems.SchedulerProfilesApi =\n    apiGenerator<Systems.SchedulerProfilesApi>(\n      Systems,\n      Systems.SchedulerProfilesApi,\n      basePath,\n      jwt\n    );\n  return errorDecoder<Systems.RespSchedulerProfiles>(() =>\n    api.getSchedulerProfiles()\n  );\n};\n\nexport default listSchedulerProfiles;\n","import { Systems } from '@tapis/tapis-typescript';\nimport { apiGenerator, errorDecoder } from 'tapis-api/utils';\n\nconst createCredentials = (\n  params: Systems.CreateUserCredentialRequest,\n  basePath: string = 'https://scoped.tapis.io',\n  jwt: string\n) => {\n  const api: Systems.CredentialsApi = apiGenerator<Systems.CredentialsApi>(\n    Systems,\n    Systems.CredentialsApi,\n    basePath,\n    jwt\n  );\n\n  return errorDecoder<Systems.RespBasic>(() =>\n    api.createUserCredential(params)\n  );\n};\n\nexport default createCredentials;\n","import { Systems } from '@tapis/tapis-typescript';\nimport { apiGenerator, errorDecoder } from 'tapis-api/utils';\n\nconst makeNewSystem = (\n  reqPostSystem: Systems.ReqPostSystem,\n  basePath: string,\n  jwt: string,\n  skipCredentialCheck?: boolean\n) => {\n  const api: Systems.SystemsApi = apiGenerator<Systems.SystemsApi>(\n    Systems,\n    Systems.SystemsApi,\n    basePath,\n    jwt\n  );\n  return errorDecoder<Systems.RespBasic>(() =>\n    api.createSystem({ reqPostSystem, skipCredentialCheck })\n  );\n};\n\nexport default makeNewSystem;\n","const QueryKeys = {\n  list: 'systems/list',\n  details: 'systems/details',\n  listSchedulerProfiles: 'systems/listScehdulerProfiles',\n  createCredentials: 'systems/credentials/createCredentials',\n  makeNewSystem: 'systems/makeNewSystem',\n};\n\nexport default QueryKeys;\n","import { useQuery, QueryObserverOptions } from 'react-query';\nimport { list } from 'tapis-api/systems';\nimport { Systems } from '@tapis/tapis-typescript';\nimport { useTapisConfig } from 'tapis-hooks';\nimport QueryKeys from './queryKeys';\nimport { ListTypeEnum } from '@tapis/tapis-typescript-systems';\n\nexport const defaultParams: Systems.GetSystemsRequest = {\n  listType: ListTypeEnum.All,\n};\n\nconst useList = (\n  params: Systems.GetSystemsRequest = defaultParams,\n  options: QueryObserverOptions<Systems.RespSystems, Error> = {}\n) => {\n  const { accessToken, basePath } = useTapisConfig();\n  const result = useQuery<Systems.RespSystems, Error>(\n    [QueryKeys.list, params, accessToken],\n    // Default to no token. This will generate a 403 when calling the list function\n    // which is expected behavior for not having a token\n    () => list(params, basePath, accessToken?.access_token || ''),\n    {\n      ...options,\n      enabled: !!accessToken,\n    }\n  );\n  return result;\n};\n\nexport default useList;\n","import { useQuery, QueryObserverOptions } from 'react-query';\nimport { details } from 'tapis-api/systems';\nimport { Systems } from '@tapis/tapis-typescript';\nimport { useTapisConfig } from 'tapis-hooks';\nimport QueryKeys from './queryKeys';\n\nconst useDetails = (\n  params: Systems.GetSystemRequest,\n  options: QueryObserverOptions<Systems.RespSystem, Error> = {}\n) => {\n  const { accessToken, basePath } = useTapisConfig();\n  const result = useQuery<Systems.RespSystem, Error>(\n    [QueryKeys.details, params, accessToken],\n    // Default to no token. This will generate a 403 when calling the list function\n    // which is expected behavior for not having a token\n    () => details(params, basePath, accessToken?.access_token ?? ''),\n    {\n      enabled: !!accessToken,\n    }\n  );\n  return result;\n};\n\nexport default useDetails;\n","import { useQuery, QueryObserverOptions } from 'react-query';\nimport { listSchedulerProfiles } from 'tapis-api/systems';\nimport { Systems } from '@tapis/tapis-typescript';\nimport { useTapisConfig } from 'tapis-hooks';\nimport QueryKeys from './queryKeys';\n\nconst useSchedulerProfiles = (\n  options: QueryObserverOptions<Systems.RespSchedulerProfiles, Error> = {}\n) => {\n  const { accessToken, basePath } = useTapisConfig();\n  const result = useQuery<Systems.RespSchedulerProfiles, Error>(\n    [QueryKeys.listSchedulerProfiles, accessToken],\n    // Default to no token. This will generate a 403 when calling the list function\n    // which is expected behavior for not having a token\n    () => listSchedulerProfiles(basePath, accessToken?.access_token || ''),\n    {\n      ...options,\n      enabled: !!accessToken,\n    }\n  );\n  return result;\n};\n\nexport default useSchedulerProfiles;\n","import { useMutation, MutateOptions } from 'react-query';\nimport { Systems } from '@tapis/tapis-typescript';\nimport { createCredentials } from '../../tapis-api/systems';\nimport { useTapisConfig } from '..';\nimport QueryKeys from './queryKeys';\nimport { ReqUpdateCredential } from '@tapis/tapis-typescript-systems';\n\ntype AddCredentialsHookParams = {\n  systemId: string;\n  userName: string;\n  reqUpdateCredential: ReqUpdateCredential;\n};\n\nconst useCreateCredentials = () => {\n  const { basePath, accessToken } = useTapisConfig();\n  const jwt = accessToken?.access_token || '';\n\n  const { mutate, isLoading, isError, isSuccess, data, error, reset } =\n    useMutation<Systems.RespBasic, Error, AddCredentialsHookParams>(\n      [QueryKeys.createCredentials, basePath, jwt],\n      (params) => createCredentials(params, basePath, jwt)\n    );\n\n  // Return hook object with loading states and login function\n  return {\n    isLoading,\n    isError,\n    isSuccess,\n    data,\n    error,\n    reset,\n    createCredentials: (\n      params: AddCredentialsHookParams,\n      // react-query options to allow callbacks such as onSuccess\n      options?: MutateOptions<\n        Systems.RespBasic,\n        Error,\n        AddCredentialsHookParams\n      >\n    ) => {\n      // Call mutate to trigger a single post-like API operation\n      return mutate(params, options);\n    },\n  };\n};\n\nexport default useCreateCredentials;\n","import { useMutation, MutateOptions } from 'react-query';\nimport { Systems } from '@tapis/tapis-typescript';\nimport { makeNewSystem } from '../../tapis-api/systems';\nimport { useTapisConfig } from '../context';\nimport QueryKeys from './queryKeys';\n\ntype MkNewSystemHookParams = {\n  reqPostSystem: Systems.ReqPostSystem;\n  skipCredentialCheck: boolean;\n};\n\nconst useMakeNewSystem = () => {\n  const { basePath, accessToken } = useTapisConfig();\n  const jwt = accessToken?.access_token || '';\n\n  // The useMutation react-query hook is used to call operations that make server-side changes\n  // (Other hooks would be used for data retrieval)\n  //\n  // In this case, mkdir helper is called to perform the operation\n  const { mutate, isLoading, isError, isSuccess, data, error, reset } =\n    useMutation<Systems.RespBasic, Error, MkNewSystemHookParams>(\n      [QueryKeys.makeNewSystem, basePath, jwt],\n      ({ reqPostSystem, skipCredentialCheck }) =>\n        makeNewSystem(reqPostSystem, basePath, jwt, skipCredentialCheck)\n    );\n\n  // Return hook object with loading states and login function\n  return {\n    isLoading,\n    isError,\n    isSuccess,\n    data,\n    error,\n    reset,\n    makeNewSystem: (\n      reqPostSystem: Systems.ReqPostSystem,\n      skipCredentialCheck: boolean = true,\n      // react-query options to allow callbacks such as onSuccess\n      options?: MutateOptions<Systems.RespBasic, Error, MkNewSystemHookParams>\n    ) => {\n      // Call mutate to trigger a single post-like API operation\n      return mutate({ reqPostSystem, skipCredentialCheck }, options);\n    },\n  };\n};\n\nexport default useMakeNewSystem;\n","import { FormikInput } from 'tapis-ui/_common';\n\nconst Password: React.FC = () => {\n  return (\n    <>\n      <FormikInput\n        name=\"username\"\n        label=\"Username\"\n        required={true}\n        description=\"Your TAPIS username\"\n      />\n      <FormikInput\n        name=\"password\"\n        label=\"Password\"\n        required={true}\n        description=\"Your TAPIS password\"\n        type=\"password\"\n      />\n    </>\n  );\n};\n\nexport default Password;\n","import { FormikInput } from 'tapis-ui/_common';\n\nconst Token: React.FC = () => {\n  return (\n    <>\n      <FormikInput\n        name=\"accessToken\"\n        label=\"Access Token\"\n        required={true}\n        description=\"Access token\"\n      />\n      <FormikInput\n        name=\"refreshToken\"\n        label=\"Refresh Token\"\n        required={true}\n        description=\"Refresh token\"\n      />\n    </>\n  );\n};\n\nexport default Token;\n","import { FormikInput } from 'tapis-ui/_common';\nimport { Systems } from '@tapis/tapis-typescript';\n\ntype PkiKeysProps = {\n  system: Systems.TapisSystem | undefined;\n};\n\nconst PkiKeys: React.FC<PkiKeysProps> = ({ system }) => {\n  return (\n    <>\n      <a\n        style={{ whiteSpace: 'pre-line' }}\n        href=\"https://github.com/jaeestee/scoped-tapis-ui/blob/main/src/tapis-app/Systems/_components/AddCredentials/AuthenticationMethods/README.md\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        {`\\n\\n`}Authentication Method Tutorial\n      </a>\n      <div style={{ whiteSpace: 'pre-line' }}>\n        Host: {system?.host} {`\\n\\n`}\n      </div>\n      <FormikInput\n        name=\"publicKey\"\n        label=\"Public Key\"\n        required={true}\n        description=\"Your public key from the machine\"\n      />\n      <FormikInput\n        name=\"privateKey\"\n        label=\"Private Key\"\n        required={true}\n        description=\"Your private key from the machine\"\n      />\n    </>\n  );\n};\n\nexport default PkiKeys;\n","import { FormikInput } from 'tapis-ui/_common';\n\nconst Cert: React.FC = () => {\n  return (\n    <>\n      <FormikInput\n        name=\"certificate\"\n        label=\"Certificate\"\n        required={true}\n        description=\"Certificate\"\n      />\n    </>\n  );\n};\n\nexport default Cert;\n","import { FormikInput } from 'tapis-ui/_common';\n\nconst AccessKey: React.FC = () => {\n  return (\n    <>\n      <FormikInput\n        name=\"accessKey\"\n        label=\"Access Key\"\n        required={true}\n        description=\"Access key\"\n      />\n      <FormikInput\n        name=\"accessSecret\"\n        label=\"Access Secret\"\n        required={true}\n        description=\"Access secret\"\n      />\n    </>\n  );\n};\n\nexport default AccessKey;\n","import AddCredentials from './AddCredentials';\n\nexport default AddCredentials;\n","import React from 'react';\nimport { Button } from 'reactstrap';\nimport { useCreateCredentials, useDetails } from 'tapis-hooks/systems';\nimport { useTapisConfig } from 'tapis-hooks/context';\nimport { SubmitWrapper } from 'tapis-ui/_wrappers';\nimport { Formik, Form } from 'formik';\nimport { Systems } from '@tapis/tapis-typescript';\nimport { AuthnEnum } from '@tapis/tapis-typescript-systems';\nimport Password from './AuthenticationMethods/Password';\nimport Token from './AuthenticationMethods/Token';\nimport PkiKeys from './AuthenticationMethods/PkiKeys';\nimport Cert from './AuthenticationMethods/Cert';\nimport AccessKey from './AuthenticationMethods/AccessKey';\nimport * as Yup from 'yup';\n\ntype AddCredentialsProps = {\n  systemId: string;\n};\n\nconst AddCredentials: React.FC<AddCredentialsProps> = ({ systemId }) => {\n  const { data } = useDetails({\n    systemId,\n    select: 'allAttributes',\n  });\n\n  const system: Systems.TapisSystem | undefined = data?.result;\n\n  const isPassword = system?.defaultAuthnMethod === AuthnEnum.Password;\n  const isPkiKeys = system?.defaultAuthnMethod === AuthnEnum.PkiKeys;\n  const isAccessKey = system?.defaultAuthnMethod === AuthnEnum.AccessKey;\n  const isToken = system?.defaultAuthnMethod === AuthnEnum.Token;\n  const isCert = system?.defaultAuthnMethod === AuthnEnum.Cert;\n\n  const { isLoading, isSuccess, error, createCredentials } =\n    useCreateCredentials();\n  const { claims } = useTapisConfig();\n  const currentUsername = claims['tapis/username'];\n\n  const onSubmit = ({\n    username,\n    password,\n    privateKey,\n    publicKey,\n    accessKey,\n    accessSecret,\n    accessToken,\n    refreshToken,\n    certificate,\n  }: {\n    username?: string;\n    password?: string;\n    privateKey?: string;\n    publicKey?: string;\n    accessKey?: string;\n    accessSecret?: string;\n    accessToken?: string;\n    refreshToken?: string;\n    certificate?: string;\n  }) => {\n    createCredentials({\n      systemId,\n      userName: currentUsername,\n      reqUpdateCredential: {\n        loginUser: username,\n        password,\n        privateKey,\n        publicKey,\n        accessKey,\n        accessSecret,\n        accessToken,\n        refreshToken,\n        certificate,\n      },\n    });\n  };\n\n  const loginSchema = Yup.object({\n    // username: Yup.string().required(),\n    // password: Yup.string().required(),\n    // privateKey: Yup.string().required(),\n    // publicKey: Yup.string().required(),\n    // accessKey: Yup.string().required(),\n    // accessSecret: Yup.string().required(),\n    // accessToken: Yup.string().required(),\n    // refreshToken: Yup.string().required(),\n    // certificate: Yup.string().required(),\n  });\n\n  const initialValues = {\n    username: '',\n    password: '',\n    privateKey: '',\n    publicKey: '',\n    accessKey: '',\n    accessSecret: '',\n    accessToken: '',\n    refreshToken: '',\n    certificate: '',\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={loginSchema}\n      onSubmit={onSubmit}\n    >\n      <Form>\n        Credentials are not valid and must be added!\n        {isPassword ? <Password /> : null}\n        {isPkiKeys ? <PkiKeys system={system} /> : null}\n        {isAccessKey ? <AccessKey /> : null}\n        {isToken ? <Token /> : null}\n        {isCert ? <Cert /> : null}\n        <SubmitWrapper\n          isLoading={isLoading}\n          error={error}\n          success={isSuccess ? 'Successfully Added Credentials' : ''}\n        >\n          <Button\n            type=\"submit\"\n            className=\"btn btn-primary\"\n            disabled={isLoading || isSuccess}\n          >\n            Add Credentials\n          </Button>\n        </SubmitWrapper>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default AddCredentials;\n","import React, { useCallback, useState, useMemo } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { useList } from 'tapis-hooks/files';\nimport { Files } from '@tapis/tapis-typescript';\nimport { Icon, InfiniteScrollTable } from 'tapis-ui/_common';\nimport { QueryWrapper } from 'tapis-ui/_wrappers';\nimport { Row, Column, CellProps } from 'react-table';\nimport sizeFormat from 'utils/sizeFormat';\nimport { Button } from 'reactstrap';\nimport { formatDateTimeFromValue } from 'utils/timeFormat';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faCheckSquare,\n  faSquare as filledSquare,\n} from '@fortawesome/free-solid-svg-icons';\nimport { faSquare } from '@fortawesome/free-regular-svg-icons';\nimport styles from './FileListing.module.scss';\nimport AddCredentials from 'tapis-app/Systems/_components/AddCredentials';\n\nexport type OnSelectCallback = (files: Array<Files.FileInfo>) => any;\nexport type OnNavigateCallback = (file: Files.FileInfo) => any;\n\ninterface FileListingDirProps {\n  file: Files.FileInfo;\n  onNavigate?: OnNavigateCallback;\n  location?: string;\n}\n\nconst FileListingDir: React.FC<FileListingDirProps> = ({\n  file,\n  onNavigate = undefined,\n  location = undefined,\n}) => {\n  if (location) {\n    return (\n      <NavLink to={`${location}${file.name ?? ''}/`} className={styles.dir}>\n        {file.name}/\n      </NavLink>\n    );\n  }\n  if (onNavigate) {\n    return (\n      <Button\n        color=\"link\"\n        className={styles.link}\n        onClick={(e) => {\n          e.preventDefault();\n          e.stopPropagation();\n          onNavigate(file);\n        }}\n        data-testid={`btn-link-${file.name}`}\n      >\n        {file.name}/\n      </Button>\n    );\n  }\n  return <span>{file.name}/</span>;\n};\n\ntype FileListingCheckboxCell = {\n  selected: boolean;\n};\n\n/* eslint-disable-next-line */\nexport const FileListingCheckboxCell: React.FC<FileListingCheckboxCell> =\n  React.memo(({ selected }) => {\n    return (\n      <span className=\"fa-layers fa-fw\">\n        <FontAwesomeIcon icon={filledSquare} color=\"white\" />\n        <FontAwesomeIcon\n          icon={selected ? faCheckSquare : faSquare}\n          color=\"#9D85EF\"\n        />\n        <FontAwesomeIcon icon={faSquare} color=\"#707070\" />\n      </span>\n    );\n  });\n\ninterface FileListingItemProps {\n  file: Files.FileInfo;\n  onNavigate?: OnNavigateCallback;\n  location?: string;\n}\n\nconst FileListingName: React.FC<FileListingItemProps> = ({\n  file,\n  onNavigate = undefined,\n  location = undefined,\n}) => {\n  if (file.type === 'file') {\n    return <>{file.name}</>;\n  }\n  return (\n    <FileListingDir file={file} onNavigate={onNavigate} location={location} />\n  );\n};\n\nexport type SelectMode = {\n  mode: 'none' | 'single' | 'multi';\n  // If undefined, allowed selectable file types will be treated as [ \"file\", \"dir\" ]\n  types?: Array<'dir' | 'file'>;\n};\n\ntype FileListingTableProps = {\n  files: Array<Files.FileInfo>;\n  prependColumns?: Array<Column>;\n  appendColumns?: Array<Column>;\n  getRowProps?: (row: Row) => any;\n  onInfiniteScroll?: () => any;\n  isLoading?: boolean;\n  onNavigate?: OnNavigateCallback;\n  location?: string;\n  className?: string;\n  selectMode?: SelectMode;\n  fields?: Array<'size' | 'lastModified'>;\n};\n\nexport const FileListingTable: React.FC<FileListingTableProps> = React.memo(\n  ({\n    files,\n    prependColumns = [],\n    appendColumns = [],\n    getRowProps,\n    onInfiniteScroll,\n    isLoading,\n    onNavigate,\n    location,\n    className,\n    selectMode,\n    fields,\n  }) => {\n    const styleName =\n      selectMode?.mode !== 'none' ? 'file-list-select' : 'file-list';\n\n    const tableColumns: Array<Column> = [\n      ...prependColumns,\n      {\n        Header: '',\n        accessor: 'type',\n        Cell: (el) => <Icon name={el.value === 'file' ? 'file' : 'folder'} />,\n      },\n      {\n        Header: 'Name',\n        Cell: (el) => (\n          <FileListingName\n            file={el.row.original}\n            onNavigate={onNavigate}\n            location={location}\n          />\n        ),\n      },\n    ];\n\n    if (fields?.some((field) => field === 'size')) {\n      tableColumns.push({\n        Header: 'Size',\n        accessor: 'size',\n        Cell: (el) => <span>{sizeFormat(el.value)}</span>,\n      });\n    }\n\n    if (fields?.some((field) => field === 'lastModified')) {\n      tableColumns.push({\n        Header: 'Last Modified',\n        accessor: 'lastModified',\n        Cell: (el) => (\n          <span>{formatDateTimeFromValue(new Date(el.value))}</span>\n        ),\n      });\n    }\n\n    tableColumns.push(...appendColumns);\n\n    return (\n      <InfiniteScrollTable\n        className={`${className} ${styles[styleName]}`}\n        tableColumns={tableColumns}\n        tableData={files}\n        onInfiniteScroll={onInfiniteScroll}\n        isLoading={isLoading}\n        noDataText=\"No files found\"\n        getRowProps={getRowProps}\n      />\n    );\n  }\n);\n\ntype FileSelectHeaderProps = {\n  onSelectAll: () => void;\n  onUnselectAll: () => void;\n  selectedFileDict: SelectFileDictType;\n};\n\ntype SelectFileDictType = { [path: string]: boolean };\n\nconst FileSelectHeader: React.FC<FileSelectHeaderProps> = ({\n  onSelectAll,\n  onUnselectAll,\n  selectedFileDict,\n}) => {\n  const [checked, setChecked] = useState(false);\n  const allSelected = Object.values(selectedFileDict).some(\n    (value) => value === false\n  );\n  const onClick = useCallback(() => {\n    if (checked && !allSelected) {\n      setChecked(false);\n      onUnselectAll();\n    } else {\n      setChecked(true);\n      onSelectAll();\n    }\n  }, [checked, setChecked, onSelectAll, onUnselectAll, allSelected]);\n\n  return (\n    <span\n      className={styles['select-all']}\n      onClick={onClick}\n      data-testid=\"select-all\"\n    >\n      <FileListingCheckboxCell selected={checked && !allSelected} />\n    </span>\n  );\n};\n\ninterface FileListingProps {\n  systemId: string;\n  path: string;\n  onSelect?: OnSelectCallback;\n  onUnselect?: OnSelectCallback;\n  onNavigate?: OnNavigateCallback;\n  location?: string;\n  className?: string;\n  fields?: Array<'size' | 'lastModified'>;\n  selectedFiles?: Array<Files.FileInfo>;\n  selectMode?: SelectMode;\n}\n\nconst FileListing: React.FC<FileListingProps> = ({\n  systemId,\n  path,\n  onSelect = undefined,\n  onUnselect = undefined,\n  onNavigate = undefined,\n  location = undefined,\n  className,\n  fields = ['size', 'lastModified'],\n  selectedFiles = [],\n  selectMode,\n}) => {\n  const {\n    hasNextPage,\n    isLoading,\n    error,\n    fetchNextPage,\n    concatenatedResults,\n    isFetchingNextPage,\n  } = useList({ systemId, path });\n\n  const infiniteScrollCallback = useCallback(() => {\n    if (hasNextPage) {\n      fetchNextPage();\n    }\n  }, [hasNextPage, fetchNextPage]);\n\n  const files: Array<Files.FileInfo> = useMemo(\n    () => concatenatedResults ?? [],\n    [concatenatedResults]\n  );\n\n  const selectedFileDict: SelectFileDictType = React.useMemo(() => {\n    const result: SelectFileDictType = {};\n    const selectedDict: SelectFileDictType = {};\n    selectedFiles.forEach((file) => {\n      selectedDict[file.path ?? ''] = true;\n    });\n    concatenatedResults?.forEach((file) => {\n      result[file.path ?? ''] = selectedDict[file.path ?? ''] ?? false;\n    });\n    return result;\n  }, [selectedFiles, concatenatedResults]);\n\n  const prependColumns = selectMode?.types?.length\n    ? [\n        {\n          Header: (\n            <FileSelectHeader\n              onSelectAll={() =>\n                onSelect && onSelect(concatenatedResults ?? [])\n              }\n              onUnselectAll={() =>\n                onUnselect && onUnselect(concatenatedResults ?? [])\n              }\n              selectedFileDict={selectedFileDict}\n            />\n          ),\n          id: 'multiselect',\n          Cell: (el: React.PropsWithChildren<CellProps<{}, any>>) => (\n            <FileListingCheckboxCell\n              selected={\n                selectedFileDict[(el.row.original as Files.FileInfo).path ?? '']\n              }\n            />\n          ),\n        },\n      ]\n    : [];\n\n  const fileSelectCallback = useCallback(\n    (file: Files.FileInfo) => {\n      if (!selectMode?.types?.some((allowed) => allowed === file.type)) {\n        return;\n      }\n      if (selectedFileDict[file.path ?? ''] && onUnselect) {\n        onUnselect([file]);\n      } else {\n        onSelect && onSelect([file]);\n      }\n    },\n    [selectMode, onUnselect, selectedFileDict, onSelect]\n  );\n\n  // Maps rows to row properties, such as classNames\n  const getRowProps = (row: Row) => {\n    const file: Files.FileInfo = row.original as Files.FileInfo;\n    return {\n      onClick: () => fileSelectCallback(file),\n      'data-testid': file.name,\n      className: selectedFileDict[file.path ?? ''] ? styles.selected : '',\n    };\n  };\n\n  // HERE IS WHERE I HAVE ADDED NEW STUFF!!!!!!!!!!!!!!!!!\n  // HERE IS WHERE I HAVE ADDED NEW STUFF!!!!!!!!!!!!!!!!!\n  // HERE IS WHERE I HAVE ADDED NEW STUFF!!!!!!!!!!!!!!!!!\n  // HERE IS WHERE I HAVE ADDED NEW STUFF!!!!!!!!!!!!!!!!!\n  // HERE IS WHERE I HAVE ADDED NEW STUFF!!!!!!!!!!!!!!!!!\n  // HERE IS WHERE I HAVE ADDED NEW STUFF!!!!!!!!!!!!!!!!!\n  // HERE IS WHERE I HAVE ADDED NEW STUFF!!!!!!!!!!!!!!!!!\n  // HERE IS WHERE I HAVE ADDED NEW STUFF!!!!!!!!!!!!!!!!!\n\n  if (error?.message?.includes('no credentials associated with system')) {\n    return <AddCredentials systemId={systemId} />;\n  }\n\n  return (\n    <QueryWrapper isLoading={isLoading} error={error} className={className}>\n      <FileListingTable\n        files={files}\n        prependColumns={prependColumns}\n        onInfiniteScroll={infiniteScrollCallback}\n        isLoading={isFetchingNextPage}\n        getRowProps={getRowProps}\n        location={location}\n        onNavigate={onNavigate}\n        fields={fields}\n        selectMode={selectMode}\n      />\n    </QueryWrapper>\n  );\n};\n\nexport default FileListing;\n","import FileStat from './FileStat';\nexport default FileStat;\n","import React from 'react';\nimport { QueryWrapper } from 'tapis-ui/_wrappers';\nimport { useStat } from 'tapis-hooks/files';\nimport { DescriptionList } from 'tapis-ui/_common';\n\ntype FileStatProps = {\n  systemId: string;\n  path: string;\n  className?: string;\n};\n\nconst FileStat: React.FC<FileStatProps> = ({\n  systemId,\n  path,\n  className = '',\n}) => {\n  const { data, isLoading, error } = useStat({ systemId, path });\n\n  const stat = data?.result;\n\n  return (\n    <QueryWrapper isLoading={isLoading} error={error} className={className}>\n      <h3>{systemId}</h3>\n      <h5>{path}</h5>\n      {stat && <DescriptionList data={stat} />}\n    </QueryWrapper>\n  );\n};\n\nexport default FileStat;\n","import FileOperation from './FileOperation';\nexport default FileOperation;\n","import React, { useCallback, useEffect } from 'react';\nimport { useNativeOp } from 'tapis-hooks/files';\nimport { Files } from '@tapis/tapis-typescript';\nimport { Button } from 'reactstrap';\nimport { Form, Formik } from 'formik';\nimport {\n  FormikInput,\n  FormikSelect,\n  FormikCheck,\n} from 'tapis-ui/_common/FieldWrapperFormik';\nimport { SubmitWrapper } from 'tapis-ui/_wrappers';\nimport { focusManager } from 'react-query';\nimport * as Yup from 'yup';\n\ntype FileOperationProps = {\n  systemId: string;\n  path: string;\n  className?: string;\n};\n\nconst FileOperation: React.FC<FileOperationProps> = ({\n  systemId,\n  path,\n  className = '',\n}) => {\n  const onSuccess = useCallback(() => {\n    focusManager.setFocused(true);\n  }, []);\n\n  const { nativeOp, isLoading, error, isSuccess, reset } = useNativeOp();\n\n  useEffect(() => {\n    reset();\n  }, [reset]);\n\n  const validationSchema = Yup.object({\n    recursive: Yup.boolean(),\n    operation: Yup.string().required('An operation is required'),\n    argument: Yup.string(),\n  });\n\n  const initialValues = {\n    recursive: false,\n    operation: Files.NativeLinuxOpRequestOperationEnum.Chmod,\n    argument: '',\n  };\n\n  const onSubmit = useCallback(\n    ({\n      recursive,\n      operation,\n      argument,\n    }: {\n      recursive: boolean;\n      operation: Files.NativeLinuxOpRequestOperationEnum;\n      argument: string;\n    }) => {\n      nativeOp(\n        { systemId, path, recursive, operation, argument },\n        { onSuccess }\n      );\n    },\n    [nativeOp, onSuccess, systemId, path]\n  );\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={onSubmit}\n    >\n      <Form className={className}>\n        <FormikSelect\n          name=\"operation\"\n          label=\"Linux Operation\"\n          required={true}\n          description=\"Native operation to execute\"\n          aria-label=\"Operation\"\n        >\n          <option value={Files.NativeLinuxOpRequestOperationEnum.Chmod}>\n            CHMOD\n          </option>\n          <option value={Files.NativeLinuxOpRequestOperationEnum.Chown}>\n            CHOWN\n          </option>\n          <option value={Files.NativeLinuxOpRequestOperationEnum.Chgrp}>\n            CHGRP\n          </option>\n        </FormikSelect>\n        <FormikInput\n          name=\"argument\"\n          label=\"Arguments\"\n          required={false}\n          description=\"Arguments for the native file operation\"\n          aria-label=\"Arguments\"\n        />\n        <FormikCheck\n          name=\"recursive\"\n          label=\"Recursive\"\n          required={false}\n          description=\"Run operation recursively\"\n          aria-label=\"Recursive\"\n        />\n        <SubmitWrapper\n          isLoading={isLoading}\n          error={error}\n          success={isSuccess ? `Successfully submitted operation` : ''}\n        >\n          <Button\n            color=\"primary\"\n            disabled={isLoading || isSuccess}\n            aria-label=\"Submit\"\n            type=\"submit\"\n          >\n            Run Operation\n          </Button>\n        </SubmitWrapper>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default FileOperation;\n","import { Files } from '@tapis/tapis-typescript';\nimport { apiGenerator, errorDecoder } from 'tapis-api/utils';\n\nexport const create = (\n  transferTaskRequest: Files.TransferTaskRequest,\n  basePath: string,\n  jwt: string\n) => {\n  const api: Files.TransfersApi = apiGenerator<Files.TransfersApi>(\n    Files,\n    Files.TransfersApi,\n    basePath,\n    jwt\n  );\n  return errorDecoder<Files.TransferTaskResponse>(() =>\n    api.createTransferTask({ transferTaskRequest })\n  );\n};\n\nexport default create;\n","import { Files } from '@tapis/tapis-typescript';\nimport { apiGenerator, errorDecoder } from 'tapis-api/utils';\n\nexport const list = (\n  params: Files.GetRecentTransferTasksRequest,\n  basePath: string,\n  jwt: string\n) => {\n  const api: Files.TransfersApi = apiGenerator<Files.TransfersApi>(\n    Files,\n    Files.TransfersApi,\n    basePath,\n    jwt\n  );\n  return errorDecoder<Files.TransferTaskListResponse>(() =>\n    api.getRecentTransferTasks(params)\n  );\n};\n\nexport default list;\n","import { Files } from '@tapis/tapis-typescript';\nimport { apiGenerator, errorDecoder } from 'tapis-api/utils';\n\nexport const cancel = (\n  transferTaskId: string,\n  basePath: string,\n  jwt: string\n) => {\n  const api: Files.TransfersApi = apiGenerator<Files.TransfersApi>(\n    Files,\n    Files.TransfersApi,\n    basePath,\n    jwt\n  );\n  return errorDecoder<Files.StringResponse>(() =>\n    api.cancelTransferTask({ transferTaskId })\n  );\n};\n\nexport default cancel;\n","import { Files } from '@tapis/tapis-typescript';\nimport { apiGenerator, errorDecoder } from 'tapis-api/utils';\n\nexport const details = (\n  transferTaskId: string,\n  basePath: string,\n  jwt: string\n) => {\n  const api: Files.TransfersApi = apiGenerator<Files.TransfersApi>(\n    Files,\n    Files.TransfersApi,\n    basePath,\n    jwt\n  );\n  return errorDecoder<Files.TransferTaskResponse>(() =>\n    api.getTransferTaskDetails({ transferTaskId })\n  );\n};\n\nexport default details;\n","const QueryKeys = {\n  create: 'files/transfers/create',\n  detail: 'files/transfers/detail',\n  list: 'files/transfers/list',\n  cancel: 'files/transfers/cancel',\n};\n\nexport default QueryKeys;\n","import { useMutation, MutateOptions } from 'react-query';\nimport { Files } from '@tapis/tapis-typescript';\nimport { create } from 'tapis-api/files/transfers';\nimport { useTapisConfig } from 'tapis-hooks';\nimport QueryKeys from './queryKeys';\n\nconst useCreate = () => {\n  const { basePath, accessToken } = useTapisConfig();\n  const jwt = accessToken?.access_token || '';\n\n  // The useMutation react-query hook is used to call operations that make server-side changes\n  // (Other hooks would be used for data retrieval)\n  //\n  // In this case, move helper is called to perform the operation\n  const {\n    mutate,\n    mutateAsync,\n    isLoading,\n    isError,\n    isSuccess,\n    data,\n    error,\n    reset,\n  } = useMutation<Files.TransferTaskResponse, Error, Files.TransferTaskRequest>(\n    [QueryKeys.create, basePath, jwt],\n    (request) => create(request, basePath, jwt)\n  );\n\n  // Return hook object with loading states and login function\n  return {\n    isLoading,\n    isError,\n    isSuccess,\n    data,\n    error,\n    reset,\n    create: (\n      request: Files.TransferTaskRequest,\n      // react-query options to allow callbacks such as onSuccess\n      options?: MutateOptions<\n        Files.TransferTaskResponse,\n        Error,\n        Files.TransferTaskRequest\n      >\n    ) => {\n      // Call mutate to trigger a single post-like API operation\n      return mutate(request, options);\n    },\n    moveAsync: (\n      request: Files.TransferTaskRequest,\n      options?: MutateOptions<\n        Files.TransferTaskResponse,\n        Error,\n        Files.TransferTaskRequest\n      >\n    ) => mutateAsync(request, options),\n  };\n};\n\nexport default useCreate;\n","import { useQuery } from 'react-query';\nimport { details } from 'tapis-api/files/transfers';\nimport { Files } from '@tapis/tapis-typescript';\nimport { useTapisConfig } from 'tapis-hooks';\nimport QueryKeys from './queryKeys';\n\nconst useDetails = (transferTaskId: string) => {\n  const { accessToken, basePath } = useTapisConfig();\n  const result = useQuery<Files.TransferTaskResponse, Error>(\n    [QueryKeys.detail, transferTaskId, accessToken],\n    // Default to no token. This will generate a 403 when calling the list function\n    // which is expected behavior for not having a token\n    () => details(transferTaskId, basePath, accessToken?.access_token ?? ''),\n    {\n      enabled: !!accessToken,\n    }\n  );\n  return result;\n};\n\nexport default useDetails;\n","import { useInfiniteQuery } from 'react-query';\nimport { list } from 'tapis-api/files/transfers';\nimport { Files } from '@tapis/tapis-typescript';\nimport { useTapisConfig } from 'tapis-hooks';\nimport {\n  concatResults,\n  tapisNextPageParam,\n} from 'tapis-hooks/utils/infiniteQuery';\nimport QueryKeys from './queryKeys';\n\n// Does not use defaultParams because systemId and path are required\nconst useList = (params: Files.GetRecentTransferTasksRequest) => {\n  const { accessToken, basePath } = useTapisConfig();\n\n  // Set default limit to 100, as per TAPIS OpenAPI spec\n  params.limit = params.limit ?? 100;\n\n  const result = useInfiniteQuery<Files.TransferTaskListResponse, Error>(\n    [QueryKeys.list, accessToken],\n    // Default to no token. This will generate a 403 when calling the list function\n    // which is expected behavior for not having a token\n    ({ pageParam = params }) =>\n      list(pageParam, basePath, accessToken?.access_token ?? ''),\n    {\n      // getNextPageParam function computes offset, with guarantee that\n      // params.limit is set to default of 100\n      getNextPageParam: (lastPage, allPages) =>\n        tapisNextPageParam<Files.TransferTaskListResponse>(\n          lastPage,\n          allPages,\n          params\n        ),\n      enabled: !!accessToken,\n    }\n  );\n\n  // If there are result pages, concatenate the results\n  const concatenatedResults = result.data?.pages\n    ? concatResults<Files.TransferTask>(result.data.pages)\n    : null;\n\n  return {\n    ...result,\n    concatenatedResults,\n  };\n};\n\nexport default useList;\n","import { useMutation, MutateOptions } from 'react-query';\nimport { Files } from '@tapis/tapis-typescript';\nimport { cancel } from 'tapis-api/files/transfers';\nimport { useTapisConfig } from 'tapis-hooks';\nimport QueryKeys from './queryKeys';\n\nconst useMove = () => {\n  const { basePath, accessToken } = useTapisConfig();\n  const jwt = accessToken?.access_token || '';\n\n  // The useMutation react-query hook is used to call operations that make server-side changes\n  // (Other hooks would be used for data retrieval)\n  //\n  // In this case, move helper is called to perform the operation\n  const {\n    mutate,\n    mutateAsync,\n    isLoading,\n    isError,\n    isSuccess,\n    data,\n    error,\n    reset,\n  } = useMutation<Files.FileStringResponse, Error, string>(\n    [QueryKeys.cancel, basePath, jwt],\n    (transferTaskId) => cancel(transferTaskId, basePath, jwt)\n  );\n\n  // Return hook object with loading states and login function\n  return {\n    isLoading,\n    isError,\n    isSuccess,\n    data,\n    error,\n    reset,\n    cancel: (\n      transferTaskId: string,\n      // react-query options to allow callbacks such as onSuccess\n      options?: MutateOptions<Files.StringResponse, Error, string>\n    ) => {\n      // Call mutate to trigger a single post-like API operation\n      return mutate(transferTaskId, options);\n    },\n    cancelAsync: (\n      transferTaskId: string,\n      options?: MutateOptions<Files.FileStringResponse, Error, string>\n    ) => mutateAsync(transferTaskId, options),\n  };\n};\n\nexport default useMove;\n","import TransferListing from './TransferListing';\n\nexport default TransferListing;\n","import React, { useState, useCallback } from 'react';\nimport { Files } from '@tapis/tapis-typescript';\nimport { useList } from 'tapis-hooks/files/transfers';\nimport { Column, Row } from 'react-table';\nimport { Icon, InfiniteScrollTable } from 'tapis-ui/_common';\nimport { QueryWrapper } from 'tapis-ui/_wrappers';\nimport styles from './TransferListing.module.scss';\n\ntype TransferListingProps = {\n  onSelect?: (transfer: Files.TransferTask) => void;\n  className?: string;\n};\n\nconst TransferListing: React.FC<TransferListingProps> = ({\n  onSelect,\n  className,\n}) => {\n  const { concatenatedResults, isLoading, error, hasNextPage, fetchNextPage } =\n    useList({});\n\n  const infiniteScrollCallback = useCallback(() => {\n    if (hasNextPage) {\n      fetchNextPage();\n    }\n  }, [hasNextPage, fetchNextPage]);\n\n  const [selectedTransfer, setSelectedTransfer] =\n    useState<Files.TransferTask | null>(null);\n\n  const selectWrapper = useCallback(\n    (transfer: Files.TransferTask) => {\n      if (onSelect) {\n        setSelectedTransfer(transfer);\n        onSelect(transfer);\n      }\n    },\n    [setSelectedTransfer, onSelect]\n  );\n  const systems: Array<Files.TransferTask> = concatenatedResults ?? [];\n\n  const tableColumns: Array<Column> = [\n    {\n      Header: '',\n      id: 'icon',\n      Cell: (el) => <Icon name=\"globe\" />,\n    },\n    {\n      Header: 'Transfer',\n      id: 'name',\n      Cell: (el) => {\n        const transfer: Files.TransferTask = el.row\n          .original as Files.TransferTask;\n        return (\n          <span>\n            {transfer.tag ?? transfer.uuid ?? 'Unidentified transfer'}\n          </span>\n        );\n      },\n    },\n    {\n      Header: 'Status',\n      id: 'status',\n      accessor: 'status',\n      Cell: (el) => <span>{el.value}</span>,\n    },\n  ];\n\n  // Maps rows to row properties, such as classNames\n  const getRowProps = (row: Row) => {\n    const transfer = row.original as Files.TransferTask;\n    return {\n      className: `${\n        selectedTransfer?.id === transfer.id ? styles.selected : ''\n      } ${onSelect ? styles.selectable : ''}`,\n      onClick: () => selectWrapper(transfer),\n      'data-testid': transfer.id,\n    };\n  };\n\n  return (\n    <QueryWrapper isLoading={isLoading} error={error} className={className}>\n      <InfiniteScrollTable\n        className={styles['transfer-list']}\n        tableColumns={tableColumns}\n        tableData={systems}\n        isLoading={isLoading}\n        noDataText=\"No transfers found\"\n        getRowProps={getRowProps}\n        onInfiniteScroll={infiniteScrollCallback}\n      />\n    </QueryWrapper>\n  );\n};\n\nexport default TransferListing;\n","import React from 'react';\nimport { useDetails } from 'tapis-hooks/files/transfers';\nimport { Files } from '@tapis/tapis-typescript';\nimport { DescriptionList } from 'tapis-ui/_common';\nimport { QueryWrapper } from 'tapis-ui/_wrappers';\n\nconst SystemDetail: React.FC<{ transferTaskId: string; className?: string }> =\n  ({ transferTaskId, className = '' }) => {\n    const { data, isLoading, error } = useDetails(transferTaskId);\n    const task: Files.TransferTask | undefined = data?.result;\n    return (\n      <QueryWrapper isLoading={isLoading} error={error} className={className}>\n        <h3>{task?.tag ?? task?.id}</h3>\n        {task && <DescriptionList data={task} />}\n      </QueryWrapper>\n    );\n  };\n\nexport default SystemDetail;\n","import TransferCancel from './TransferCancel';\n\nexport default TransferCancel;\n","import React, { useCallback, useEffect } from 'react';\nimport { useCancel, useDetails } from 'tapis-hooks/files/transfers';\nimport { Files } from '@tapis/tapis-typescript';\nimport { Button } from 'reactstrap';\nimport { SubmitWrapper, QueryWrapper } from 'tapis-ui/_wrappers';\nimport { focusManager } from 'react-query';\n\ntype TransferCancelProps = {\n  transferTaskId: string;\n  className?: string;\n};\n\nconst FileOperation: React.FC<TransferCancelProps> = ({\n  transferTaskId,\n  className = '',\n}) => {\n  const {\n    data,\n    isLoading: detailsIsLoading,\n    error: detailsError,\n  } = useDetails(transferTaskId);\n\n  const transfer: Files.TransferTask | undefined = data?.result;\n  const cancelableStatuses = [\n    Files.TransferTaskStatusEnum.Accepted,\n    Files.TransferTaskStatusEnum.InProgress,\n    Files.TransferTaskStatusEnum.Paused,\n    Files.TransferTaskStatusEnum.Staged,\n    Files.TransferTaskStatusEnum.Staging,\n  ];\n  const cancelable = cancelableStatuses.some(\n    (status) => status === transfer?.status\n  );\n\n  const { cancel, isLoading, error, isSuccess, reset } = useCancel();\n\n  const onClick = useCallback(() => {\n    cancel(transferTaskId);\n    focusManager.setFocused(true);\n  }, [cancel, transferTaskId]);\n\n  useEffect(() => {\n    reset();\n  }, [reset]);\n\n  return (\n    <QueryWrapper\n      isLoading={detailsIsLoading}\n      error={detailsError}\n      className={className}\n    >\n      <div>\n        Transfer task {transferTaskId} is {transfer?.status}\n      </div>\n      <SubmitWrapper\n        isLoading={isLoading}\n        error={error}\n        success={isSuccess ? `Successfully canceled transfer` : ''}\n        reverse\n      >\n        <Button\n          color=\"warning\"\n          disabled={!cancelable || isLoading || isSuccess}\n          aria-label=\"Cancel\"\n          type=\"submit\"\n          onClick={onClick}\n        >\n          Cancel Transfer\n        </Button>\n      </SubmitWrapper>\n    </QueryWrapper>\n  );\n};\n\nexport default FileOperation;\n","import TransferCreate from './TransferCreate';\n\nexport default TransferCreate;\n","import React, { useCallback, useEffect } from 'react';\nimport { useCreate } from 'tapis-hooks/files/transfers';\nimport { Files } from '@tapis/tapis-typescript';\nimport { Button } from 'reactstrap';\nimport { SubmitWrapper } from 'tapis-ui/_wrappers';\nimport { focusManager } from 'react-query';\nimport { Form, Formik } from 'formik';\nimport { FormikInput } from 'tapis-ui/_common';\nimport * as Yup from 'yup';\n\ntype TransferCreateProps = {\n  files: Array<Files.FileInfo>;\n  sourceSystemId: string;\n  destinationSystemId: string;\n  destinationPath: string;\n  className?: string;\n};\n\nconst TransferCreate: React.FC<TransferCreateProps> = ({\n  files,\n  sourceSystemId,\n  destinationSystemId,\n  destinationPath,\n  className = '',\n}) => {\n  const { create, data, isLoading, error, isSuccess, reset } = useCreate();\n\n  const onSubmit = useCallback(\n    ({ tag }: { tag: string }) => {\n      const destinationURI = `tapis://${destinationSystemId}${destinationPath}`;\n      const elements: Array<Files.TransferTaskRequestElement> = files.map(\n        (file) => ({\n          destinationURI,\n          sourceURI: `tapis://${sourceSystemId}${file.path}`,\n        })\n      );\n      const tagName = tag.length > 0 ? tag : undefined;\n      create(\n        { elements, tag: tagName },\n        { onSuccess: () => focusManager.setFocused(true) }\n      );\n    },\n    [sourceSystemId, destinationSystemId, destinationPath, files, create]\n  );\n\n  useEffect(() => {\n    reset();\n  }, [reset]);\n\n  const validationSchema = Yup.object({\n    tag: Yup.string().required('a tag for this transfer is required'),\n  });\n\n  const initialValues = {\n    tag: '',\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={onSubmit}\n    >\n      <Form>\n        <FormikInput\n          name=\"tag\"\n          label=\"Tag\"\n          required={false}\n          description=\"A tag name for this file transfer\"\n        />\n        <SubmitWrapper\n          isLoading={isLoading}\n          error={error}\n          success={\n            isSuccess\n              ? `Successfully submitted transfer ${\n                  data?.result?.tag ?? data?.result?.uuid ?? ''\n                }`\n              : ''\n          }\n          reverse\n        >\n          <Button\n            color=\"primary\"\n            disabled={isLoading || isSuccess}\n            aria-label=\"Submit\"\n            type=\"submit\"\n          >\n            Submit\n          </Button>\n        </SubmitWrapper>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default TransferCreate;\n","import { BreadcrumbType } from 'tapis-ui/_common/Breadcrumbs/Breadcrumbs';\nimport { normalize } from 'path';\n\nconst breadcrumbsFromPathname = (pathname: string) => {\n  const items: Array<BreadcrumbType> = [];\n  const pathParts = pathname.split('/');\n  pathParts.forEach((_, index) => {\n    let to = normalize('/' + pathParts.slice(0, index + 1).join('/') + '/');\n    if (pathParts[index].length) {\n      items.push({ to, text: pathParts[index] });\n    }\n  });\n  return items;\n};\n\nexport default breadcrumbsFromPathname;\n","import React from 'react';\nimport { useDetails } from 'tapis-hooks/systems';\nimport { Systems } from '@tapis/tapis-typescript';\nimport { DescriptionList, Tabs, JSONDisplay } from 'tapis-ui/_common';\nimport { QueryWrapper } from 'tapis-ui/_wrappers';\n\nconst SystemDetail: React.FC<{ systemId: string }> = ({ systemId }) => {\n  const { data, isLoading, error } = useDetails({\n    systemId,\n    select: 'allAttributes',\n  });\n  const system: Systems.TapisSystem | undefined = data?.result;\n  return (\n    <QueryWrapper isLoading={isLoading} error={error}>\n      <h3>{system?.id}</h3>\n      {system && (\n        <Tabs\n          tabs={{\n            Details: <DescriptionList data={system} />,\n            JSON: <JSONDisplay json={system} />,\n          }}\n        />\n      )}\n    </QueryWrapper>\n  );\n};\n\nexport default SystemDetail;\n","import React, { useState, useCallback } from 'react';\nimport { Systems } from '@tapis/tapis-typescript';\nimport { useList } from 'tapis-hooks/systems';\nimport { Column, Row } from 'react-table';\nimport { Icon, InfiniteScrollTable } from 'tapis-ui/_common';\nimport { QueryWrapper } from 'tapis-ui/_wrappers';\nimport { Button } from 'reactstrap';\nimport styles from './SystemListing.module.scss';\n\ntype SystemListItemProps = {\n  system: Systems.TapisSystem;\n  onNavigate?: (system: Systems.TapisSystem) => void;\n};\n\nconst SystemListingItem: React.FC<SystemListItemProps> = ({\n  system,\n  onNavigate,\n}) => {\n  if (onNavigate) {\n    return (\n      <Button\n        color=\"link\"\n        className={styles.link}\n        onClick={(e) => {\n          e.preventDefault();\n          onNavigate(system);\n        }}\n        data-testid={`href-${system.id}`}\n      >\n        {system.id}\n      </Button>\n    );\n  }\n  return <span>{system.id}</span>;\n};\n\ntype SystemListingProps = {\n  onSelect?: (system: Systems.TapisSystem) => void;\n  onNavigate?: (system: Systems.TapisSystem) => void;\n  className?: string;\n};\n\nconst SystemListing: React.FC<SystemListingProps> = ({\n  onSelect,\n  onNavigate,\n  className,\n}) => {\n  const { data, isLoading, error } = useList();\n  const [selectedSystem, setSelectedSystem] =\n    useState<Systems.TapisSystem | null>(null);\n  const selectWrapper = useCallback(\n    (system: Systems.TapisSystem) => {\n      if (onSelect) {\n        setSelectedSystem(system);\n        onSelect(system);\n      }\n    },\n    [setSelectedSystem, onSelect]\n  );\n  const systems: Array<Systems.TapisSystem> = data?.result ?? [];\n\n  const tableColumns: Array<Column> = [\n    {\n      Header: '',\n      id: 'icon',\n      Cell: (el) => <Icon name=\"data-files\" />,\n    },\n    {\n      Header: 'System',\n      id: 'name',\n      Cell: (el) => (\n        <SystemListingItem\n          system={el.row.original as Systems.TapisSystem}\n          onNavigate={onNavigate}\n        />\n      ),\n    },\n  ];\n\n  // Maps rows to row properties, such as classNames\n  const getRowProps = (row: Row) => {\n    const system = row.original as Systems.TapisSystem;\n    return {\n      className: selectedSystem?.id === system.id ? styles.selected : '',\n      onClick: () => selectWrapper(system),\n      'data-testid': system.id,\n    };\n  };\n\n  return (\n    <QueryWrapper isLoading={isLoading} error={error} className={className}>\n      <InfiniteScrollTable\n        className={styles['system-list']}\n        tableColumns={tableColumns}\n        tableData={systems}\n        isLoading={isLoading}\n        noDataText=\"No systems found\"\n        getRowProps={getRowProps}\n      />\n    </QueryWrapper>\n  );\n};\n\nexport default SystemListing;\n","import SystemListing from './SystemListing';\n\nexport default SystemListing;\n","import { useCallback, useState, useEffect } from 'react';\nimport { Breadcrumbs } from 'tapis-ui/_common';\nimport { Systems } from '@tapis/tapis-typescript';\nimport { BreadcrumbType } from 'tapis-ui/_common/Breadcrumbs/Breadcrumbs';\nimport breadcrumbsFromPathname from 'tapis-ui/_common/Breadcrumbs/breadcrumbsFromPathname';\nimport FileListing from 'tapis-ui/components/files/FileListing';\nimport {\n  OnNavigateCallback,\n  OnSelectCallback,\n  SelectMode,\n} from 'tapis-ui/components/files/FileListing/FileListing';\nimport { SystemListing } from 'tapis-ui/components/systems';\nimport { normalize } from 'path';\nimport styles from './FileExplorer.module.scss';\nimport { Files } from '@tapis/tapis-typescript';\n\ntype FileExplorerProps = {\n  systemId?: string;\n  path?: string;\n  className?: string;\n  allowSystemChange?: boolean;\n  onNavigate?: (systemId: string | null, path: string | null) => void;\n  onSelect?: OnSelectCallback;\n  onUnselect?: OnSelectCallback;\n  fields?: Array<'size' | 'lastModified'>;\n  selectedFiles?: Array<Files.FileInfo>;\n  selectMode?: SelectMode;\n};\n\nconst FileExplorer: React.FC<FileExplorerProps> = ({\n  systemId,\n  path,\n  className,\n  allowSystemChange,\n  onNavigate,\n  onSelect,\n  onUnselect,\n  fields = ['size'],\n  selectedFiles,\n  selectMode,\n}) => {\n  const [currentSystem, setCurrentSystem] = useState(systemId);\n  const [currentPath, setCurrentPath] = useState(path);\n  const [targetBreadcrumbs, setTargetBreadcrumbs] = useState<\n    Array<BreadcrumbType>\n  >([]);\n\n  const onFileNavigate = useCallback<OnNavigateCallback>(\n    (file) => {\n      const newPath = normalize(`${currentPath}/${file.name!}`);\n      setCurrentPath(newPath);\n      onNavigate && onNavigate(currentSystem ?? null, newPath);\n    },\n    [setCurrentPath, currentPath, onNavigate, currentSystem]\n  );\n\n  const onSystemNavigate = useCallback(\n    (system: Systems.TapisSystem | null) => {\n      if (!system) {\n        onNavigate && onNavigate(null, null);\n      }\n      setCurrentSystem(system?.id);\n      setCurrentPath('/');\n      onNavigate && onNavigate(system?.id ?? null, '/');\n    },\n    [setCurrentPath, setCurrentSystem, onNavigate]\n  );\n\n  const onBreadcrumbNavigate = useCallback(\n    (to: string) => {\n      setCurrentPath(to);\n      onNavigate && onNavigate(currentSystem ?? null, to);\n    },\n    [setCurrentPath, currentSystem, onNavigate]\n  );\n\n  useEffect(() => {\n    const breadcrumbs: Array<BreadcrumbType> = breadcrumbsFromPathname(\n      currentPath ?? ''\n    );\n    const newCrumbs: Array<BreadcrumbType> = breadcrumbs.map((breadcrumb) => ({\n      ...breadcrumb,\n      onClick: onBreadcrumbNavigate,\n    }));\n    newCrumbs.unshift({\n      text: currentSystem ?? '',\n      to: '/',\n      onClick: onBreadcrumbNavigate,\n    });\n    setTargetBreadcrumbs(newCrumbs);\n  }, [\n    setTargetBreadcrumbs,\n    currentPath,\n    setCurrentPath,\n    currentSystem,\n    onBreadcrumbNavigate,\n  ]);\n\n  const breadcrumbs: Array<BreadcrumbType> = [];\n  if (allowSystemChange) {\n    breadcrumbs.push({\n      text: 'Files',\n      to: '/',\n      onClick: () => onSystemNavigate(null),\n    });\n  }\n\n  if (currentSystem) {\n    breadcrumbs.push(...targetBreadcrumbs);\n  }\n\n  return (\n    <div className={className}>\n      <Breadcrumbs breadcrumbs={breadcrumbs} />\n      <div>\n        {currentSystem ? (\n          <FileListing\n            className={`${styles['nav-list']}`}\n            systemId={currentSystem}\n            path={currentPath ?? '/'}\n            onNavigate={onFileNavigate}\n            onSelect={onSelect}\n            onUnselect={onUnselect}\n            selectedFiles={selectedFiles}\n            fields={fields}\n            selectMode={selectMode}\n          />\n        ) : (\n          <SystemListing\n            className={`${styles['nav-list']}`}\n            onNavigate={onSystemNavigate}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default FileExplorer;\n","import FileExplorer from './FileExplorer';\n\nexport default FileExplorer;\n","import FileSelectModal from './FileSelectModal';\n\nexport default FileSelectModal;\n","import { useCallback, useState, useMemo } from 'react';\nimport { Files } from '@tapis/tapis-typescript';\nimport { GenericModal } from 'tapis-ui/_common';\nimport { FileExplorer } from 'tapis-ui/components/files';\nimport { SelectMode } from 'tapis-ui/components/files/FileListing/FileListing';\nimport { Button } from 'reactstrap';\n\ntype FileSelectModalProps = {\n  systemId?: string;\n  path?: string;\n  allowSystemChange?: boolean;\n  onSelect?: (systemId: string | null, files: Array<Files.FileInfo>) => void;\n  selectMode?: SelectMode;\n  toggle: () => void;\n  initialSelection?: Array<Files.FileInfo>;\n};\n\nconst FileSelectModal: React.FC<FileSelectModalProps> = ({\n  systemId,\n  path,\n  allowSystemChange,\n  onSelect,\n  toggle,\n  selectMode = { mode: 'single', types: ['file', 'dir'] },\n  initialSelection,\n}) => {\n  const [selectedFiles, setSelectedFiles] = useState<Array<Files.FileInfo>>(\n    initialSelection ?? []\n  );\n  const [selectedSystem, setSelectedSystem] = useState<string | null>(\n    systemId ?? null\n  );\n  const [currentPath, setCurrentPath] = useState<string>(path ?? '/');\n\n  // Is the FileSelectModal set up to allow single directory selection?\n  const dirSelectMode = useMemo(() => {\n    return (\n      selectMode?.mode === 'single' &&\n      selectMode?.types?.length === 1 &&\n      selectMode?.types?.some((mode) => mode === 'dir')\n    );\n  }, [selectMode]);\n\n  const fileExplorerSelectCallback = useCallback(\n    (files: Array<Files.FileInfo>) => {\n      if (selectMode?.mode === 'multi') {\n        setSelectedFiles([...selectedFiles, ...files]);\n      } else {\n        setSelectedFiles(files);\n      }\n    },\n    [setSelectedFiles, selectedFiles, selectMode]\n  );\n\n  const fileExplorerUnselectCallback = useCallback(\n    (files: Array<Files.FileInfo>) => {\n      if (selectMode?.mode === 'multi') {\n        setSelectedFiles(\n          selectedFiles.filter(\n            (selected) =>\n              !files.some((unselected) => unselected.path === selected.path)\n          )\n        );\n      } else {\n        setSelectedFiles([]);\n      }\n    },\n    [setSelectedFiles, selectedFiles, selectMode]\n  );\n\n  const fileExplorerNavigateCallback = useCallback(\n    (systemId: string | null, path: string | null) => {\n      setSelectedSystem(systemId);\n      setSelectedFiles([]);\n      setCurrentPath(path ?? '/');\n    },\n    [setSelectedSystem, setSelectedFiles, setCurrentPath]\n  );\n\n  const selectButtonCallback = useCallback(() => {\n    if (toggle) {\n      toggle();\n    }\n    if (onSelect) {\n      if (!!selectedFiles.length) {\n        onSelect(selectedSystem, selectedFiles);\n      } else if (dirSelectMode) {\n        onSelect(selectedSystem, [\n          { name: currentPath.split('/').slice(-1)[0], path: currentPath },\n        ]);\n      }\n    }\n  }, [\n    toggle,\n    onSelect,\n    selectedSystem,\n    selectedFiles,\n    currentPath,\n    dirSelectMode,\n  ]);\n\n  const body = (\n    <FileExplorer\n      allowSystemChange={allowSystemChange}\n      systemId={systemId}\n      path={currentPath}\n      selectMode={selectMode}\n      onSelect={fileExplorerSelectCallback}\n      onUnselect={fileExplorerUnselectCallback}\n      onNavigate={fileExplorerNavigateCallback}\n      fields={['size', 'lastModified']}\n      selectedFiles={selectedFiles}\n    />\n  );\n\n  const footer = (\n    <Button\n      disabled={selectedFiles.length === 0 && !dirSelectMode}\n      color=\"primary\"\n      onClick={selectButtonCallback}\n      data-testid=\"modalSelect\"\n    >\n      Select{' '}\n      {`${\n        selectMode?.mode === 'multi'\n          ? `(${selectedFiles.length})`\n          : dirSelectMode\n          ? `${!!selectedFiles.length ? selectedFiles[0].name : currentPath}`\n          : `${!!selectedFiles.length ? selectedFiles[0].name : ''}`\n      }`}\n    </Button>\n  );\n\n  let title = 'Select files';\n  const selectionNames =\n    selectMode?.types?.map((selectType) => {\n      if (selectMode.mode === 'single') {\n        if (selectType === 'dir') {\n          return 'directory';\n        }\n        return 'file';\n      }\n      if (selectMode.mode === 'multi') {\n        if (selectType === 'dir') {\n          return 'directories';\n        }\n        return 'files';\n      }\n      return 'files';\n    }) ?? [];\n  if (!!selectionNames.length) {\n    title = `Select ${selectMode?.mode === 'multi' ? 'one or more' : 'a'} ${\n      selectionNames[0]\n    } ${selectionNames.length > 1 ? ` or ${selectionNames[1]}` : ''}`;\n  }\n\n  return (\n    <GenericModal\n      toggle={toggle}\n      title={title}\n      size=\"lg\"\n      body={body}\n      footer={footer}\n    />\n  );\n};\n\nexport default FileSelectModal;\n","import React, { useCallback, useMemo } from 'react';\nimport FieldWrapper from '../FieldWrapperFormik';\nimport { Input, InputGroup, InputGroupAddon, Button } from 'reactstrap';\nimport { FieldInputProps, useField } from 'formik';\nimport { FormikInputProps } from '.';\nimport { Files } from '@tapis/tapis-typescript';\nimport { FileSelectModal } from 'tapis-ui/components/files';\nimport { InputProps } from 'reactstrap';\nimport { useModal } from 'tapis-ui/_common/GenericModal';\nimport { SelectMode } from 'tapis-ui/components/files/FileListing/FileListing';\n\nconst pathToFile = (path?: string): Files.FileInfo | undefined => {\n  if (path) {\n    return {\n      name: path.split('/').slice(-1)[0],\n      path,\n    };\n  }\n  return undefined;\n};\n\nconst pathParent = (path?: string): string => {\n  const parentDir = path?.split('/').slice(0, -1).join('/');\n  return !!parentDir && !!parentDir.length ? parentDir : '/';\n};\n\nexport const parseTapisURI = (\n  uri?: string\n): { systemId: string; file: Files.FileInfo; parent: string } | undefined => {\n  const regex = /tapis:\\/\\/([\\w.\\-_]+)\\/(.+)/;\n  const match = uri?.match(regex);\n  if (match) {\n    const systemId = match[1];\n    const filePath = `/${match[2]}`;\n    return {\n      systemId,\n      file: pathToFile(filePath)!,\n      parent: pathParent(filePath),\n    };\n  }\n  return undefined;\n};\n\ntype FormikTapisFileInputProps = {\n  append?: React.ReactNode;\n  allowSystemChange?: boolean;\n  systemId?: string;\n  path?: string;\n  mode?: 'single' | 'none' | 'multi';\n  files?: boolean;\n  dirs?: boolean;\n} & InputProps &\n  FieldInputProps<any>;\n\nexport const FormikTapisFileInput: React.FC<FormikTapisFileInputProps> = ({\n  append,\n  allowSystemChange = true,\n  disabled,\n  systemId,\n  path,\n  mode = 'single',\n  files = true,\n  dirs = true,\n  ...props\n}) => {\n  const { name } = props;\n  const [field, , helpers] = useField(name);\n  const { setValue } = helpers;\n  const { value } = field;\n  const { modal, open, close } = useModal();\n  const onSelect = useCallback(\n    (systemId: string | null, files: Array<Files.FileInfo>) => {\n      if (allowSystemChange) {\n        setValue(`tapis://${systemId ?? ''}${files[0].path}`);\n      } else {\n        setValue(`${files[0].path}`);\n      }\n    },\n    [setValue, allowSystemChange]\n  );\n  const {\n    systemId: parsedSystemId,\n    file,\n    parent,\n  } = useMemo(() => {\n    const result = parseTapisURI(value) ?? {\n      systemId: systemId,\n      file: value ? pathToFile(value) : pathToFile(path),\n      parent: value ? pathParent(value) : pathParent(path),\n    };\n    return result;\n  }, [value, systemId, path]);\n  const selectMode = useMemo((): SelectMode => {\n    const types = [] as Array<'file' | 'dir'>;\n    if (files) {\n      types.push('file');\n    }\n    if (dirs) {\n      types.push('dir');\n    }\n    return {\n      mode,\n      types,\n    };\n  }, [mode, files, dirs]);\n\n  return (\n    <>\n      <InputGroup>\n        <InputGroupAddon addonType=\"prepend\">\n          <Button size=\"sm\" onClick={open} disabled={disabled}>\n            Browse\n          </Button>\n        </InputGroupAddon>\n        <Input disabled={disabled} {...props} bsSize=\"sm\" />\n        {!!append && (\n          <InputGroupAddon addonType=\"append\">{append}</InputGroupAddon>\n        )}\n      </InputGroup>\n      {modal && (\n        <FileSelectModal\n          toggle={close}\n          onSelect={onSelect}\n          systemId={parsedSystemId ?? systemId}\n          selectMode={selectMode}\n          path={parent}\n          initialSelection={file ? [file] : undefined}\n          allowSystemChange\n        />\n      )}\n    </>\n  );\n};\n\ntype FormikTapisFileProps = {\n  allowSystemChange?: boolean;\n  systemId?: string;\n  path?: string;\n  mode?: 'single' | 'none' | 'multi';\n  files?: boolean;\n  dirs?: boolean;\n} & FormikInputProps;\n\nconst FormikTapisFile: React.FC<FormikTapisFileProps> = ({\n  name,\n  label,\n  required,\n  description,\n  systemId,\n  path,\n  mode,\n  files,\n  dirs,\n  ...props\n}: FormikInputProps) => {\n  return (\n    <FieldWrapper\n      name={name}\n      label={label}\n      required={required}\n      description={description}\n      as={(formikProps: FieldInputProps<any>) => (\n        <FormikTapisFileInput\n          {...props}\n          {...formikProps}\n          bsSize=\"sm\"\n          systemId={systemId}\n          path={path}\n          mode={mode}\n          files={files}\n          dirs={dirs}\n        />\n      )}\n    />\n  );\n};\n\nexport default React.memo(FormikTapisFile);\n","import { default as FieldWrapper } from './FieldWrapper';\nexport type { FieldWrapperProps } from './FieldWrapper';\n\nexport default FieldWrapper;\n","import React from 'react';\nimport { FormGroup, Label, FormText, Badge } from 'reactstrap';\nimport './FieldWrapper.scss';\n\nexport type FieldWrapperProps = {\n  label: string;\n  required: boolean;\n  description: string;\n  error?: string;\n  children?: React.ReactNode;\n};\nconst FieldWrapper: React.FC<FieldWrapperProps> = ({\n  label,\n  required,\n  description,\n  children,\n  error,\n}) => (\n  <FormGroup>\n    <Label\n      className=\"form-field__label\"\n      size=\"sm\"\n      style={{ display: 'flex', alignItems: 'center' }}\n    >\n      {label}{' '}\n      {required ? (\n        <Badge color=\"danger\" style={{ marginLeft: '10px' }}>\n          Required\n        </Badge>\n      ) : null}\n    </Label>\n    {children}\n    {error ? (\n      <div className=\"form-field__validation-error\">{error}</div>\n    ) : (\n      description && (\n        <FormText className=\"form-field__help\" color=\"muted\">\n          {description}\n        </FormText>\n      )\n    )}\n  </FormGroup>\n);\n\nexport default FieldWrapper;\n","import React from 'react';\nimport styles from './PageLayout.module.scss';\n\ninterface LayoutProps {\n  left?: React.ReactNode;\n  right?: React.ReactNode;\n  top?: React.ReactNode;\n  bottom?: React.ReactNode;\n  constrain?: boolean;\n}\nconst Layout: React.FC<LayoutProps> = ({\n  left,\n  right,\n  top,\n  bottom,\n  constrain,\n}) => (\n  <div\n    className={`${styles['layout-root']} ${constrain ? styles.constrain : ''}`}\n  >\n    {top}\n    <div\n      className={`${styles['layout-row']} ${constrain ? styles.constrain : ''}`}\n    >\n      {left}\n      {right}\n    </div>\n    {bottom}\n  </div>\n);\n\nexport default Layout;\n","import React from 'react';\nimport { SectionHeader as CommonSectionHeader } from 'tapis-ui/_common';\nimport styles from './LayoutSections.module.scss';\n\nexport const LayoutHeader: React.FC<\n  React.PropsWithChildren<{ type?: string }>\n> = ({ children, type }) => {\n  return (\n    <div className={type && styles[type]}>\n      <CommonSectionHeader>{children}</CommonSectionHeader>\n    </div>\n  );\n};\n\nexport const LayoutNavWrapper: React.FC<React.PropsWithChildren<{}>> = ({\n  children,\n}) => {\n  return <div className={styles.nav}>{children}</div>;\n};\n\nexport const LayoutBody: React.FC<\n  React.PropsWithChildren<{ constrain?: boolean }>\n> = ({ children, constrain }) => {\n  return (\n    <div className={`${styles.body} ${constrain ? styles.constrain : ''}`}>\n      <div className={styles.detail}>{children}</div>\n    </div>\n  );\n};\n","import React, { useState, useCallback } from 'react';\nimport { Button, Badge } from 'reactstrap';\nimport { Collapse as BootstrapCollapse } from 'reactstrap';\nimport { Icon } from 'tapis-ui/_common';\nimport styles from './Collapse.module.scss';\n\ntype CollapseProperties = React.PropsWithChildren<{\n  title: string;\n  note?: string;\n  open?: boolean;\n  requiredText?: string;\n  isCollapsable?: boolean;\n  className?: string;\n}>;\n\nconst Collapse: React.FC<CollapseProperties> = ({\n  title,\n  note,\n  open,\n  requiredText,\n  className,\n  children,\n  isCollapsable = true,\n}) => {\n  const [isOpen, setIsOpen] = useState<boolean>(open ?? false);\n  const toggle = useCallback(() => {\n    setIsOpen(!isOpen);\n  }, [isOpen, setIsOpen]);\n\n  return (\n    <div className={className}>\n      <div className={styles.header}>\n        <div className={styles.title}>\n          {title}\n          {requiredText && (\n            <Badge\n              color=\"danger\"\n              style={{ marginLeft: '10px', marginBottom: '10px' }}\n            >\n              {requiredText}\n            </Badge>\n          )}\n        </div>\n        <div className={styles.controls}>\n          <div>{note ?? ''}</div>\n          {isCollapsable && (\n            <Button\n              color=\"link\"\n              className={styles.expand}\n              size=\"sm\"\n              onClick={toggle}\n            >\n              <Icon name={isOpen ? 'collapse' : 'expand'} />\n            </Button>\n          )}\n        </div>\n      </div>\n      <BootstrapCollapse isOpen={isOpen || !isCollapsable}>\n        {children}\n      </BootstrapCollapse>\n    </div>\n  );\n};\n\nexport default Collapse;\n","import { useMemo, useState, useCallback } from 'react';\nimport { Input, FormGroup, Label } from 'reactstrap';\nimport { CopyButton } from 'tapis-ui/_common';\nimport styles from './JSONDisplay.module.scss';\n\nconst simplifyObject = (obj: any) => {\n  const result = JSON.parse(JSON.stringify(obj));\n  Object.entries(result).forEach(([key, value]) => {\n    if (Array.isArray(value)) {\n      if ((value as Array<any>).length === 0) {\n        delete result[key];\n      }\n      return;\n    }\n    if (typeof value === 'object') {\n      const simplifiedValue = simplifyObject(value);\n      if (Object.entries(simplifiedValue).length === 0) {\n        delete result[key];\n      } else {\n        result[key] = simplifiedValue;\n      }\n      return;\n    }\n    if (value === undefined) {\n      delete result[key];\n    }\n  });\n  return result;\n};\n\nconst convertSets = (obj: any): any => {\n  if (obj === undefined) {\n    return undefined;\n  }\n  if (Array.isArray(obj)) {\n    return (obj as Array<any>).map((value) => convertSets(value));\n  }\n  if (obj instanceof Set) {\n    return Array.from(obj).map((value) => convertSets(value));\n  }\n  if (typeof obj === 'object') {\n    const result: any = {};\n    Object.entries(obj).forEach(([key, value]) => {\n      result[key] = convertSets(value);\n    });\n    return result;\n  }\n  return JSON.parse(JSON.stringify(obj));\n};\n\ntype JSONDisplayProps = {\n  json: any;\n  className?: string;\n};\n\nconst JSONDisplay: React.FC<JSONDisplayProps> = ({ json, className }) => {\n  const [simplified, setSimplified] = useState(false);\n  const onChange = useCallback(() => {\n    setSimplified(!simplified);\n  }, [setSimplified, simplified]);\n  const jsonString = useMemo(\n    () =>\n      JSON.stringify(\n        simplified ? simplifyObject(convertSets(json)) : convertSets(json),\n        null,\n        2\n      ),\n    [json, simplified]\n  );\n  return (\n    <div className={className}>\n      <div className={styles.controls}>\n        <FormGroup check>\n          <Label check size=\"sm\" className={`form-field__label`}>\n            <Input type=\"checkbox\" onChange={onChange} />\n            Simplified\n          </Label>\n        </FormGroup>\n        <CopyButton value={jsonString} />\n      </div>\n      <Input\n        type=\"textarea\"\n        value={jsonString}\n        className={styles.json}\n        rows=\"20\"\n        disabled={true}\n      />\n    </div>\n  );\n};\n\nexport default JSONDisplay;\n","import JSONDisplay from './JSONDisplay';\n\nexport default JSONDisplay;\n","import Tabs from './Tabs';\n\nexport default Tabs;\n","import React, { useState } from 'react';\nimport { TabContent, TabPane, Nav, NavItem, NavLink } from 'reactstrap';\nimport styles from './Tabs.module.scss';\n\ntype TabsProps = {\n  tabs: { [name: string]: React.ReactNode };\n  className?: string;\n};\n\nconst Tabs: React.FC<TabsProps> = ({ tabs, className = '' }) => {\n  const tabNames = Object.keys(tabs);\n  const [activeTab, setActiveTab] = useState(tabNames[0] ?? '');\n\n  const getTabClassname = (tabName: string) => {\n    return `${styles.tab} ${activeTab === tabName ? styles.active : ''}`;\n  };\n\n  return (\n    <div className={className}>\n      <Nav tabs>\n        {tabNames.map((tabName) => (\n          <NavItem className={getTabClassname(tabName)} key={`tab-${tabName}`}>\n            <NavLink\n              onClick={() => setActiveTab(tabName)}\n              data-testid={`tab-${tabName}`}\n            >\n              {tabName}\n            </NavLink>\n          </NavItem>\n        ))}\n      </Nav>\n      <TabContent activeTab={activeTab}>\n        {tabNames.map((tabName) => (\n          <TabPane\n            tabId={tabName}\n            key={`tabcontent-${tabName}`}\n            className={styles.pane}\n          >\n            {tabs[tabName]}\n          </TabPane>\n        ))}\n      </TabContent>\n    </div>\n  );\n};\n\nexport default Tabs;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Icon } from 'tapis-ui/_common';\nimport styles from './Navbar.module.scss';\n\nexport const NavItem: React.FC<{ to: string; icon?: string }> = ({\n  to,\n  icon,\n  children,\n}) => (\n  <NavLink\n    to={to}\n    className={styles['nav-link']}\n    activeClassName={styles['active']}\n    exact={to === '/'}\n  >\n    <div className={styles['nav-content']}>\n      {icon && <Icon name={icon} />}\n      {/* we'll want to set name based on the app */}\n      <span className={styles['nav-text']}>{children}</span>\n    </div>\n  </NavLink>\n);\n\nconst Navbar: React.FC = ({ children }) => {\n  return <div className={`${styles['nav-list']}`}>{children}</div>;\n};\n\nexport default Navbar;\n","import React from 'react';\nimport { useTapisConfig } from 'tapis-hooks';\nimport styles from './Sidebar.module.scss';\nimport { Navbar, NavItem } from 'tapis-ui/_wrappers/Navbar';\n\nconst Sidebar: React.FC = () => {\n  const { accessToken } = useTapisConfig();\n  return (\n    <div className={styles.root}>\n      <Navbar>\n        <NavItem to=\"/\" icon=\"dashboard\">\n          Dashboard\n        </NavItem>\n        {!accessToken && (\n          <NavItem to=\"/login\" icon=\"user\">\n            Login\n          </NavItem>\n        )}\n        {accessToken && (\n          <>\n            <NavItem to=\"/systems\" icon=\"data-files\">\n              Systems\n            </NavItem>\n            <NavItem to=\"/files\" icon=\"folder\">\n              Files\n            </NavItem>\n            <NavItem to=\"/apps\" icon=\"applications\">\n              Apps\n            </NavItem>\n            <NavItem to=\"/jobs\" icon=\"jobs\">\n              Jobs\n            </NavItem>\n          </>\n        )}\n      </Navbar>\n    </div>\n  );\n};\n\nexport default Sidebar;\n","import { Authenticator } from '@tapis/tapis-typescript';\nimport { apiGenerator, errorDecoder } from 'tapis-api/utils';\n\n// This helper takes the username and password and assembles an API call\nconst login = (\n  username: string,\n  password: string,\n  basePath: string\n): Promise<Authenticator.RespCreateToken> => {\n  const reqCreateToken: Authenticator.ReqCreateToken = {\n    username,\n    password,\n    grant_type: 'password',\n  };\n  const request: Authenticator.CreateTokenRequest = {\n    reqCreateToken,\n  };\n\n  const api: Authenticator.TokensApi = apiGenerator<Authenticator.TokensApi>(\n    Authenticator,\n    Authenticator.TokensApi,\n    basePath,\n    null\n  );\n\n  return errorDecoder(() => api.createToken(request));\n};\n\nexport default login;\n","import { Authenticator } from '@tapis/tapis-typescript';\nimport { apiGenerator, errorDecoder } from 'tapis-api/utils';\n\n// This helper takes the username and password and assembles an API call\nconst oAuthLogin = (\n  code: string,\n  basePath: string,\n): Promise<Authenticator.RespCreateToken> => {\n  const reqCreateToken: Authenticator.ReqCreateToken = {\n    code,\n    redirect_uri: 'https://jaeestee.github.io/scoped-tapis-ui/#/callback',\n    grant_type: 'authorization_code',\n  };\n  const request: Authenticator.CreateTokenRequest = {\n    reqCreateToken,\n  };\n\n  const api: Authenticator.TokensApi = apiGenerator<Authenticator.TokensApi>(\n    Authenticator,\n    Authenticator.TokensApi,\n    basePath,\n    null\n  );\n\n  return errorDecoder(() => api.createToken(request));\n};\n\nexport default oAuthLogin;\n","const QueryKeys = {\n  login: 'authenticator/login',\n};\n\nexport default QueryKeys;\n","import { useMutation } from 'react-query';\nimport { Authenticator } from '@tapis/tapis-typescript';\nimport { login } from 'tapis-api/authenticator';\nimport { useTapisConfig } from 'tapis-hooks';\nimport QueryKeys from './queryKeys';\n\ntype LoginHookParams = {\n  username: string;\n  password: string;\n};\n\nconst useLogin = () => {\n  const { setAccessToken, basePath } = useTapisConfig();\n\n  // On successful login, save the token to the TapisContext state\n  const onSuccess = (response: Authenticator.RespCreateToken) => {\n    setAccessToken(response?.result?.access_token);\n  };\n\n  // The useMutation react-query hook is used to call operations that make server-side changes\n  // (Other hooks would be used for data retrieval)\n  //\n  // In this case, loginHelper is called to perform the operation, with an onSuccess callback\n  // passed as an option\n  const { mutate, isLoading, isError, isSuccess, error } = useMutation<\n    Authenticator.RespCreateToken,\n    Error,\n    LoginHookParams\n  >(\n    [QueryKeys.login, basePath],\n    ({ username, password }) => login(username, password, basePath),\n    { onSuccess }\n  );\n\n  // Return hook object with loading states and login function\n  return {\n    isLoading,\n    isError,\n    isSuccess,\n    error,\n    login: (username: string, password: string) => {\n      // Call mutate to trigger a single post-like API operation\n      return mutate({ username, password });\n    },\n    logout: () => setAccessToken(null),\n  };\n};\n\nexport default useLogin;\n","import { useMutation } from 'react-query';\nimport { Authenticator } from '@tapis/tapis-typescript';\nimport { oAuthLogin } from 'tapis-api/authenticator';\nimport { useTapisConfig } from 'tapis-hooks';\nimport QueryKeys from './queryKeys';\n\ntype LoginHookParams = {\n  code: string;\n};\n\nconst useOAuthLogin = () => {\n  const { setAccessToken, basePath } = useTapisConfig();\n\n  // On successful login, save the token to the TapisContext state\n  const onSuccess = (response: Authenticator.RespCreateToken) => {\n    setAccessToken(response?.result?.access_token);\n  };\n\n  // The useMutation react-query hook is used to call operations that make server-side changes\n  // (Other hooks would be used for data retrieval)\n  //\n  // In this case, loginHelper is called to perform the operation, with an onSuccess callback\n  // passed as an option\n  const { mutate, isLoading, isError, isSuccess, error } = useMutation<\n    Authenticator.RespCreateToken,\n    Error,\n    LoginHookParams\n  >(\n    [QueryKeys.login, basePath],\n    ({ code }) => oAuthLogin(code, basePath),\n    { onSuccess }\n  );\n\n  // Return hook object with loading states and login function\n  return {\n    isLoading,\n    isError,\n    isSuccess,\n    error,\n    oAuthLogin: (code: string) => {\n      // Call mutate to trigger a single post-like API operation\n      return mutate({ code });\n    },\n    logout: () => setAccessToken(null),\n  };\n};\n\nexport default useOAuthLogin;\n","import { Apps } from '@tapis/tapis-typescript';\nimport { apiGenerator, errorDecoder } from 'tapis-api/utils';\n\nconst list = (params: Apps.GetAppsRequest, basePath: string, jwt: string) => {\n  const api: Apps.ApplicationsApi = apiGenerator<Apps.ApplicationsApi>(\n    Apps,\n    Apps.ApplicationsApi,\n    basePath,\n    jwt\n  );\n  return errorDecoder<Apps.RespApps>(() => api.getApps(params));\n};\n\nexport default list;\n","import { Apps } from '@tapis/tapis-typescript';\nimport { apiGenerator, errorDecoder } from 'tapis-api/utils';\n\nconst detail = (params: Apps.GetAppRequest, basePath: string, jwt: string) => {\n  const api: Apps.ApplicationsApi = apiGenerator<Apps.ApplicationsApi>(\n    Apps,\n    Apps.ApplicationsApi,\n    basePath,\n    jwt\n  );\n  return errorDecoder<Apps.RespApp>(() => api.getApp(params));\n};\n\nexport default detail;\n","const QueryKeys = {\n  list: 'apps/list',\n};\n\nexport default QueryKeys;\n","import { useQuery, QueryObserverOptions } from 'react-query';\nimport { list } from 'tapis-api/apps';\nimport { Apps } from '@tapis/tapis-typescript';\nimport { useTapisConfig } from 'tapis-hooks';\nimport QueryKeys from './queryKeys';\n\nexport const defaultParams: Apps.GetAppsRequest = {\n  select: 'jobAttributes,version',\n};\n\nconst useList = (\n  params: Apps.GetAppsRequest = defaultParams,\n  options: QueryObserverOptions<Apps.RespApps, Error> = {}\n) => {\n  const { accessToken, basePath } = useTapisConfig();\n  const result = useQuery<Apps.RespApps, Error>(\n    [QueryKeys.list, params, accessToken],\n    // Default to no token. This will generate a 403 when calling the list function\n    // which is expected behavior for not having a token\n    () => list(params, basePath, accessToken?.access_token ?? ''),\n    {\n      ...options,\n      enabled: !!accessToken,\n    }\n  );\n  return result;\n};\n\nexport default useList;\n","import { useQuery, QueryObserverOptions } from 'react-query';\nimport { detail } from 'tapis-api/apps';\nimport { Apps } from '@tapis/tapis-typescript';\nimport { useTapisConfig } from 'tapis-hooks';\nimport QueryKeys from './queryKeys';\n\nconst useDetail = (\n  params: Apps.GetAppRequest,\n  options: QueryObserverOptions<Apps.RespApp, Error> = {}\n) => {\n  const { accessToken, basePath } = useTapisConfig();\n  const result = useQuery<Apps.RespApp, Error>(\n    [QueryKeys.list, params, accessToken],\n    // Default to no token. This will generate a 403 when calling the list function\n    // which is expected behavior for not having a token\n    () => detail({ ...params }, basePath, accessToken?.access_token ?? ''),\n    {\n      ...options,\n      enabled: !!accessToken,\n    }\n  );\n  return result;\n};\n\nexport default useDetail;\n","import React from 'react';\nimport { useRouteMatch } from 'react-router-dom';\nimport { useList } from 'tapis-hooks/apps';\nimport { Apps } from '@tapis/tapis-typescript';\nimport { Navbar, NavItem } from 'tapis-ui/_wrappers/Navbar';\nimport { QueryWrapper } from 'tapis-ui/_wrappers';\n// import { Systems } from '@tapis/tapis-typescript';\nimport { ListTypeEnum } from '@tapis/tapis-typescript-systems';\n\nexport const defaultParams: Apps.GetAppsRequest = {\n  select: 'allAttributes',\n  listType: ListTypeEnum.All,\n};\n\nconst AppsNav: React.FC = () => {\n  const { data, isLoading, error } = useList(defaultParams, {\n    refetchOnWindowFocus: false,\n  });\n  const { url } = useRouteMatch();\n  const appList: Array<Apps.TapisApp> = data?.result ?? [];\n\n  return (\n    <QueryWrapper isLoading={isLoading} error={error}>\n      <Navbar>\n        {appList.length ? (\n          appList.map((app) => (\n            <NavItem\n              to={`${url}/${app.id}/${app.version}`}\n              icon=\"applications\"\n              key={app.id}\n            >\n              {`${app.id} v${app.version}`}\n            </NavItem>\n          ))\n        ) : (\n          <i>No apps found</i>\n        )}\n      </Navbar>\n    </QueryWrapper>\n  );\n};\n\nexport default AppsNav;\n","import AppsNav from './AppsNav';\nexport default AppsNav;\n","import { Jobs } from '@tapis/tapis-typescript';\nimport { apiGenerator, errorDecoder } from 'tapis-api/utils';\n\nconst list = (\n  params: Jobs.GetJobListRequest,\n  basePath: string,\n  jwt: string\n) => {\n  const api: Jobs.JobsApi = apiGenerator<Jobs.JobsApi>(\n    Jobs,\n    Jobs.JobsApi,\n    basePath,\n    jwt\n  );\n  return errorDecoder<Jobs.RespGetJobList>(() => api.getJobList(params));\n};\n\nexport default list;\n","import { Jobs } from '@tapis/tapis-typescript';\nimport { apiGenerator, errorDecoder } from 'tapis-api/utils';\n\nconst details = (params: Jobs.GetJobRequest, basePath: string, jwt: string) => {\n  const api: Jobs.JobsApi = apiGenerator<Jobs.JobsApi>(\n    Jobs,\n    Jobs.JobsApi,\n    basePath,\n    jwt\n  );\n  return errorDecoder<Jobs.RespGetJob>(() => api.getJob(params));\n};\n\nexport default details;\n","import { Jobs } from '@tapis/tapis-typescript';\nimport { apiGenerator, errorDecoder } from 'tapis-api/utils';\n\nconst submit = (\n  request: Jobs.ReqSubmitJob,\n  basePath: string,\n  jwt: string\n): Promise<Jobs.RespSubmitJob> => {\n  const api: Jobs.JobsApi = apiGenerator<Jobs.JobsApi>(\n    Jobs,\n    Jobs.JobsApi,\n    basePath,\n    jwt\n  );\n  return errorDecoder<Jobs.RespSubmitJob>(() =>\n    api.submitJob({ reqSubmitJob: request })\n  );\n};\n\nexport default submit;\n","const QueryKeys = {\n  list: 'jobs/list',\n  details: 'jobs/details',\n  submit: 'jobs/submit',\n};\n\nexport default QueryKeys;\n","import { useQuery, QueryObserverOptions } from 'react-query';\nimport { list } from 'tapis-api/jobs';\nimport { Jobs } from '@tapis/tapis-typescript';\nimport { useTapisConfig } from 'tapis-hooks';\nimport QueryKeys from './queryKeys';\n\nexport const defaultParams: Jobs.GetJobListRequest = {\n  orderBy: 'created(desc)',\n};\n\nconst useList = (\n  params: Jobs.GetJobListRequest = defaultParams,\n  options: QueryObserverOptions<Jobs.RespGetJobList, Error> = {}\n) => {\n  const { accessToken, basePath } = useTapisConfig();\n  const result = useQuery<Jobs.RespGetJobList, Error>(\n    [QueryKeys.list, params, accessToken],\n    // Default to no token. This will generate a 403 when calling the list function\n    // which is expected behavior for not having a token\n    () => list(params, basePath, accessToken?.access_token ?? ''),\n    {\n      ...options,\n      enabled: !!accessToken,\n    }\n  );\n  return result;\n};\n\nexport default useList;\n","import { useQuery, QueryObserverOptions } from 'react-query';\nimport { details } from 'tapis-api/jobs';\nimport { Jobs } from '@tapis/tapis-typescript';\nimport { useTapisConfig } from 'tapis-hooks';\nimport QueryKeys from './queryKeys';\n\nconst useDetails = (\n  jobUuid: string,\n  options: QueryObserverOptions<Jobs.RespGetJob, Error> = {}\n) => {\n  const { accessToken, basePath } = useTapisConfig();\n  const params: Jobs.GetJobRequest = { jobUuid };\n  const result = useQuery<Jobs.RespGetJob, Error>(\n    [QueryKeys.details, params, accessToken],\n    // Default to no token. This will generate a 403 when calling the list function\n    // which is expected behavior for not having a token\n    () => details(params, basePath, accessToken?.access_token ?? ''),\n    {\n      ...options,\n      enabled: !!accessToken,\n    }\n  );\n  return result;\n};\n\nexport default useDetails;\n","import { useEffect } from 'react';\nimport { useMutation } from 'react-query';\nimport { Jobs } from '@tapis/tapis-typescript';\nimport { submit } from 'tapis-api/jobs';\nimport { useTapisConfig } from 'tapis-hooks';\nimport QueryKeys from './queryKeys';\n\nconst useSubmit = (appId: string, appVersion: string) => {\n  const { basePath, accessToken } = useTapisConfig();\n  const jwt = accessToken?.access_token || '';\n\n  // The useMutation react-query hook is used to call operations that make server-side changes\n  // (Other hooks would be used for data retrieval)\n  //\n  // In this case, submit helper is called to perform the operation\n  const { mutate, isLoading, isError, isSuccess, data, error, reset } =\n    useMutation<Jobs.RespSubmitJob, Error, Jobs.ReqSubmitJob>(\n      [QueryKeys.submit, appId, appVersion, basePath, jwt],\n      (request: Jobs.ReqSubmitJob) => submit(request, basePath, jwt)\n    );\n\n  // We want this hook to automatically reset if a different appId or appVersion\n  // is passed to it. This eliminates the need to reset it inside the TSX component\n  useEffect(() => reset(), [reset, appId, appVersion]);\n\n  // Return hook object with loading states and login function\n  return {\n    isLoading,\n    isError,\n    isSuccess,\n    data,\n    error,\n    reset,\n    submit: (request: Jobs.ReqSubmitJob) => {\n      // Call mutate to trigger a single post-like API operation\n      return mutate(request);\n    },\n  };\n};\n\nexport default useSubmit;\n","import React from 'react';\nimport { useDetails } from 'tapis-hooks/jobs';\nimport { Jobs } from '@tapis/tapis-typescript';\nimport { DescriptionList } from 'tapis-ui/_common';\nimport { QueryWrapper } from 'tapis-ui/_wrappers';\nimport { Link } from 'react-router-dom';\n\nconst JobDetail: React.FC<{ jobUuid: string }> = ({ jobUuid }) => {\n  const { data, isLoading, error } = useDetails(jobUuid);\n  const job: Jobs.Job | undefined = data?.result;\n\n  console.log(job?.execSystemOutputDir);\n\n  return (\n    <QueryWrapper isLoading={isLoading} error={error}>\n      <h3>{job?.name}</h3>\n      <h5>{job?.uuid}</h5>\n      <Link to={`/files/${job?.execSystemId}${job?.execSystemOutputDir}`}>\n        See Files\n      </Link>\n      {job && <DescriptionList data={job} />}\n    </QueryWrapper>\n  );\n};\n\nexport default JobDetail;\n","import { Apps, Jobs } from '@tapis/tapis-typescript';\n\nexport const getIncompleteAppInputs = (\n  app: Apps.TapisApp\n): Array<Apps.AppFileInput> => {\n  return (\n    app.jobAttributes?.fileInputs?.filter(\n      (fileInput) => !fileInput.sourceUrl\n    ) ?? []\n  );\n};\n\nexport const getIncompleteAppInputsOfType = (\n  app: Apps.TapisApp,\n  inputType: Apps.FileInputModeEnum\n): Array<Apps.AppFileInput> => {\n  return getIncompleteAppInputs(app).filter(\n    (fileInput) => fileInput.inputMode === inputType\n  );\n};\n\nexport const generateFileInputFromAppInput = (\n  input: Apps.AppFileInput\n): Jobs.JobFileInput => ({\n  name: input.name,\n  sourceUrl: input.sourceUrl,\n  targetPath: input.targetPath,\n  description: input.description,\n  autoMountLocal: input.autoMountLocal,\n});\n\nexport const generateRequiredFileInputsFromApp = (\n  app: Apps.TapisApp\n): Array<Jobs.JobFileInput> => {\n  const requiredInputs: Array<Apps.AppFileInput> =\n    app.jobAttributes?.fileInputs?.filter(\n      (fileInput) => fileInput.inputMode === Apps.FileInputModeEnum.Required\n    ) ?? [];\n  const fileInputs: Array<Jobs.JobFileInput> = requiredInputs.map(\n    (appFileInput) => {\n      return generateFileInputFromAppInput(appFileInput);\n    }\n  );\n  return fileInputs;\n};\n\nexport const getAppInputsIncludedByDefault = (\n  appFileInputs: Array<Apps.AppFileInput>,\n  jobFileInputs: Array<Jobs.JobFileInput>\n) => {\n  return appFileInputs.filter((appFileInput) => {\n    const includedInJob = jobFileInputs.some(\n      (jobFileInput) => jobFileInput.name === appFileInput.name\n    );\n    return (\n      appFileInput.inputMode === Apps.FileInputModeEnum.Required &&\n      !!appFileInput.sourceUrl &&\n      !includedInJob\n    );\n  });\n};\n\n/**\n * @param appFileInputs\n * @param jobFileInputs\n * @returns An array of jobFileInputs that are underspecified\n */\nexport const getIncompleteJobInputs = (\n  appFileInputs: Array<Apps.AppFileInput>,\n  jobFileInputs: Array<Jobs.JobFileInput>\n) => {\n  // Get job inputs that are REQUIRED in the app but do not specify sourceUrl\n  const incompleteRequiredAppInputs: Array<Apps.AppFileInput> =\n    appFileInputs.filter(\n      (appFileInput) =>\n        appFileInput.inputMode === Apps.FileInputModeEnum.Required &&\n        !appFileInput.sourceUrl\n    );\n  const incompleteRequiredJobInputs: Array<Jobs.JobFileInput> =\n    jobFileInputs.filter((jobFileInput) => {\n      // Is this jobFileInput part of required app inputs?\n      const requiredInApp = incompleteRequiredAppInputs.some(\n        (appInput) => appInput.name === jobFileInput.name\n      );\n      if (requiredInApp) {\n        return !jobFileInput.sourceUrl;\n      } else {\n        return false;\n      }\n    });\n\n  // Get job inputs that are OPTIONAL in the app but do not specify sourceUrl\n  const incompleteOptionalAppInputs: Array<Apps.AppFileInput> =\n    appFileInputs.filter(\n      (appFileInput) =>\n        appFileInput.inputMode === Apps.FileInputModeEnum.Optional &&\n        !appFileInput.sourceUrl\n    );\n  const incompleteOptionalJobInputs: Array<Jobs.JobFileInput> =\n    jobFileInputs.filter((jobFileInput) => {\n      // Is this jobFileInput part of optional app inputs?\n      const optionalInApp = incompleteOptionalAppInputs.some(\n        (appInput) => appInput.name === jobFileInput.name\n      );\n      if (optionalInApp) {\n        return !jobFileInput.sourceUrl;\n      } else {\n        return false;\n      }\n    });\n\n  // Get job inputs that are neither OPTIONAL or REQUIRED, but are incomplete\n  const incompleteUserInputs: Array<Jobs.JobFileInput> = jobFileInputs.filter(\n    (jobFileInput) => {\n      // Is this jobFileInput neither OPTIONAL or REQUIRED?\n      const userInput =\n        !incompleteRequiredAppInputs.some(\n          (appInput) => appInput.name === jobFileInput.name\n        ) &&\n        !incompleteOptionalAppInputs.some(\n          (appInput) => appInput.name === jobFileInput.name\n        );\n      if (userInput) {\n        return !jobFileInput.sourceUrl || !jobFileInput.targetPath;\n      } else {\n        return false;\n      }\n    }\n  );\n\n  return incompleteRequiredJobInputs\n    .concat(incompleteOptionalJobInputs)\n    .concat(incompleteUserInputs);\n};\n\nexport const fileInputsComplete = (\n  app: Apps.TapisApp,\n  fileInputs: Array<Jobs.JobFileInput>\n) => {\n  // Check to make sure job has filled in all REQUIRED app inputs that are missing sourceUrl\n  const incompleteRequiredInputs: Array<Apps.AppFileInput> =\n    getIncompleteAppInputsOfType(app, Apps.FileInputModeEnum.Required);\n  const hasIncompleteRequiredInput: boolean = incompleteRequiredInputs.some(\n    (requiredInput) => {\n      // Find JobFileInput with name matching the required input\n      const jobFileInput: Jobs.JobFileInput | undefined = fileInputs.find(\n        (jobFileInput) => jobFileInput.name === requiredInput.name\n      );\n      if (!jobFileInput) {\n        // Matching jobFileInput not found, therefore there is an incomplete required input\n        return true;\n      } else {\n        // Verify that this input has a sourceUrl specified\n        return !jobFileInput.sourceUrl;\n      }\n    }\n  );\n  if (hasIncompleteRequiredInput) {\n    return false;\n  }\n\n  // Check to see if an OPTIONAL input was included but not fully specified\n  const optionalAppInputs: Array<Apps.AppFileInput> = getIncompleteAppInputs(\n    app\n  ).filter((appFileInput) => !appFileInput.sourceUrl);\n  // get any optional app file input that was included in the job.\n  const optionalJobInputs: Array<Jobs.JobFileInput> =\n    fileInputs.filter((jobFileInput) =>\n      optionalAppInputs.some(\n        (optionalAppInput) => jobFileInput.name === optionalAppInput.name\n      )\n    ) ?? [];\n  const hasIncompleteOptionalInput: boolean =\n    !!optionalJobInputs.length &&\n    optionalJobInputs.some((jobInput) => !jobInput.sourceUrl);\n  if (hasIncompleteOptionalInput) {\n    return false;\n  }\n\n  // Check to see if any app inputs that did not exist\n  const namedInputs =\n    app.jobAttributes?.fileInputs?.map((input) => input.name) ?? [];\n  const otherInputs: Array<Jobs.JobFileInput> =\n    fileInputs.filter(\n      (jobInput) => !namedInputs.some((name) => name === jobInput.name)\n    ) ?? [];\n  if (\n    otherInputs.some(\n      (otherInput) => !otherInput.sourceUrl || !otherInput.targetPath\n    )\n  ) {\n    return false;\n  }\n\n  return true;\n};\n","import { Apps, Jobs } from '@tapis/tapis-typescript';\n\nexport const getIncompleteAppInputArrays = (\n  app: Apps.TapisApp\n): Array<Apps.AppFileInputArray> => {\n  return (\n    app.jobAttributes?.fileInputArrays?.filter(\n      (fileInput) => !fileInput.sourceUrls\n    ) ?? []\n  );\n};\n\nexport const getIncompleteAppInputArraysOfType = (\n  app: Apps.TapisApp,\n  inputType: Apps.FileInputModeEnum\n): Array<Apps.AppFileInputArray> => {\n  return getIncompleteAppInputArrays(app).filter(\n    (fileInput) => fileInput.inputMode === inputType\n  );\n};\n\nexport const generateFileInputArrayFromAppInput = (\n  input: Apps.AppFileInputArray\n): Jobs.JobFileInputArray => ({\n  name: input.name,\n  sourceUrls: input.sourceUrls ?? [],\n  targetDir: input.targetDir,\n  description: input.description,\n});\n\nexport const generateRequiredFileInputArraysFromApp = (\n  app: Apps.TapisApp\n): Array<Jobs.JobFileInput> => {\n  const requiredInputArrays: Array<Apps.AppFileInputArray> =\n    app.jobAttributes?.fileInputArrays?.filter(\n      (fileInput) => fileInput.inputMode === Apps.FileInputModeEnum.Required\n    ) ?? [];\n  const fileInputs: Array<Jobs.JobFileInput> = requiredInputArrays.map(\n    (appFileInputArray) => {\n      return generateFileInputArrayFromAppInput(appFileInputArray);\n    }\n  );\n  return fileInputs;\n};\n\nexport const getAppInputArraysIncludedByDefault = (\n  appFileInputArrays: Array<Apps.AppFileInputArray>,\n  jobFileInputArrays: Array<Jobs.JobFileInputArray>\n) => {\n  return appFileInputArrays.filter((appFileInputArray) => {\n    const includedInJob = jobFileInputArrays.some(\n      (jobFileInputArray) => jobFileInputArray.name === appFileInputArray.name\n    );\n    return (\n      appFileInputArray.inputMode === Apps.FileInputModeEnum.Required &&\n      !!appFileInputArray.sourceUrls &&\n      !includedInJob\n    );\n  });\n};\n\n/**\n * @param appFileInputsArrays\n * @param jobFileInputsArrays\n * @returns An array of JobFileInputArrays that are underspecified\n */\nexport const getIncompleteJobInputArrays = (\n  appFileInputArrays: Array<Apps.AppFileInputArray>,\n  jobFileInputArrays: Array<Jobs.JobFileInputArray>\n): Array<Jobs.JobFileInputArray> => {\n  // Get job input arrays that are REQUIRED in the app but do not specify sourceUrl\n  const incompleteRequiredAppInputArrays: Array<Apps.AppFileInputArray> =\n    appFileInputArrays.filter(\n      (appFileInputArray) =>\n        appFileInputArray.inputMode === Apps.FileInputModeEnum.Required &&\n        !appFileInputArray.sourceUrls\n    );\n  const incompleteRequiredJobInputArrays: Array<Jobs.JobFileInputArray> =\n    jobFileInputArrays.filter((jobFileInputArray) => {\n      // Is this jobFileInputArray part of required app input arrays?\n      const requiredInApp = incompleteRequiredAppInputArrays.some(\n        (appInputArray) => appInputArray.name === jobFileInputArray.name\n      );\n      if (requiredInApp) {\n        return (\n          !jobFileInputArray.sourceUrls || !jobFileInputArray.sourceUrls.length\n        );\n      } else {\n        return false;\n      }\n    });\n\n  // Get job input arrays that are OPTIONAL in the app but do not specify sourceUrl\n  const incompleteOptionalAppInputArrays: Array<Apps.AppFileInputArray> =\n    appFileInputArrays.filter(\n      (appFileInputArray) =>\n        appFileInputArray.inputMode === Apps.FileInputModeEnum.Optional &&\n        !appFileInputArray.sourceUrls\n    );\n  const incompleteOptionalJobInputArrays: Array<Jobs.JobFileInputArray> =\n    jobFileInputArrays.filter((jobFileInputArray) => {\n      // Is this jobFileInputArray part of optional app input arrays?\n      const optionalInApp = incompleteOptionalAppInputArrays.some(\n        (appInputArray) => appInputArray.name === jobFileInputArray.name\n      );\n      if (optionalInApp) {\n        return (\n          !jobFileInputArray.sourceUrls || !jobFileInputArray.sourceUrls.length\n        );\n      } else {\n        return false;\n      }\n    });\n\n  // Get job input arrays that are neither OPTIONAL or REQUIRED, but are incomplete\n  const incompleteUserInputArrays: Array<Jobs.JobFileInputArray> =\n    jobFileInputArrays.filter((jobFileInputArray) => {\n      // Is this jobFileInputArray neither OPTIONAL or REQUIRED?\n      const userInput =\n        !incompleteRequiredAppInputArrays.some(\n          (appInputArray) => appInputArray.name === jobFileInputArray.name\n        ) &&\n        !incompleteOptionalAppInputArrays.some(\n          (appInputArray) => appInputArray.name === jobFileInputArray.name\n        );\n      if (userInput) {\n        return (\n          !jobFileInputArray.sourceUrls ||\n          !jobFileInputArray.sourceUrls.length ||\n          !jobFileInputArray.targetDir\n        );\n      } else {\n        return false;\n      }\n    });\n\n  return incompleteRequiredJobInputArrays\n    .concat(incompleteOptionalJobInputArrays)\n    .concat(incompleteUserInputArrays);\n};\n\nexport const fileInputArraysComplete = (\n  app: Apps.TapisApp,\n  fileInputArrays: Array<Jobs.JobFileInputArray>\n): boolean => {\n  // Check to make sure job has filled in all REQUIRED app inputs that are missing sourceUrl\n  const incompleteRequiredInputs: Array<Apps.AppFileInputArray> =\n    getIncompleteAppInputArraysOfType(app, Apps.FileInputModeEnum.Required);\n  const hasIncompleteRequiredInput: boolean = incompleteRequiredInputs.some(\n    (requiredInputArray) => {\n      // Find JobFileInputArray with name matching the required input\n      const jobFileInputArray: Jobs.JobFileInputArray | undefined =\n        fileInputArrays.find(\n          (jobFileInputArray) =>\n            jobFileInputArray.name === requiredInputArray.name\n        );\n      if (!jobFileInputArray) {\n        // Matching jobFileInput not found, therefore there is an incomplete required input\n        return true;\n      } else {\n        // Verify that this input has a sourceUrl specified\n        return (\n          !jobFileInputArray.sourceUrls || !jobFileInputArray.sourceUrls.length\n        );\n      }\n    }\n  );\n  if (hasIncompleteRequiredInput) {\n    return false;\n  }\n\n  // Check to see if an OPTIONAL input was included but not fully specified\n  const optionalAppInputArrays: Array<Apps.AppFileInputArray> =\n    getIncompleteAppInputArrays(app).filter(\n      (appFileInput) => !appFileInput.sourceUrls\n    );\n  // get any optional app file input that was included in the job.\n  const optionalJobInputArrays: Array<Jobs.JobFileInputArray> =\n    fileInputArrays.filter((jobFileInputArray) =>\n      optionalAppInputArrays.some(\n        (optionalAppInputArray) =>\n          jobFileInputArray.name === optionalAppInputArray.name\n      )\n    ) ?? [];\n  const hasIncompleteOptionalInputArray: boolean =\n    !!optionalJobInputArrays.length &&\n    optionalJobInputArrays.some((jobInput) => !jobInput.sourceUrls);\n  if (hasIncompleteOptionalInputArray) {\n    return false;\n  }\n\n  // Check to see if any app inputs that did not exist\n  const namedInputs =\n    app.jobAttributes?.fileInputArrays?.map((input) => input.name) ?? [];\n  const otherInputArrays: Array<Jobs.JobFileInputArray> =\n    fileInputArrays.filter(\n      (jobInputArray) =>\n        !namedInputs.some((name) => name === jobInputArray.name)\n    ) ?? [];\n  if (\n    otherInputArrays.some(\n      (otherInputArray) =>\n        !otherInputArray.sourceUrls || !otherInputArray.targetDir\n    )\n  ) {\n    return false;\n  }\n\n  return true;\n};\n","import { Apps, Jobs } from '@tapis/tapis-typescript';\n\nexport const generateJobArg = (argSpec: Apps.AppArgSpec): Jobs.JobArgSpec => {\n  return {\n    arg: argSpec.arg,\n    description: argSpec.description,\n    include: argSpec.inputMode !== Apps.ArgInputModeEnum.IncludeOnDemand,\n    name: argSpec.name,\n  };\n};\n\nexport const getArgMode = (\n  name: string,\n  argSpecs: Array<Apps.AppArgSpec>\n): Apps.ArgInputModeEnum | undefined => {\n  const spec: Apps.AppArgSpec | undefined = argSpecs.find(\n    (argSpec) => argSpec.name === name\n  );\n  if (!spec) {\n    return undefined;\n  }\n  return spec.inputMode;\n};\n\nexport const generateJobArgsFromSpec = (\n  argSpecs: Array<Apps.AppArgSpec>\n): Array<Jobs.JobArgSpec> => {\n  return argSpecs.map((argSpec) => generateJobArg(argSpec));\n};\n","import { Apps, Jobs, Systems } from '@tapis/tapis-typescript';\nimport { generateRequiredFileInputsFromApp } from 'tapis-api/utils/jobFileInputs';\nimport { generateRequiredFileInputArraysFromApp } from 'tapis-api/utils/jobFileInputArrays';\nimport { generateJobArgsFromSpec } from 'tapis-api/utils/jobArgs';\n\nconst generateJobDefaults = ({\n  app,\n  systems,\n}: {\n  app?: Apps.TapisApp;\n  systems: Array<Systems.TapisSystem>;\n}): Partial<Jobs.ReqSubmitJob> => {\n  if (!app) {\n    return {};\n  }\n\n  const defaultValues: Partial<Jobs.ReqSubmitJob> = {\n    name: `${app.id}-${app.version}`,\n    description: app.description,\n    appId: app.id,\n    appVersion: app.version,\n    archiveOnAppError: app.jobAttributes?.archiveOnAppError ?? true,\n    archiveSystemId: app.jobAttributes?.archiveSystemId,\n    archiveSystemDir: app.jobAttributes?.archiveSystemDir,\n    nodeCount: app.jobAttributes?.nodeCount,\n    coresPerNode: app.jobAttributes?.coresPerNode,\n    jobType: app.jobType,\n    memoryMB: app.jobAttributes?.memoryMB,\n    maxMinutes: app.jobAttributes?.maxMinutes,\n    isMpi: app.jobAttributes?.isMpi,\n    mpiCmd: app.jobAttributes?.mpiCmd,\n    cmdPrefix: app.jobAttributes?.cmdPrefix,\n    fileInputs: generateRequiredFileInputsFromApp(app),\n    fileInputArrays: generateRequiredFileInputArraysFromApp(app),\n    parameterSet: {\n      appArgs: generateJobArgsFromSpec(\n        app.jobAttributes?.parameterSet?.appArgs ?? []\n      ),\n      containerArgs: generateJobArgsFromSpec(\n        app.jobAttributes?.parameterSet?.containerArgs ?? []\n      ),\n      schedulerOptions: generateJobArgsFromSpec(\n        app.jobAttributes?.parameterSet?.schedulerOptions ?? []\n      ),\n      archiveFilter: app.jobAttributes?.parameterSet?.archiveFilter,\n      envVariables: app.jobAttributes?.parameterSet?.envVariables,\n    },\n  };\n  return defaultValues;\n};\n\nexport default generateJobDefaults;\n","import { Message } from 'tapis-ui/_common';\n\ntype JobStartSummaryProps = {\n  field?: string;\n  error?: string;\n};\n\nconst JobStartSummary: React.FC<JobStartSummaryProps> = ({ field, error }) => {\n  return (\n    <div>\n      {field ? (\n        <div>{field}</div>\n      ) : (\n        <Message type=\"error\" canDismiss={false} scope=\"inline\">\n          {error ?? ''}\n        </Message>\n      )}\n    </div>\n  );\n};\n\nexport default JobStartSummary;\n","import React, { useReducer, useContext, useEffect } from 'react';\n\nexport type BuilderContextType<T> = {\n  data: Partial<T>;\n  add: (slice: Partial<T>) => void;\n  set: (slice: Partial<T>) => void;\n  clear: () => void;\n};\n\n/**\n * Creates a Provider and context hook for a given data type\n * that builds a structure from slices of the provided data type\n *\n * @returns A Provider and a context hook\n */\nconst withBuilder = <T extends unknown>() => {\n  const context = React.createContext<BuilderContextType<T>>({\n    data: {},\n    add: (slice: Partial<T>) => {},\n    set: (slice: Partial<T>) => {},\n    clear: () => {},\n  });\n\n  const useBuilderContext = () => useContext(context);\n  const Provider: React.FC<React.PropsWithChildren<{ value?: Partial<T> }>> = ({\n    children,\n    value,\n  }) => {\n    const reducer = (\n      state: Partial<T>,\n      payload: {\n        action: 'add' | 'set' | 'clear';\n        slice?: Partial<T>;\n      }\n    ) => {\n      const { action, slice } = payload;\n      switch (action) {\n        case 'add':\n          return { ...state, ...slice };\n        case 'set':\n          return { ...slice };\n        case 'clear':\n          return {};\n        default:\n          return { ...state };\n      }\n    };\n    const [data, dispatch] = useReducer(reducer, { ...value });\n\n    useEffect(() => {\n      dispatch({ action: 'set', slice: value });\n    }, [dispatch, value]);\n\n    const contextValue: BuilderContextType<T> = {\n      data,\n      add: (slice) => dispatch({ action: 'add', slice }),\n      set: (slice) => dispatch({ action: 'set', slice }),\n      clear: () => dispatch({ action: 'clear' }),\n    };\n    return <context.Provider value={contextValue}>{children}</context.Provider>;\n  };\n\n  return {\n    useBuilderContext,\n    Provider,\n  };\n};\n\nexport default withBuilder;\n","import React, { useContext } from 'react';\nimport { Jobs, Apps, Systems } from '@tapis/tapis-typescript';\nimport withBuilder from 'tapis-ui/utils/withBuilder';\n\ntype JobLauncherContextType = {\n  app: Apps.TapisApp;\n  systems: Array<Systems.TapisSystem>;\n  schedulerProfiles: Array<Systems.SchedulerProfile>;\n};\n\nconst JobLauncherContext = React.createContext<JobLauncherContextType>({\n  app: {},\n  systems: [],\n  schedulerProfiles: [],\n});\n\nconst { useBuilderContext, Provider } = withBuilder<Jobs.ReqSubmitJob>();\n\nexport const useJobLauncher = () => {\n  const { data, add, set, clear } = useBuilderContext();\n  const { app, systems, schedulerProfiles } = useContext(JobLauncherContext);\n  return {\n    job: data,\n    add,\n    set,\n    clear,\n    app,\n    systems,\n    schedulerProfiles,\n  };\n};\n\ntype JobLauncherProviderProps = {\n  value: {\n    defaultValues: Partial<Jobs.ReqSubmitJob>;\n    app: Apps.TapisApp;\n    systems: Array<Systems.TapisSystem>;\n    schedulerProfiles: Array<Systems.SchedulerProfile>;\n  };\n};\n\nexport const JobLauncherProvider: React.FC<\n  React.PropsWithChildren<JobLauncherProviderProps>\n> = ({ value, children }) => {\n  const { app, systems, defaultValues, schedulerProfiles } = value;\n  return (\n    <JobLauncherContext.Provider value={{ app, systems, schedulerProfiles }}>\n      {Provider({ value: defaultValues, children })}\n    </JobLauncherContext.Provider>\n  );\n};\n\nexport default useJobLauncher;\n","import { StepSummaryField, useJobLauncher } from '../components';\nimport { FormikInput } from 'tapis-ui/_common';\nimport * as Yup from 'yup';\nimport { JobStep, JobLauncherProviderParams } from '../';\nimport { Jobs } from '@tapis/tapis-typescript';\n\nexport const JobStart: React.FC = () => {\n  const { app } = useJobLauncher();\n  return (\n    <div>\n      <h2>\n        Launching {app.id} v{app.version}\n      </h2>\n      <FormikInput\n        name=\"name\"\n        required={true}\n        label=\"Name\"\n        description=\"A name for this job\"\n      />\n      <FormikInput\n        name=\"description\"\n        required={false}\n        label=\"Description\"\n        description=\"A description of this job\"\n      />\n    </div>\n  );\n};\n\nexport const JobStartSummary: React.FC = () => {\n  const { job } = useJobLauncher();\n  const { name, description, appId, appVersion } = job;\n  return (\n    <div>\n      <StepSummaryField\n        field={name}\n        error=\"A job name is required\"\n        key=\"job-start-name-summary\"\n      />\n      <StepSummaryField\n        field={description}\n        key=\"job-start-description-summary\"\n      />\n      <div>\n        <i>\n          Application: {appId} v{appVersion}\n        </i>\n      </div>\n    </div>\n  );\n};\n\nconst generateInitialValues = ({\n  job,\n}: JobLauncherProviderParams): Partial<Jobs.ReqSubmitJob> => ({\n  name: job.name,\n  description: job.description,\n});\n\nconst validationSchema = Yup.object({\n  name: Yup.string().required().min(1).max(64),\n  description: Yup.string(),\n});\n\nconst step: JobStep = {\n  id: 'start',\n  name: 'Job Name',\n  render: <JobStart />,\n  summary: <JobStartSummary />,\n  generateInitialValues,\n  validationSchema,\n};\n\nexport default step;\n","import useFileOperations from './useFileOperations';\n\nexport enum FileOpEventStatusEnum {\n  waiting = 'waiting',\n  loading = 'loading',\n  error = 'error',\n  success = 'success',\n  none = 'none',\n}\n\nexport type FileOpState = {\n  [path: string]: {\n    status: FileOpEventStatusEnum;\n    error?: Error;\n  };\n};\n\nexport default useFileOperations;\n","export const upperCaseFirstLetter = (str: string) => {\n  const lower = str.toLowerCase();\n  return `${lower.slice(0, 1).toUpperCase()}${lower.slice(1)}`;\n};\n\nexport const capitalize = (str: string) => {\n  return str!.charAt(0).toUpperCase() + str!.slice(1);\n};\n\nexport const reduceRecord = (record: Record<'id', string>) => {\n  const { id, ...contents } = record;\n  return Object.values(contents).reduce(\n    (prev, current) => ((prev as string) + current) as string,\n    ''\n  );\n};\n","import { useMemo, useEffect, useState } from 'react';\nimport { Apps, Jobs, Systems } from '@tapis/tapis-typescript';\nimport { useJobLauncher, StepSummaryField } from '../components';\nimport {\n  FormikInput,\n  FormikCheck,\n  FormikSelect,\n  FormikTapisFile,\n} from 'tapis-ui/_common/FieldWrapperFormik';\nimport { useFormikContext } from 'formik';\nimport { Collapse } from 'tapis-ui/_common';\nimport {\n  computeDefaultQueue,\n  computeDefaultSystem,\n  computeDefaultJobType,\n  validateExecSystem,\n  ValidateExecSystemResult,\n} from 'tapis-api/utils/jobExecSystem';\nimport { capitalize } from './utils';\nimport * as Yup from 'yup';\nimport fieldArrayStyles from '../FieldArray.module.scss';\nimport { JobStep, JobLauncherProviderParams } from '../';\n\nconst getLogicalQueues = (system?: Systems.TapisSystem) =>\n  system?.batchLogicalQueues ?? [];\n\nconst getSystem = (systems: Array<Systems.TapisSystem>, systemId?: string) =>\n  !!systemId ? systems.find((system) => system.id === systemId) : undefined;\n\nconst SystemSelector: React.FC = () => {\n  const { setFieldValue, values } = useFormikContext();\n  const { job, app, systems } = useJobLauncher();\n\n  const [queues, setQueues] = useState<Array<Systems.LogicalQueue>>(\n    getLogicalQueues(getSystem(systems, job.execSystemId))\n  );\n\n  const [selectableSystems, setSelectableSystems] =\n    useState<Array<Systems.TapisSystem>>(systems);\n\n  const {\n    defaultSystemLabel,\n    defaultQueueLabel,\n    defaultJobTypeLabel,\n    isBatch,\n    selectedSystem,\n  } = useMemo(() => {\n    // Compute labels for when undefined values are selected for systems, queues or jobType\n    const { source: systemSource, systemId } = computeDefaultSystem(app);\n    const defaultSystemLabel = systemSource\n      ? `App default (${systemId})`\n      : 'Please select a system';\n    const { source: queueSource, queue } = computeDefaultQueue(\n      values as Partial<Jobs.ReqSubmitJob>,\n      app,\n      systems\n    );\n    const defaultQueueLabel = queueSource\n      ? `${capitalize(queueSource)} default (${queue})`\n      : 'Please select a queue';\n    const { source: jobTypeSource, jobType } = computeDefaultJobType(\n      values as Partial<Jobs.ReqSubmitJob>,\n      app,\n      systems\n    );\n    const defaultJobTypeLabel = `${capitalize(\n      jobTypeSource\n    )} default (${jobType})`;\n    const isBatch =\n      (values as Jobs.ReqSubmitJob)?.jobType === Apps.JobTypeEnum.Batch ||\n      jobType === Apps.JobTypeEnum.Batch;\n    const selectedSystem = (values as Jobs.ReqSubmitJob)?.execSystemId;\n    return {\n      defaultSystemLabel,\n      defaultQueueLabel,\n      defaultJobTypeLabel,\n      isBatch,\n      selectedSystem,\n    };\n  }, [values, app, systems]);\n\n  useEffect(() => {\n    // Handle changes to selectable execSystems and execSystemLogicalQueues\n    const validSystems = isBatch\n      ? systems.filter((system) => !!system.batchLogicalQueues?.length)\n      : systems;\n    setSelectableSystems(validSystems);\n    if (!validSystems.some((system) => system.id === selectedSystem)) {\n      // If current system is invalid (like a system with no logical queues for a batch job)\n      // then use the application default\n      setFieldValue('execSystemId', undefined);\n    }\n    if (!isBatch) {\n      setFieldValue('execSystemLogicalQueue', undefined);\n    }\n    const system = getSystem(\n      validSystems,\n      selectedSystem ?? app.jobAttributes?.execSystemId\n    );\n    const queues = getLogicalQueues(system);\n    setQueues(queues);\n    setFieldValue('execSystemLogicalQueue', undefined);\n  }, [\n    systems,\n    isBatch,\n    app,\n    selectedSystem,\n    setFieldValue,\n    setSelectableSystems,\n    setQueues,\n  ]);\n\n  return (\n    <div className={fieldArrayStyles.item}>\n      <FormikSelect\n        name=\"execSystemId\"\n        description=\"The execution system for this job\"\n        label=\"Execution System\"\n        required={true}\n        data-testid=\"execSystemId\"\n      >\n        <option value={undefined} label={defaultSystemLabel} />\n        {selectableSystems.map((system) => (\n          <option\n            value={system.id}\n            key={`execsystem-select-${system.id}`}\n            label={system.id}\n            data-testid={`execSystemId-${system.id}`}\n          />\n        ))}\n      </FormikSelect>\n      <FormikSelect\n        name=\"jobType\"\n        label=\"Job Type\"\n        description=\"Jobs can either be Batch or Fork\"\n        required={true}\n        data-testid=\"jobType\"\n      >\n        <option value={undefined} label={defaultJobTypeLabel} />\n        <option value={Apps.JobTypeEnum.Batch} label=\"Batch\" />\n        <option value={Apps.JobTypeEnum.Fork} label=\"Fork\" />\n      </FormikSelect>\n      {isBatch && (\n        <FormikSelect\n          name=\"execSystemLogicalQueue\"\n          description=\"The batch queue on this execution system\"\n          label=\"Batch Logical Queue\"\n          required={false}\n          disabled={queues.length === 0}\n          data-testid=\"execSystemLogicalQueue\"\n        >\n          <option value={undefined} label={defaultQueueLabel} />\n          {queues.map((queue) => (\n            <option\n              value={queue.name}\n              key={`queue-select-${queue.name}`}\n              label={queue.name}\n            />\n          ))}\n        </FormikSelect>\n      )}\n    </div>\n  );\n};\n\nconst ExecSystemDirs: React.FC = () => {\n  const { values } = useFormikContext();\n  const execSystemId = useMemo(\n    () => (values as Partial<Jobs.ReqSubmitJob>).execSystemId,\n    [values]\n  );\n  return (\n    <Collapse title=\"Execution System Directories\">\n      <FormikTapisFile\n        allowSystemChange={false}\n        systemId={execSystemId}\n        disabled={!execSystemId}\n        name=\"execSystemExecDir\"\n        label=\"Execution System Execution Directory\"\n        description=\"The directory on the selected selection system for execution files\"\n        required={false}\n        files={false}\n        dirs={true}\n      />\n      <FormikTapisFile\n        allowSystemChange={false}\n        systemId={execSystemId}\n        disabled={!execSystemId}\n        name=\"execSystemInputDir\"\n        label=\"Execution System Input Directory\"\n        description=\"The directory on the selected selection system for input files\"\n        required={false}\n        files={false}\n        dirs={true}\n      />\n      <FormikTapisFile\n        allowSystemChange={false}\n        systemId={execSystemId}\n        disabled={!execSystemId}\n        name=\"execSystemOutputDir\"\n        label=\"Execution System Output Directory\"\n        description=\"The directory on the selected selection system for output files\"\n        required={false}\n        files={false}\n        dirs={true}\n      />\n    </Collapse>\n  );\n};\n\nconst ExecSystemQueueOptions: React.FC = () => {\n  const { errors } = useFormikContext();\n  const queueErrors = errors as QueueErrors;\n  const hasErrors =\n    queueErrors.coresPerNode ||\n    queueErrors.maxMinutes ||\n    queueErrors.memoryMB ||\n    queueErrors.nodeCount;\n  return (\n    <Collapse title=\"Queue Parameters\" isCollapsable={!hasErrors}>\n      <FormikInput\n        name=\"nodeCount\"\n        label=\"Node Count\"\n        description=\"The number of nodes to use for this job\"\n        required={false}\n        type=\"number\"\n      />\n      <FormikInput\n        name=\"coresPerNode\"\n        label=\"Cores Per Node\"\n        description=\"The number of cores to use per node\"\n        required={false}\n        type=\"number\"\n      />\n      <FormikInput\n        name=\"memoryMB\"\n        label=\"Memory, in Megabytes\"\n        description=\"The amount of memory to use per node in megabytes\"\n        required={false}\n        type=\"number\"\n      />\n      <FormikInput\n        name=\"maxMinutes\"\n        label=\"Maximum Minutes\"\n        description=\"The maximum amount of time in minutes for this job\"\n        required={false}\n        type=\"number\"\n      />\n    </Collapse>\n  );\n};\n\nconst MPIOptions: React.FC = () => {\n  const { values } = useFormikContext();\n  const isMpi = useMemo(\n    () => (values as Partial<Jobs.ReqSubmitJob>).isMpi,\n    [values]\n  );\n  return (\n    <Collapse title=\"MPI Options\">\n      <FormikCheck\n        name=\"isMpi\"\n        label=\"Is MPI?\"\n        description=\"If checked, this job will be run as an MPI job\"\n        required={false}\n      />\n      <FormikInput\n        name=\"mpiCmd\"\n        label=\"MPI Command\"\n        description=\"If this is an MPI job, you may specify the MPI command\"\n        required={false}\n        disabled={!isMpi}\n      />\n      <FormikInput\n        name=\"cmdPrefix\"\n        label=\"Command Prefix\"\n        description=\"If this is not an MPI job, you may specify a command prefix\"\n        required={false}\n        disabled={!!isMpi}\n      />\n    </Collapse>\n  );\n};\n\nexport const ExecOptions: React.FC = () => {\n  const { values } = useFormikContext();\n\n  const isBatch = useMemo(\n    () => (values as Jobs.ReqSubmitJob)?.jobType === Apps.JobTypeEnum.Batch,\n    [values]\n  );\n\n  return (\n    <div>\n      <h2>Execution Options</h2>\n      <SystemSelector />\n      {isBatch && <ExecSystemQueueOptions />}\n      <MPIOptions />\n      <ExecSystemDirs />\n    </div>\n  );\n};\n\nexport const ExecOptionsSummary: React.FC = () => {\n  const { job, app, systems } = useJobLauncher();\n  const { isMpi, mpiCmd, cmdPrefix } = job;\n\n  const { computedSystem, computedQueue, computedJobType } = useMemo(() => {\n    const { execSystemLogicalQueue, execSystemId, jobType } = job;\n    const computedSystem = execSystemId ?? computeDefaultSystem(app)?.systemId;\n    const computedQueue =\n      execSystemLogicalQueue ?? computeDefaultQueue(job, app, systems)?.queue;\n    const computedJobType =\n      jobType ?? computeDefaultJobType(job, app, systems)?.jobType;\n    return {\n      computedSystem,\n      computedQueue,\n      computedJobType,\n    };\n  }, [job, app, systems]);\n\n  return (\n    <div>\n      <StepSummaryField\n        field={computedSystem}\n        error=\"An execution system is required\"\n        key=\"execution-system-id-summary\"\n      />\n      {computedJobType === Apps.JobTypeEnum.Batch && (\n        <StepSummaryField\n          field={computedQueue}\n          error=\"A logical queue is required\"\n          key=\"execution-system-queue-summary\"\n        />\n      )}\n      <StepSummaryField\n        field={`${\n          isMpi\n            ? `MPI Command: ${mpiCmd ?? 'system default'}`\n            : `Command Prefix: ${cmdPrefix ?? 'system default'}`\n        }`}\n        key=\"execution-mpi-summary\"\n      />\n    </div>\n  );\n};\n\nconst validationSchema = Yup.object({\n  execSystemId: Yup.string(),\n  execSystemLogicalQueue: Yup.string(),\n  execSystemExecDir: Yup.string(),\n  execSystemInputDir: Yup.string(),\n  execSystemOutputDir: Yup.string(),\n  jobType: Yup.string(),\n  nodeCount: Yup.number(),\n  coresPerNode: Yup.number(),\n  memoryMB: Yup.number(),\n  maxMinutes: Yup.number(),\n  isMpi: Yup.boolean(),\n  mpiCmd: Yup.string(),\n  cmdPrefix: Yup.string(),\n});\n\ntype QueueErrors = {\n  nodeCount?: string;\n  coresPerNode?: string;\n  memoryMB?: string;\n  maxMinutes?: string;\n  execSystemId?: string;\n  execSystemLogicalQueue?: string;\n};\n\nconst validateThunk = ({ app, systems }: JobLauncherProviderParams) => {\n  return (values: Partial<Jobs.ReqSubmitJob>) => {\n    const {\n      execSystemId,\n      execSystemLogicalQueue,\n      nodeCount,\n      coresPerNode,\n      memoryMB,\n      maxMinutes,\n      jobType,\n    } = values;\n    const errors: QueueErrors = {};\n\n    const validation = validateExecSystem(\n      values as Partial<Jobs.ReqSubmitJob>,\n      app,\n      systems\n    );\n    if (validation === ValidateExecSystemResult.ErrorNoExecSystem) {\n      errors.execSystemId = `This app does not have a default execution system. You must specify one for this job`;\n    }\n\n    if (validation === ValidateExecSystemResult.ErrorExecSystemNotFound) {\n      errors.execSystemId = `The specified exec system cannot be found`;\n    }\n\n    if (validation === ValidateExecSystemResult.ErrorExecSystemNoQueues) {\n      errors.execSystemId = `The specified exec system is not capable of batch jobs`;\n    }\n\n    if (validation === ValidateExecSystemResult.ErrorNoQueue) {\n      errors.execSystemLogicalQueue = `Neither the application nor the selected system specifies a default queue. You must specify one for this job`;\n    }\n\n    if (validation === ValidateExecSystemResult.ErrorQueueNotFound) {\n      errors.execSystemLogicalQueue = `The specified queue cannot be found on the selected system`;\n    }\n\n    // Skip queue validation if the job is a FORK job\n    if (\n      jobType === Apps.JobTypeEnum.Fork ||\n      computeDefaultJobType(values as Partial<Jobs.ReqSubmitJob>, app, systems)\n        ?.jobType === Apps.JobTypeEnum.Fork\n    ) {\n      return errors;\n    }\n\n    const computedExecSystem = computeDefaultSystem(app);\n    const computedLogicalQueue = computeDefaultQueue(\n      values as Partial<Jobs.ReqSubmitJob>,\n      app,\n      systems\n    );\n    const selectedSystem = systems.find(\n      (system) => system.id === (execSystemId ?? computedExecSystem.systemId)\n    );\n\n    if (!selectedSystem?.batchLogicalQueues?.length) {\n      errors.execSystemLogicalQueue = `The selected system does not have any batch logical queues`;\n      return errors;\n    }\n\n    const queue = selectedSystem?.batchLogicalQueues?.find(\n      (queue) =>\n        queue.name === (execSystemLogicalQueue ?? computedLogicalQueue?.queue)\n    );\n    if (!queue) {\n      errors.execSystemLogicalQueue = `The specified queue does not exist on the selected execution system`;\n      return errors;\n    }\n\n    if (!!nodeCount) {\n      if (queue?.maxNodeCount && nodeCount > queue?.maxNodeCount) {\n        errors.nodeCount = `The maximum number of nodes for this queue is ${queue?.maxNodeCount}`;\n      }\n      if (queue?.minNodeCount && nodeCount < queue?.minNodeCount) {\n        errors.nodeCount = `The minimum number of nodes for this queue is ${queue?.minNodeCount}`;\n      }\n    }\n    if (!!coresPerNode) {\n      if (queue?.maxCoresPerNode && coresPerNode > queue?.maxCoresPerNode) {\n        errors.coresPerNode = `The maximum number of cores per node for this queue is ${queue?.maxCoresPerNode}`;\n      }\n      if (queue?.minCoresPerNode && coresPerNode < queue?.minCoresPerNode) {\n        errors.coresPerNode = `The minimum number of cores per node for this queue is ${queue?.minCoresPerNode}`;\n      }\n    }\n    if (!!memoryMB) {\n      if (queue?.maxMemoryMB && memoryMB > queue?.maxMemoryMB) {\n        errors.memoryMB = `The maximum amount of memory for this queue is ${queue?.maxMemoryMB} megabytes`;\n      }\n      if (queue?.minMemoryMB && memoryMB < queue?.minMemoryMB) {\n        errors.memoryMB = `The minimum amount of memory for this queue is ${queue?.minMemoryMB} megabytes`;\n      }\n    }\n    if (!!maxMinutes) {\n      if (queue?.maxMinutes && maxMinutes > queue?.maxMinutes) {\n        errors.maxMinutes = `The maximum number of minutes for a job on this queue is ${queue?.maxMinutes}`;\n      }\n      if (queue?.minMinutes && maxMinutes < queue?.minMinutes) {\n        errors.maxMinutes = `The minimum number of minutes for a job on this queue is ${queue?.minMinutes}`;\n      }\n    }\n    return errors;\n  };\n};\n\nconst generateInitialValues = ({\n  job,\n  app,\n  systems,\n}: JobLauncherProviderParams): Partial<Jobs.ReqSubmitJob> => ({\n  execSystemId: job.execSystemId,\n  execSystemLogicalQueue: job.execSystemLogicalQueue,\n  jobType: job.jobType,\n  execSystemExecDir: job.execSystemExecDir,\n  execSystemInputDir: job.execSystemInputDir,\n  execSystemOutputDir: job.execSystemOutputDir,\n  nodeCount: job.nodeCount,\n  coresPerNode: job.coresPerNode,\n  memoryMB: job.memoryMB,\n  maxMinutes: job.maxMinutes,\n  isMpi: job.isMpi,\n  mpiCmd: job.mpiCmd,\n  cmdPrefix: job.cmdPrefix,\n});\n\nconst step: JobStep = {\n  id: 'execution',\n  name: 'Execution Options',\n  render: <ExecOptions />,\n  summary: <ExecOptionsSummary />,\n  generateInitialValues,\n  validateThunk,\n  validationSchema,\n};\n\nexport default step;\n","import React, { useMemo } from 'react';\nimport { Apps, Jobs } from '@tapis/tapis-typescript';\nimport FieldWrapper from 'tapis-ui/_common/FieldWrapper';\nimport { Input } from 'reactstrap';\nimport { Button } from 'reactstrap';\nimport { useJobLauncher, StepSummaryField } from '../components';\nimport styles from './FileInputs.module.scss';\nimport fieldArrayStyles from '../FieldArray.module.scss';\nimport {\n  generateFileInputFromAppInput,\n  getIncompleteJobInputs,\n  getAppInputsIncludedByDefault,\n} from 'tapis-api/utils/jobFileInputs';\nimport { Collapse } from 'tapis-ui/_common';\nimport { FieldArray, useFormikContext, FieldArrayRenderProps } from 'formik';\nimport {\n  FormikInput,\n  FormikCheck,\n  FormikTapisFile,\n} from 'tapis-ui/_common/FieldWrapperFormik';\nimport { JobStep } from '..';\nimport { v4 as uuidv4 } from 'uuid';\nimport * as Yup from 'yup';\n\ntype FileInputFieldProps = {\n  item: Jobs.JobFileInput;\n  index: number;\n  remove: (index: number) => Jobs.JobFileInput | undefined;\n};\n\nconst upperCaseFirstLetter = (str: string) => {\n  const lower = str.toLowerCase();\n  return `${lower.slice(0, 1).toUpperCase()}${lower.slice(1)}`;\n};\n\nconst JobInputField: React.FC<FileInputFieldProps> = ({\n  item,\n  index,\n  remove,\n}) => {\n  const { app } = useJobLauncher();\n  const { name, sourceUrl } = item;\n  const inputMode: Apps.FileInputModeEnum | undefined = useMemo(\n    () =>\n      app.jobAttributes?.fileInputs?.find(\n        (appInput) => appInput.name === item.name\n      )?.inputMode ?? undefined,\n    /* eslint-disable-next-line */\n    [app.id, app.version]\n  );\n  const isRequired = inputMode === Apps.FileInputModeEnum.Required;\n  const note = `${\n    inputMode ? upperCaseFirstLetter(inputMode) : 'User Defined'\n  }`;\n\n  return (\n    <>\n      <Collapse\n        open={!sourceUrl}\n        title={name ?? 'File Input'}\n        note={note}\n        className={fieldArrayStyles.item}\n      >\n        <FormikInput\n          name={`fileInputs.${index}.name`}\n          label=\"Name\"\n          required={true}\n          description={`${\n            isRequired\n              ? 'This input is required and cannot be renamed'\n              : 'Name of this input'\n          }`}\n          disabled={isRequired}\n        />\n        <FormikTapisFile\n          name={`fileInputs.${index}.sourceUrl`}\n          label=\"Source URL\"\n          required={true}\n          description=\"Input TAPIS file as a pathname, TAPIS URI or web URL\"\n        />\n        <FormikInput\n          name={`fileInputs.${index}.targetPath`}\n          label=\"Target Path\"\n          required={true}\n          description=\"File mount path inside of running container\"\n        />\n        <FormikInput\n          name={`fileInputs.${index}.description`}\n          label=\"Description\"\n          required={false}\n          description=\"Description of this input\"\n        />\n        <FormikCheck\n          name={`fileInputs.${index}.autoMountLocal`}\n          label=\"Auto-mount Local\"\n          required={false}\n          description=\"If this is true, the source URL will be mounted from the execution system's local file system\"\n        />\n        {!isRequired && (\n          <Button onClick={() => remove(index)} size=\"sm\">\n            Remove\n          </Button>\n        )}\n      </Collapse>\n    </>\n  );\n};\n\nconst getFileInputsOfMode = (\n  app: Apps.TapisApp,\n  inputMode: Apps.FileInputModeEnum\n) =>\n  app.jobAttributes?.fileInputs?.filter(\n    (appInput) => appInput.inputMode === inputMode\n  ) ?? [];\n\nconst inputIncluded = (\n  input: Apps.AppFileInput,\n  jobInputs: Array<Jobs.JobFileInput>\n) => {\n  return jobInputs.some((jobInput) => jobInput.name === input.name);\n};\n\ntype OptionalInputProps = {\n  input: Apps.AppFileInput;\n  included: boolean;\n  onInclude: () => any;\n};\n\nconst OptionalInput: React.FC<OptionalInputProps> = ({\n  input,\n  included,\n  onInclude,\n}) => {\n  return (\n    <Collapse\n      title={`${input.name} ${included ? '(included)' : ''}`}\n      className={styles['optional-input']}\n    >\n      <div className={fieldArrayStyles.description}>\n        {input.description ?? ''}\n      </div>\n      <FieldWrapper\n        label=\"Source URL\"\n        required={true}\n        description=\"Input TAPIS file as a pathname, TAPIS URI or web URL\"\n      >\n        <Input bsSize=\"sm\" defaultValue={input.sourceUrl} disabled={true} />\n      </FieldWrapper>\n      <FieldWrapper\n        label=\"Target Path\"\n        required={true}\n        description=\"File mount path inside of running container\"\n      >\n        <Input bsSize=\"sm\" defaultValue={input.targetPath} disabled={true} />\n      </FieldWrapper>\n      <Button onClick={() => onInclude()} disabled={included} size=\"sm\">\n        Include\n      </Button>\n      {included && (\n        <div className={fieldArrayStyles.description}>\n          This optional input has already been included with your job file\n          inputs.\n        </div>\n      )}\n    </Collapse>\n  );\n};\n\nconst OptionalInputs: React.FC<{ arrayHelpers: FieldArrayRenderProps }> = ({\n  arrayHelpers,\n}) => {\n  const { app } = useJobLauncher();\n  const { values } = useFormikContext();\n\n  const optionalInputs = useMemo(\n    () => getFileInputsOfMode(app, Apps.FileInputModeEnum.Optional),\n    /* eslint-disable-next-line */\n    [app.id, app.version]\n  );\n\n  const formFileInputs =\n    (values as Partial<Jobs.ReqSubmitJob>)?.fileInputs ?? [];\n\n  return !!optionalInputs.length ? (\n    <Collapse\n      title=\"Optional File Inputs\"\n      open={true}\n      note={`${optionalInputs.length} additional files`}\n      className={fieldArrayStyles.array}\n    >\n      <div className={fieldArrayStyles.description}>\n        These File Inputs are defined in the application and can be included\n        with your job.\n      </div>\n      {optionalInputs.map((optionalInput) => {\n        const alreadyIncluded = inputIncluded(optionalInput, formFileInputs);\n        const onInclude = () => {\n          arrayHelpers.push(generateFileInputFromAppInput(optionalInput));\n        };\n        return (\n          <div\n            className={fieldArrayStyles.item}\n            key={`optional-input-${optionalInput.name}`}\n          >\n            <OptionalInput\n              input={optionalInput}\n              onInclude={onInclude}\n              included={alreadyIncluded}\n            />\n          </div>\n        );\n      })}\n    </Collapse>\n  ) : null;\n};\n\nconst FixedInput: React.FC<{ input: Apps.AppFileInput }> = ({ input }) => {\n  return (\n    <Collapse title={`${input.name}`} className={styles['optional-input']}>\n      <div className={fieldArrayStyles.description}>\n        {input.description ?? ''}\n      </div>\n      <FieldWrapper\n        label=\"Source URL\"\n        required={true}\n        description=\"Input TAPIS file as a pathname, TAPIS URI or web URL\"\n      >\n        <Input bsSize=\"sm\" defaultValue={input.sourceUrl} disabled={true} />\n      </FieldWrapper>\n      <FieldWrapper\n        label=\"Target Path\"\n        required={true}\n        description=\"File mount path inside of running container\"\n      >\n        <Input bsSize=\"sm\" defaultValue={input.targetPath} disabled={true} />\n      </FieldWrapper>\n    </Collapse>\n  );\n};\n\nconst FixedInputs: React.FC = () => {\n  const { app } = useJobLauncher();\n\n  const fixedInputs = useMemo(\n    () => getFileInputsOfMode(app, Apps.FileInputModeEnum.Fixed),\n    /* eslint-disable-next-line */\n    [app.id, app.version]\n  );\n\n  return (\n    <Collapse\n      title=\"Fixed File Inputs\"\n      open={true}\n      note={`${fixedInputs.length} additional files`}\n      className={fieldArrayStyles.array}\n    >\n      <div className={fieldArrayStyles.description}>\n        These File Inputs are defined in the application and will automatically\n        be included with your job. They cannot be removed or altered.\n      </div>\n      {fixedInputs.map((fixedInput) => (\n        <div\n          className={fieldArrayStyles.item}\n          key={`fixed-input-${fixedInput.name}`}\n        >\n          <FixedInput input={fixedInput} />\n        </div>\n      ))}\n    </Collapse>\n  );\n};\n\nconst JobInputs: React.FC<{ arrayHelpers: FieldArrayRenderProps }> = ({\n  arrayHelpers,\n}) => {\n  const { values } = useFormikContext();\n  const { app } = useJobLauncher();\n  const requiredInputs = useMemo(\n    () => getFileInputsOfMode(app, Apps.FileInputModeEnum.Required),\n    /* eslint-disable-next-line */\n    [app.id, app.version]\n  );\n  let requiredText =\n    requiredInputs.length > 0 ? `Required (${requiredInputs.length})` : '';\n  const jobInputs = (values as Partial<Jobs.ReqSubmitJob>)?.fileInputs ?? [];\n\n  return (\n    <Collapse\n      open={requiredInputs.length > 0}\n      title=\"File Inputs\"\n      note={`${jobInputs.length} items`}\n      requiredText={requiredText}\n      isCollapsable={requiredInputs.length === 0}\n      className={fieldArrayStyles.array}\n    >\n      <div className={fieldArrayStyles.description}>\n        These File Inputs will be submitted with your job.\n      </div>\n      {jobInputs.map((jobInput, index) => (\n        <JobInputField\n          key={`fileInputs.${index}`}\n          item={jobInput}\n          index={index}\n          remove={arrayHelpers.remove}\n        />\n      ))}\n      <Button onClick={() => arrayHelpers.push({})} size=\"sm\">\n        + Add File Input\n      </Button>\n    </Collapse>\n  );\n};\n\nexport const FileInputs: React.FC = () => {\n  return (\n    <div>\n      <h2>File Inputs</h2>\n      <FieldArray\n        name=\"fileInputs\"\n        render={(arrayHelpers) => {\n          return (\n            <>\n              <JobInputs arrayHelpers={arrayHelpers} />\n              <OptionalInputs arrayHelpers={arrayHelpers} />\n              <FixedInputs />\n            </>\n          );\n        }}\n      />\n    </div>\n  );\n};\n\nexport const FileInputsSummary: React.FC = () => {\n  const { job, app } = useJobLauncher();\n  const jobFileInputs = job.fileInputs ?? [];\n  const appFileInputs = app.jobAttributes?.fileInputs ?? [];\n  const missingRequiredInputs = appFileInputs.filter(\n    (appFileInput) =>\n      appFileInput.inputMode === Apps.FileInputModeEnum.Required &&\n      !jobFileInputs.some(\n        (jobFileInput) => jobFileInput.name === appFileInput.name\n      )\n  );\n  const incompleteJobInputs = getIncompleteJobInputs(\n    appFileInputs,\n    jobFileInputs\n  );\n  const includedByDefault = getAppInputsIncludedByDefault(\n    appFileInputs,\n    jobFileInputs\n  );\n  return (\n    <div key=\"file-inputs-summary\">\n      {jobFileInputs.map((jobFileInput) => {\n        const complete = !incompleteJobInputs.some(\n          (incompleteInput) => incompleteInput.name === jobFileInput.name\n        );\n        // If this job file input is complete, display its name or sourceUrl\n        const field = complete\n          ? `${jobFileInput.name}: ${jobFileInput.sourceUrl}` ??\n            jobFileInput.sourceUrl\n          : undefined;\n        const key =\n          jobFileInput.name ??\n          jobFileInput.sourceUrl ??\n          jobFileInput.targetPath;\n        // If this job file input is incomplete, display its name or sourceUrl\n        const error = !complete\n          ? `${key ?? 'A file input'} is missing required information`\n          : undefined;\n        return (\n          <StepSummaryField\n            field={field}\n            error={error}\n            key={`file-inputs-summary-${key ?? uuidv4()}`}\n          />\n        );\n      })}\n      {missingRequiredInputs.map((requiredFileInput) => (\n        <StepSummaryField\n          error={`${requiredFileInput.name} is required`}\n          key={`file-inputs-required-error-${requiredFileInput.name}`}\n        />\n      ))}\n      {includedByDefault.map((defaultInput) => (\n        <StepSummaryField\n          field={`${defaultInput.name} included by default`}\n          key={`file-inputs-default-${defaultInput.name}`}\n        />\n      ))}\n    </div>\n  );\n};\n\nconst validationSchema = Yup.object().shape({\n  fileInputs: Yup.array().of(\n    Yup.object().shape({\n      name: Yup.string().min(1).required('A fileInput name is required'),\n      sourceUrl: Yup.string().min(1).required('A sourceUrl is required'),\n      targetPath: Yup.string().min(1).required('A targetPath is required'),\n      autoMountLocal: Yup.boolean(),\n    })\n  ),\n});\n\nconst step: JobStep = {\n  id: 'fileInputs',\n  name: 'File Inputs',\n  render: <FileInputs />,\n  summary: <FileInputsSummary />,\n  validationSchema,\n  generateInitialValues: ({ job }) => ({\n    fileInputs: job.fileInputs,\n  }),\n};\n\nexport default step;\n","import React, { useMemo, useCallback } from 'react';\nimport { Apps, Files, Jobs } from '@tapis/tapis-typescript';\nimport { Input, Button, FormGroup } from 'reactstrap';\nimport { useJobLauncher, StepSummaryField } from '../components';\nimport {\n  generateFileInputArrayFromAppInput,\n  getIncompleteJobInputArrays,\n  getAppInputArraysIncludedByDefault,\n} from 'tapis-api/utils/jobFileInputArrays';\nimport { Collapse, Icon, FieldWrapper } from 'tapis-ui/_common';\nimport { useModal } from 'tapis-ui/_common/GenericModal';\nimport { FileSelectModal } from 'tapis-ui/components/files';\nimport {\n  FieldArray,\n  useFormikContext,\n  FieldArrayRenderProps,\n  Field,\n  ErrorMessage,\n  FieldProps,\n} from 'formik';\nimport {\n  FormikInput,\n  FormikTapisFileInput,\n} from 'tapis-ui/_common/FieldWrapperFormik';\nimport { v4 as uuidv4 } from 'uuid';\nimport * as Yup from 'yup';\nimport arrayStyles from './FileInputArrays.module.scss';\nimport styles from './FileInputs.module.scss';\nimport fieldArrayStyles from '../FieldArray.module.scss';\nimport formStyles from 'tapis-ui/_common/FieldWrapperFormik/FieldWrapperFormik.module.css';\nimport { JobStep } from '..';\n\nexport type FieldWrapperProps = {\n  fileInputArrayIndex: number;\n  arrayHelpers: FieldArrayRenderProps;\n};\n\nconst SourceUrlsField: React.FC<FieldWrapperProps> = ({\n  fileInputArrayIndex,\n  arrayHelpers,\n}) => {\n  const { values } = useFormikContext();\n  const sourceUrls: Array<string> = useMemo(\n    () =>\n      !!(values as Partial<Jobs.ReqSubmitJob>).fileInputArrays\n        ? (values as Partial<Jobs.ReqSubmitJob>).fileInputArrays![\n            fileInputArrayIndex\n          ].sourceUrls ?? []\n        : [],\n    [values, fileInputArrayIndex]\n  );\n  const { push } = arrayHelpers;\n  const { modal, open, close } = useModal();\n  const onSelect = useCallback(\n    (systemId: string | null, files: Array<Files.FileInfo>) => {\n      files.forEach((file) => {\n        const newSourceUrl = `tapis://${systemId ?? ''}${file.path}`;\n        if (!sourceUrls.some((sourceUrl) => sourceUrl === newSourceUrl)) {\n          push(newSourceUrl);\n        }\n      });\n    },\n    [push, sourceUrls]\n  );\n\n  return (\n    <FormGroup>\n      <div className={arrayStyles.sourceUrls}>\n        {sourceUrls.map((_, sourceUrlIndex) => {\n          const sourceUrlName = `fileInputArrays.${fileInputArrayIndex}.sourceUrls.${sourceUrlIndex}`;\n          return (\n            <div key={sourceUrlName}>\n              <Field name={sourceUrlName}>\n                {({ field }: FieldProps) => (\n                  <FormikTapisFileInput\n                    {...field}\n                    append={\n                      <Button\n                        size=\"sm\"\n                        onClick={() => arrayHelpers.remove(sourceUrlIndex)}\n                        disabled={\n                          sourceUrls.length === 1 && sourceUrlIndex === 0\n                        }\n                      >\n                        <Icon name=\"close\" />\n                      </Button>\n                    }\n                  />\n                )}\n              </Field>\n              <ErrorMessage name={sourceUrlName} className=\"form-field__help\">\n                {(message) => (\n                  <div\n                    className={`${formStyles['form-field__help']} ${styles.description}`}\n                  >\n                    {message}\n                  </div>\n                )}\n              </ErrorMessage>\n            </div>\n          );\n        })}\n      </div>\n      <div>\n        <Button size=\"sm\" onClick={() => arrayHelpers.push('')}>\n          + Add Source URL\n        </Button>\n        <Button size=\"sm\" onClick={() => open()}>\n          + Browse for Files\n        </Button>\n      </div>\n      {modal && <FileSelectModal toggle={close} onSelect={onSelect} />}\n    </FormGroup>\n  );\n};\n\ntype JobInputArrayFieldProps = {\n  item: Jobs.JobFileInputArray;\n  index: number;\n  remove: (index: number) => Jobs.JobFileInput | undefined;\n};\n\nconst upperCaseFirstLetter = (str: string) => {\n  const lower = str.toLowerCase();\n  return `${lower.slice(0, 1).toUpperCase()}${lower.slice(1)}`;\n};\n\nconst JobInputArrayField: React.FC<JobInputArrayFieldProps> = ({\n  item,\n  index,\n  remove,\n}) => {\n  const { app } = useJobLauncher();\n  const { name, sourceUrls } = item;\n  const inputMode: Apps.FileInputModeEnum | undefined = useMemo(\n    () =>\n      app.jobAttributes?.fileInputArrays?.find(\n        (appInput) => appInput.name === item.name\n      )?.inputMode ?? undefined,\n    /* eslint-disable-next-line */\n    [app.id, app.version]\n  );\n  const isRequired = inputMode === Apps.FileInputModeEnum.Required;\n  const note = `${\n    inputMode ? upperCaseFirstLetter(inputMode) : 'User Defined'\n  }`;\n  return (\n    <Collapse\n      open={!sourceUrls}\n      title={name ?? 'File Input Array'}\n      note={note}\n      className={fieldArrayStyles.item}\n    >\n      <FormikInput\n        name={`fileInputArrays.${index}.name`}\n        label=\"Name\"\n        required={true}\n        description={`${\n          isRequired\n            ? 'This input is required and cannot be renamed'\n            : 'Name of this input'\n        }`}\n        disabled={isRequired}\n      />\n      <FieldArray\n        name={`fileInputArrays.${index}.sourceUrls`}\n        render={(arrayHelpers) => (\n          <FieldWrapper\n            label=\"Source URLs\"\n            required={true}\n            description=\"Input TAPIS files as pathnames, TAPIS URIs or web URLs\"\n          >\n            <SourceUrlsField\n              fileInputArrayIndex={index}\n              arrayHelpers={arrayHelpers}\n            />\n          </FieldWrapper>\n        )}\n      />\n      <FormikInput\n        name={`fileInputArrays.${index}.targetDir`}\n        label=\"Target Directory\"\n        required={true}\n        description=\"File mount path inside of running container\"\n      />\n      <FormikInput\n        name={`fileInputArrays.${index}.description`}\n        label=\"Description\"\n        required={false}\n        description=\"Description of this input\"\n      />\n      {!isRequired && (\n        <Button onClick={() => remove(index)} size=\"sm\">\n          Remove\n        </Button>\n      )}\n    </Collapse>\n  );\n};\n\nconst getFileInputArraysOfMode = (\n  app: Apps.TapisApp,\n  inputMode: Apps.FileInputModeEnum\n) =>\n  app.jobAttributes?.fileInputArrays?.filter(\n    (appInputArray) => appInputArray.inputMode === inputMode\n  ) ?? [];\n\nconst inputArrayIncluded = (\n  input: Apps.AppFileInputArray,\n  jobInputArrays: Array<Jobs.JobFileInputArray>\n) => {\n  return jobInputArrays.some(\n    (jobInputArray) => jobInputArray.name === input.name\n  );\n};\n\ntype OptionalInputArrayProps = {\n  inputArray: Apps.AppFileInputArray;\n  included: boolean;\n  onInclude: () => any;\n};\n\nconst OptionalInputArray: React.FC<OptionalInputArrayProps> = ({\n  inputArray,\n  included,\n  onInclude,\n}) => {\n  return (\n    <Collapse\n      title={`${inputArray.name} ${included ? '(included)' : ''}`}\n      className={styles['optional-input']}\n    >\n      <div className={fieldArrayStyles.description}>\n        {inputArray.description ?? ''}\n      </div>\n      <FieldWrapper\n        label=\"Source URLs\"\n        required={true}\n        description=\"Input TAPIS files as pathnames, TAPIS URIs or web URLs\"\n      >\n        {inputArray.sourceUrls?.map((sourceUrl) => (\n          <Input bsSize=\"sm\" defaultValue={sourceUrl} disabled={true} />\n        ))}\n      </FieldWrapper>\n      <FieldWrapper\n        label=\"Target Path\"\n        required={true}\n        description=\"File mount path inside of running container\"\n      >\n        <Input\n          bsSize=\"sm\"\n          defaultValue={inputArray.targetDir}\n          disabled={true}\n        />\n      </FieldWrapper>\n      <Button onClick={() => onInclude()} disabled={included} size=\"sm\">\n        Include\n      </Button>\n      {included && (\n        <div className={fieldArrayStyles.description}>\n          This optional input array has already been included with your job file\n          inputs.\n        </div>\n      )}\n    </Collapse>\n  );\n};\n\nconst OptionalInputArrays: React.FC<{ arrayHelpers: FieldArrayRenderProps }> =\n  ({ arrayHelpers }) => {\n    const { app } = useJobLauncher();\n    const { values } = useFormikContext();\n\n    const optionalInputArrays = useMemo(\n      () => getFileInputArraysOfMode(app, Apps.FileInputModeEnum.Optional),\n      /* eslint-disable-next-line */\n      [app.id, app.version]\n    );\n\n    const formFileInputArrays =\n      (values as Partial<Jobs.ReqSubmitJob>)?.fileInputArrays ?? [];\n\n    return !!optionalInputArrays.length ? (\n      <Collapse\n        title=\"Optional File Input Arrays\"\n        open={true}\n        note={`${optionalInputArrays.length} additional files`}\n        className={fieldArrayStyles.array}\n      >\n        <div className={fieldArrayStyles.description}>\n          These File Inputs are defined in the application and can be included\n          with your job.\n        </div>\n        {optionalInputArrays.map((optionalInputArray) => {\n          const alreadyIncluded = inputArrayIncluded(\n            optionalInputArray,\n            formFileInputArrays\n          );\n          const onInclude = () => {\n            arrayHelpers.push(\n              generateFileInputArrayFromAppInput(optionalInputArray)\n            );\n          };\n          return (\n            <div\n              className={fieldArrayStyles.item}\n              key={`optional-input-array-${optionalInputArray.name}`}\n            >\n              <OptionalInputArray\n                inputArray={optionalInputArray}\n                onInclude={onInclude}\n                included={alreadyIncluded}\n              />\n            </div>\n          );\n        })}\n      </Collapse>\n    ) : null;\n  };\n\nconst FixedInputArray: React.FC<{ inputArray: Apps.AppFileInputArray }> = ({\n  inputArray,\n}) => {\n  return (\n    <Collapse title={`${inputArray.name}`} className={styles['optional-input']}>\n      <div className={fieldArrayStyles.description}>\n        {inputArray.description ?? ''}\n      </div>\n      <FieldWrapper\n        label=\"Source URLs\"\n        required={true}\n        description=\"Input TAPIS files as pathnames, TAPIS URIs or web URLs\"\n      >\n        {inputArray.sourceUrls?.map((sourceUrl, index) => (\n          <Input\n            bsSize=\"sm\"\n            defaultValue={sourceUrl}\n            disabled={true}\n            key={`fixed-input-array-${inputArray.name}-${index}`}\n          />\n        ))}\n      </FieldWrapper>\n      <FieldWrapper\n        label=\"Target Directory\"\n        required={true}\n        description=\"File mount path inside of running container\"\n      >\n        <Input\n          bsSize=\"sm\"\n          defaultValue={inputArray.targetDir}\n          disabled={true}\n        />\n      </FieldWrapper>\n    </Collapse>\n  );\n};\n\nconst FixedInputArrays: React.FC = () => {\n  const { app } = useJobLauncher();\n\n  const fixedInputArrays = useMemo(\n    () => getFileInputArraysOfMode(app, Apps.FileInputModeEnum.Fixed),\n    /* eslint-disable-next-line */\n    [app.id, app.version]\n  );\n\n  return (\n    <Collapse\n      title=\"Fixed File Input Arrays\"\n      open={true}\n      note={`${fixedInputArrays.length} additional files`}\n      className={fieldArrayStyles.array}\n    >\n      <div className={fieldArrayStyles.description}>\n        These File Inputs are defined in the application and will automatically\n        be included with your job. They cannot be removed or altered.\n      </div>\n      {fixedInputArrays.map((fixedInputArray) => (\n        <div\n          className={fieldArrayStyles.item}\n          key={`fixed-input-${fixedInputArray.name}`}\n        >\n          <FixedInputArray inputArray={fixedInputArray} />\n        </div>\n      ))}\n    </Collapse>\n  );\n};\n\nconst JobInputArrays: React.FC<{ arrayHelpers: FieldArrayRenderProps }> = ({\n  arrayHelpers,\n}) => {\n  const { values } = useFormikContext();\n  const { app } = useJobLauncher();\n  const requiredInputArrays = useMemo(\n    () => getFileInputArraysOfMode(app, Apps.FileInputModeEnum.Required),\n    /* eslint-disable-next-line */\n    [app.id, app.version]\n  );\n  let requiredText =\n    requiredInputArrays.length > 0\n      ? `Required (${requiredInputArrays.length})`\n      : '';\n  const jobInputArrays =\n    (values as Partial<Jobs.ReqSubmitJob>)?.fileInputArrays ?? [];\n\n  return (\n    <Collapse\n      open={requiredInputArrays.length > 0}\n      title=\"File Inputs Arrays\"\n      note={`${jobInputArrays.length} items`}\n      requiredText={requiredText}\n      isCollapsable={requiredInputArrays.length === 0}\n      className={fieldArrayStyles.array}\n    >\n      <div className={fieldArrayStyles.description}>\n        These File Input Arrays will be submitted with your job.\n      </div>\n      {jobInputArrays.map((jobInputArray, index) => (\n        <JobInputArrayField\n          item={jobInputArray}\n          index={index}\n          remove={arrayHelpers.remove}\n          key={`render-fileInputArrays.${index}`}\n        />\n      ))}\n      <Button onClick={() => arrayHelpers.push({ sourceUrls: [''] })} size=\"sm\">\n        + Add File Input Array\n      </Button>\n    </Collapse>\n  );\n};\n\nexport const FileInputArrays: React.FC = () => {\n  return (\n    <div>\n      <h2>File Input Arrays</h2>\n      <FieldArray\n        name=\"fileInputArrays\"\n        render={(arrayHelpers) => {\n          return (\n            <>\n              <JobInputArrays arrayHelpers={arrayHelpers} />\n              <OptionalInputArrays arrayHelpers={arrayHelpers} />\n              <FixedInputArrays />\n            </>\n          );\n        }}\n      />\n    </div>\n  );\n};\n\nexport const FileInputArraysSummary: React.FC = () => {\n  const { job, app } = useJobLauncher();\n  const jobFileInputArrays = job.fileInputArrays ?? [];\n  const appFileInputArrays = app.jobAttributes?.fileInputArrays ?? [];\n  const missingRequiredInputArrays = appFileInputArrays.filter(\n    (appFileInputArray) =>\n      appFileInputArray.inputMode === Apps.FileInputModeEnum.Required &&\n      !jobFileInputArrays.some(\n        (jobFileInputArray) => jobFileInputArray.name === appFileInputArray.name\n      )\n  );\n  const incompleteJobInputArrays = getIncompleteJobInputArrays(\n    appFileInputArrays,\n    jobFileInputArrays\n  );\n  const includedByDefault = getAppInputArraysIncludedByDefault(\n    appFileInputArrays,\n    jobFileInputArrays\n  );\n  return (\n    <div key=\"file-input-arrays-summary\">\n      {jobFileInputArrays.map((jobFileInputArray) => {\n        const complete = !incompleteJobInputArrays.some(\n          (incompleteInput) => incompleteInput.name === jobFileInputArray.name\n        );\n\n        // If this job file input is complete, display its name or sourceUrl\n        const key =\n          jobFileInputArray.name ??\n          (jobFileInputArray.sourceUrls\n            ? `${jobFileInputArray.sourceUrls[0]}...`\n            : undefined) ??\n          jobFileInputArray.targetDir;\n        // If this job file input is incomplete, display its name or sourceUrl\n        const error = !complete\n          ? `${key ?? 'A file input array'} is missing required information`\n          : undefined;\n\n        return (\n          <StepSummaryField\n            field={`${key} (${\n              jobFileInputArray.sourceUrls?.length ?? '0'\n            } files)`}\n            error={error}\n            key={`file-input-arrays-summary-${key ?? uuidv4()}`}\n          />\n        );\n      })}\n      {missingRequiredInputArrays.map((requiredFileInput) => (\n        <StepSummaryField\n          error={`${requiredFileInput.name} is required`}\n          key={`file-inputs-arrays-required-error-${requiredFileInput.name}`}\n        />\n      ))}\n      {includedByDefault.map((defaultInput) => (\n        <StepSummaryField\n          field={`${defaultInput.name} included by default`}\n          key={`file-input-arrays-default-${defaultInput.name}`}\n        />\n      ))}\n    </div>\n  );\n};\n\nconst validationSchema = Yup.object().shape({\n  fileInputArrays: Yup.array().of(\n    Yup.object().shape({\n      name: Yup.string().min(1).required('A fileInputArray name is required'),\n      sourceUrls: Yup.array(\n        Yup.string().min(1).required('A sourceUrl is required')\n      ).min(1),\n      targetDir: Yup.string().min(1).required('A targetDir is required'),\n    })\n  ),\n});\n\nconst step: JobStep = {\n  id: 'fileInputArrays',\n  name: 'File Input Arrays',\n  render: <FileInputArrays />,\n  summary: <FileInputArraysSummary />,\n  validationSchema,\n  generateInitialValues: ({ job }) => ({\n    fileInputArrays: job.fileInputArrays,\n  }),\n};\n\nexport default step;\n","import React, { useMemo } from 'react';\nimport { Apps, Jobs } from '@tapis/tapis-typescript';\nimport { Button } from 'reactstrap';\nimport { useJobLauncher, StepSummaryField } from '../components';\nimport fieldArrayStyles from '../FieldArray.module.scss';\nimport { Collapse } from 'tapis-ui/_common';\nimport { FieldArray, useField, FieldArrayRenderProps } from 'formik';\nimport { FormikInput } from 'tapis-ui/_common';\nimport { FormikCheck } from 'tapis-ui/_common/FieldWrapperFormik';\nimport { getArgMode } from 'tapis-api/utils/jobArgs';\nimport { JobStep } from '..';\nimport * as Yup from 'yup';\n\ntype ArgFieldProps = {\n  index: number;\n  name: string;\n  argType: string;\n  arrayHelpers: FieldArrayRenderProps;\n  inputMode?: Apps.ArgInputModeEnum;\n};\n\nexport const ArgField: React.FC<ArgFieldProps> = ({\n  index,\n  name,\n  argType,\n  arrayHelpers,\n  inputMode,\n}) => {\n  const [field] = useField(`${name}.name`);\n  const argName = useMemo(() => field.value, [field]);\n  return (\n    <Collapse\n      key={`${argType}.${index}`}\n      title={!!argName && argName.length ? argName : argType}\n      className={fieldArrayStyles.item}\n    >\n      <FormikInput\n        name={`${name}.name`}\n        required={true}\n        label=\"Name\"\n        disabled={!!inputMode}\n        description={`The name for this ${argType} ${\n          !!inputMode\n            ? 'is defined in the application and cannot be changed'\n            : ''\n        }`}\n      />\n      <FormikInput\n        name={`${name}.arg`}\n        required={true}\n        label=\"Value\"\n        disabled={inputMode === Apps.ArgInputModeEnum.Fixed}\n        description={`A value for this ${argType}`}\n      />\n      <FormikInput\n        name={`${name}.description`}\n        required={false}\n        label=\"Description\"\n        disabled={inputMode === Apps.ArgInputModeEnum.Fixed}\n        description={`A description for this ${argType}`}\n      />\n      <FormikCheck\n        name={`${name}.include`}\n        required={false}\n        label=\"Include\"\n        disabled={\n          inputMode === Apps.ArgInputModeEnum.Fixed ||\n          inputMode === Apps.ArgInputModeEnum.Required\n        }\n        description={\n          inputMode === Apps.ArgInputModeEnum.Fixed ||\n          inputMode === Apps.ArgInputModeEnum.Required\n            ? `This ${argType} must be included`\n            : `If checked, this ${argType} will be included`\n        }\n      />\n      <Button size=\"sm\" onClick={() => arrayHelpers.remove(index)}>\n        Remove\n      </Button>\n    </Collapse>\n  );\n};\n\ntype ArgsFieldArrayProps = {\n  argSpecs: Array<Apps.AppArgSpec>;\n  name: string;\n  argType: string;\n};\n\nexport const ArgsFieldArray: React.FC<ArgsFieldArrayProps> = ({\n  argSpecs,\n  name,\n  argType,\n}) => {\n  const [field] = useField(name);\n  const args = useMemo(\n    () => (field.value as Array<Jobs.JobArgSpec>) ?? [],\n    [field]\n  );\n  return (\n    <FieldArray\n      name={name}\n      render={(arrayHelpers) => (\n        <div className={fieldArrayStyles.array}>\n          <h3>{`${argType}s`}</h3>\n          <div className={fieldArrayStyles['array-group']}>\n            {args.map((arg, index) => {\n              const inputMode = arg.name\n                ? getArgMode(arg.name, argSpecs)\n                : undefined;\n              return (\n                <ArgField\n                  index={index}\n                  arrayHelpers={arrayHelpers}\n                  name={`${name}.${index}`}\n                  argType={argType}\n                  inputMode={inputMode}\n                />\n              );\n            })}\n          </div>\n          <Button\n            onClick={() =>\n              arrayHelpers.push({\n                include: true,\n              })\n            }\n            size=\"sm\"\n          >\n            + Add\n          </Button>\n        </div>\n      )}\n    />\n  );\n};\n\nexport const argsSchema = Yup.array(\n  Yup.object({\n    name: Yup.string(),\n    description: Yup.string(),\n    include: Yup.boolean(),\n    arg: Yup.string().min(1).required('The argument cannot be blank'),\n  })\n);\n\nexport const Args: React.FC = () => {\n  const { app } = useJobLauncher();\n\n  const appArgSpecs = useMemo(\n    () => app.jobAttributes?.parameterSet?.appArgs ?? [],\n    [app]\n  );\n  const containerArgSpecs = useMemo(\n    () => app.jobAttributes?.parameterSet?.containerArgs ?? [],\n    [app]\n  );\n\n  return (\n    <div>\n      <h2>Arguments</h2>\n      <ArgsFieldArray\n        name=\"parameterSet.appArgs\"\n        argType=\"App Argument\"\n        argSpecs={appArgSpecs}\n      />\n      <ArgsFieldArray\n        name=\"parameterSet.containerArgs\"\n        argType=\"Container Argument\"\n        argSpecs={containerArgSpecs}\n      />\n    </div>\n  );\n};\n\nexport const assembleArgSpec = (argSpecs: Array<Jobs.JobArgSpec>) =>\n  argSpecs.reduce(\n    (previous, current) =>\n      `${previous}${current.include ? ` ${current.arg}` : ``}`,\n    ''\n  );\n\nexport const ArgsSummary: React.FC = () => {\n  const { job } = useJobLauncher();\n  const appArgs = job.parameterSet?.appArgs ?? [];\n  const containerArgs = job.parameterSet?.containerArgs ?? [];\n  return (\n    <div>\n      <StepSummaryField\n        field={`App: ${assembleArgSpec(appArgs)}`}\n        key={`app-args-summary`}\n      />\n      <StepSummaryField\n        field={`Container: ${assembleArgSpec(containerArgs)}`}\n        key={`container-args-summary`}\n      />\n    </div>\n  );\n};\n\nconst validationSchema = Yup.object().shape({\n  parameterSet: Yup.object({\n    appArgs: argsSchema,\n    containerArgs: argsSchema,\n    scheduleOptions: argsSchema,\n  }),\n});\n\nconst step: JobStep = {\n  id: 'args',\n  name: 'Arguments',\n  render: <Args />,\n  summary: <ArgsSummary />,\n  validationSchema,\n  generateInitialValues: ({ job }) => ({\n    parameterSet: {\n      appArgs: job.parameterSet?.appArgs,\n      containerArgs: job.parameterSet?.containerArgs,\n      schedulerOptions: job.parameterSet?.schedulerOptions,\n    },\n  }),\n};\n\nexport default step;\n","import React, { useMemo } from 'react';\nimport { Jobs } from '@tapis/tapis-typescript';\nimport { Button } from 'reactstrap';\nimport { useJobLauncher, StepSummaryField } from '../components';\nimport fieldArrayStyles from '../FieldArray.module.scss';\nimport { Collapse } from 'tapis-ui/_common';\nimport {\n  FieldArray,\n  useFormikContext,\n  useField,\n  FieldArrayRenderProps,\n} from 'formik';\nimport { FormikInput } from 'tapis-ui/_common';\nimport { JobStep } from '..';\nimport * as Yup from 'yup';\n\ntype EnvVariableFieldProps = {\n  index: number;\n  arrayHelpers: FieldArrayRenderProps;\n};\n\nconst EnvVariableField: React.FC<EnvVariableFieldProps> = ({\n  index,\n  arrayHelpers,\n}) => {\n  const [field] = useField(`parameterSet.envVariables.${index}.key`);\n  const key = useMemo(() => field.value, [field]);\n  return (\n    <Collapse\n      key={`envVariables.${index}`}\n      title={!!key && key.length ? key : 'Environment Variable'}\n      className={fieldArrayStyles.item}\n    >\n      <FormikInput\n        name={`parameterSet.envVariables.${index}.key`}\n        required={true}\n        label=\"Key\"\n        description=\"The key name for this environment variable\"\n      />\n      <FormikInput\n        name={`parameterSet.envVariables.${index}.value`}\n        required={true}\n        label=\"Value\"\n        description=\"A value for this environment variable\"\n      />\n      <Button size=\"sm\" onClick={() => arrayHelpers.remove(index)}>\n        Remove\n      </Button>\n    </Collapse>\n  );\n};\n\nconst EnvVariablesRender: React.FC = () => {\n  const { values } = useFormikContext();\n  const envVariables =\n    (values as Partial<Jobs.ReqSubmitJob>).parameterSet?.envVariables ?? [];\n  return (\n    <FieldArray\n      name={'parameterSet.envVariables'}\n      render={(arrayHelpers) => (\n        <div>\n          <div className={fieldArrayStyles['array-group']}>\n            {envVariables.map((envVariable, index) => (\n              <EnvVariableField index={index} arrayHelpers={arrayHelpers} />\n            ))}\n          </div>\n          <Button\n            onClick={() => arrayHelpers.push({ key: '', value: '' })}\n            size=\"sm\"\n          >\n            + Add\n          </Button>\n        </div>\n      )}\n    />\n  );\n};\n\nexport const EnvVariables: React.FC = () => {\n  return (\n    <div>\n      <h2>Environment Variables</h2>\n      <EnvVariablesRender />\n    </div>\n  );\n};\n\nexport const EnvVariablesSummary: React.FC = () => {\n  const { job } = useJobLauncher();\n  const envVariables = job.parameterSet?.envVariables ?? [];\n  return (\n    <div>\n      {envVariables.map((envVariable) => (\n        <StepSummaryField\n          field={`${envVariable.key} : ${envVariable.value}`}\n          key={`env-variables-summary-${envVariable.key}`}\n        />\n      ))}\n    </div>\n  );\n};\n\nconst validationSchema = Yup.object().shape({\n  parameterSet: Yup.object({\n    envVariables: Yup.array(\n      Yup.object({\n        key: Yup.string()\n          .min(1)\n          .required('A key name is required for this environment variable'),\n        value: Yup.string().required(\n          'A value is required for this environment variable'\n        ),\n      })\n    ),\n  }),\n});\n\nconst step: JobStep = {\n  id: 'envVariables',\n  name: 'Environment Variables',\n  render: <EnvVariables />,\n  summary: <EnvVariablesSummary />,\n  validationSchema,\n  generateInitialValues: ({ job }) => ({\n    parameterSet: {\n      envVariables: job.parameterSet?.envVariables,\n    },\n  }),\n};\n\nexport default step;\n","import React, { useCallback, useMemo } from 'react';\nimport { Jobs } from '@tapis/tapis-typescript';\nimport { Button } from 'reactstrap';\nimport { useJobLauncher, StepSummaryField } from '../components';\nimport fieldArrayStyles from '../FieldArray.module.scss';\nimport { Collapse } from 'tapis-ui/_common';\nimport { FieldArray, useField, useFormikContext } from 'formik';\nimport { getArgMode } from 'tapis-api/utils/jobArgs';\nimport { ArgField, argsSchema, assembleArgSpec } from './AppArgs';\nimport { DescriptionList } from 'tapis-ui/_common';\nimport * as Yup from 'yup';\nimport styles from './SchedulerOptions.module.scss';\nimport { JobStep } from '..';\n\nconst findSchedulerProfile = (values: Partial<Jobs.ReqSubmitJob>) => {\n  // Look at current schedulerOptions\n  const argSpecs = values.parameterSet?.schedulerOptions ?? [];\n  // Find any scheduler option that has --tapis-profile set\n  const profile = argSpecs.find((argSpec) =>\n    argSpec.arg?.includes('--tapis-profile')\n  );\n  if (profile) {\n    // Return the name of the profile after --tapis-profile\n    const args = profile.arg?.split(' ');\n    if (args && args.length >= 2) {\n      return args[1];\n    }\n  }\n  return undefined;\n};\n\nconst SchedulerProfiles: React.FC = () => {\n  const { schedulerProfiles } = useJobLauncher();\n  const { values, setValues } = useFormikContext();\n  const setSchedulerProfile = useCallback(\n    (newProfile: Jobs.JobArgSpec) => {\n      const argSpecs =\n        (values as Partial<Jobs.ReqSubmitJob>).parameterSet?.schedulerOptions ??\n        [];\n      setValues({\n        parameterSet: {\n          schedulerOptions: [\n            newProfile,\n            ...argSpecs.filter(\n              (existing) => !existing.arg?.includes('--tapis-profile')\n            ),\n          ],\n        },\n      });\n    },\n    [values, setValues]\n  );\n  const currentProfile = useMemo(\n    () => findSchedulerProfile(values as Partial<Jobs.ReqSubmitJob>),\n    [values]\n  );\n\n  return (\n    <div className={fieldArrayStyles.array}>\n      <h3>Scheduler Profiles</h3>\n      {schedulerProfiles.map(\n        ({ name, description, hiddenOptions, moduleLoads, owner, tenant }) => (\n          <Collapse\n            key={`scheduler-profiles-${name}`}\n            className={fieldArrayStyles['array-group']}\n            title={`${name} ${name === currentProfile ? '(selected)' : ''}`}\n          >\n            <div className={styles['scheduler-option']}>\n              <div>{description}</div>\n              <DescriptionList\n                data={{\n                  moduleLoads,\n                  hiddenOptions,\n                  owner,\n                  tenant,\n                }}\n                className={styles['scheduler-option-list']}\n              />\n            </div>\n            <Button\n              size=\"sm\"\n              onClick={() =>\n                setSchedulerProfile({\n                  name: `${name} Scheduler Profile`,\n                  description,\n                  include: true,\n                  arg: `--tapis-profile ${name}`,\n                })\n              }\n              disabled={name === currentProfile}\n            >\n              Use This Profile\n            </Button>\n          </Collapse>\n        )\n      )}\n    </div>\n  );\n};\n\nconst SchedulerOptionArray: React.FC = () => {\n  const { app } = useJobLauncher();\n  const [field] = useField('parameterSet.schedulerOptions');\n  const args = useMemo(\n    () => (field.value as Array<Jobs.JobArgSpec>) ?? [],\n    [field]\n  );\n\n  const schedulerOptionSpecs = useMemo(\n    () => app.jobAttributes?.parameterSet?.schedulerOptions ?? [],\n    [app]\n  );\n  return (\n    <FieldArray\n      name=\"parameterSet.schedulerOptions\"\n      render={(arrayHelpers) => (\n        <>\n          <div className={fieldArrayStyles.array}>\n            <h3>{`Scheduler Arguments`}</h3>\n            <div className={fieldArrayStyles['array-group']}>\n              {args.map((arg, index) => {\n                const inputMode = arg.name\n                  ? getArgMode(arg.name, schedulerOptionSpecs)\n                  : undefined;\n                return (\n                  <ArgField\n                    index={index}\n                    arrayHelpers={arrayHelpers}\n                    name={`parameterSet.schedulerOptions.${index}`}\n                    argType={'scheduler option'}\n                    inputMode={inputMode}\n                  />\n                );\n              })}\n            </div>\n            <Button\n              onClick={() =>\n                arrayHelpers.push({\n                  name: '',\n                  description: '',\n                  include: true,\n                  arg: '',\n                })\n              }\n              size=\"sm\"\n            >\n              + Add\n            </Button>\n          </div>\n          <SchedulerProfiles />\n        </>\n      )}\n    />\n  );\n};\n\nexport const SchedulerOptions: React.FC = () => {\n  return (\n    <div>\n      <h2>Scheduler Options</h2>\n      <SchedulerOptionArray />\n    </div>\n  );\n};\n\nexport const SchedulerOptionsSummary: React.FC = () => {\n  const { job } = useJobLauncher();\n  const schedulerOptions = job.parameterSet?.schedulerOptions ?? [];\n  return (\n    <div>\n      <StepSummaryField\n        field={`Scheduler Profile: ${\n          findSchedulerProfile(job) ?? 'none selected'\n        }`}\n        key={`scheduler-profile-summary`}\n      />\n      <StepSummaryField\n        field={`Scheduler Args: ${assembleArgSpec(schedulerOptions)}`}\n        key={`scheduler-args-summary`}\n      />\n    </div>\n  );\n};\n\nconst validationSchema = Yup.object().shape({\n  parameterSet: Yup.object({\n    scheduleOptions: argsSchema,\n  }),\n});\n\nconst step: JobStep = {\n  id: 'schedulerOptions',\n  name: 'Scheduler Options',\n  render: <SchedulerOptions />,\n  summary: <SchedulerOptionsSummary />,\n  validationSchema,\n  generateInitialValues: ({ job }) => ({\n    parameterSet: {\n      schedulerOptions: job.parameterSet?.schedulerOptions,\n    },\n  }),\n};\n\nexport default step;\n","import React, { useMemo } from 'react';\nimport { Jobs } from '@tapis/tapis-typescript';\nimport FieldWrapper from 'tapis-ui/_common/FieldWrapper';\nimport { Input } from 'reactstrap';\nimport { Button } from 'reactstrap';\nimport { useJobLauncher, StepSummaryField } from '../components';\nimport fieldArrayStyles from '../FieldArray.module.scss';\nimport { Collapse } from 'tapis-ui/_common';\nimport {\n  FieldArray,\n  useFormikContext,\n  Field,\n  ErrorMessage,\n  FieldProps,\n} from 'formik';\nimport { InputGroup, InputGroupAddon } from 'reactstrap';\nimport {\n  FormikCheck,\n  FormikTapisFile,\n  FormikSelect,\n} from 'tapis-ui/_common/FieldWrapperFormik';\nimport * as Yup from 'yup';\nimport formStyles from 'tapis-ui/_common/FieldWrapperFormik/FieldWrapperFormik.module.css';\nimport { JobStep } from '..';\n\ntype ArrayGroupProps = {\n  values: Array<string>;\n  name: string;\n  label: string;\n  description: string;\n};\n\nconst ArrayGroup: React.FC<ArrayGroupProps> = ({\n  values,\n  name,\n  label,\n  description,\n}) => {\n  return (\n    <FieldArray\n      name={name}\n      render={(arrayHelpers) => (\n        <Collapse\n          open={values.length > 0}\n          title={label}\n          note={`${values.length} items`}\n          isCollapsable={true}\n          className={fieldArrayStyles.array}\n        >\n          <FieldWrapper\n            label={label}\n            required={false}\n            description={description}\n          >\n            <div className={fieldArrayStyles['array-group']}>\n              {values.map((value, index) => (\n                <>\n                  <Field name={`${name}.${index}`}>\n                    {({ field }: FieldProps) => (\n                      <InputGroup>\n                        <Input {...field} bsSize=\"sm\" />\n                        <InputGroupAddon addonType=\"append\">\n                          <Button\n                            size=\"sm\"\n                            onClick={() => arrayHelpers.remove(index)}\n                          >\n                            Remove\n                          </Button>\n                        </InputGroupAddon>\n                      </InputGroup>\n                    )}\n                  </Field>\n                  <ErrorMessage\n                    name={`${name}.${index}`}\n                    className=\"form-field__help\"\n                  >\n                    {(message) => (\n                      <div\n                        className={`${formStyles['form-field__help']} ${fieldArrayStyles.description}`}\n                      >\n                        {message}\n                      </div>\n                    )}\n                  </ErrorMessage>\n                </>\n              ))}\n            </div>\n            <Button onClick={() => arrayHelpers.push('')} size=\"sm\">\n              + Add\n            </Button>\n          </FieldWrapper>\n        </Collapse>\n      )}\n    />\n  );\n};\n\nconst ArchiveFilterRender: React.FC = () => {\n  const { values } = useFormikContext();\n  const includes =\n    (values as Partial<Jobs.ReqSubmitJob>).parameterSet?.archiveFilter\n      ?.includes ?? [];\n  const excludes =\n    (values as Partial<Jobs.ReqSubmitJob>).parameterSet?.archiveFilter\n      ?.excludes ?? [];\n  return (\n    <div>\n      <h3>Archive Filters</h3>\n      <ArrayGroup\n        name=\"parameterSet.archiveFilter.includes\"\n        label=\"Includes\"\n        description=\"File patterns specified here will be included during job archiving\"\n        values={includes}\n      />\n      <ArrayGroup\n        name=\"parameterSet.archiveFilter.excludes\"\n        label=\"Excludes\"\n        description=\"File patterns specified here will be excluded from job archiving\"\n        values={excludes}\n      />\n      <FormikCheck\n        name=\"parameterSet.archiveFilter.includeLaunchFiles\"\n        label=\"Include Launch Files\"\n        description=\"If checked, launch files will be included during job archiving\"\n        required={false}\n      />\n    </div>\n  );\n};\n\nconst ArchiveOptions: React.FC = () => {\n  const { systems } = useJobLauncher();\n  const { values } = useFormikContext();\n  const archiveSystemId = useMemo(\n    () => (values as Partial<Jobs.ReqSubmitJob>).archiveSystemId,\n    [values]\n  );\n  return (\n    <>\n      <div className={fieldArrayStyles.item}>\n        <FormikSelect\n          name=\"archiveSystemId\"\n          label=\"Archive System ID\"\n          description=\"If selected, this system ID will be used for job archiving instead of the execution system default\"\n          required={false}\n        >\n          <option value={undefined}></option>\n          {systems.map((system) => (\n            <option\n              value={system.id}\n              key={`archive-system-select-${system.id}`}\n            >\n              {system.id}\n            </option>\n          ))}\n        </FormikSelect>\n        <FormikTapisFile\n          allowSystemChange={false}\n          systemId={archiveSystemId}\n          disabled={!archiveSystemId}\n          name=\"archiveSystemDir\"\n          label=\"Archive System Directory\"\n          description=\"The directory on the selected system in which to place archived files\"\n          required={false}\n          files={false}\n          dirs={true}\n        />\n        <FormikCheck\n          name=\"archiveOnAppError\"\n          label=\"Archive On App Error\"\n          description=\"If checked, the job will be archived even if there is an execution error\"\n          required={false}\n        />\n      </div>\n    </>\n  );\n};\n\nexport const Archive: React.FC = () => {\n  return (\n    <div>\n      <h2>Archive Options</h2>\n      <ArchiveOptions />\n      <ArchiveFilterRender />\n    </div>\n  );\n};\n\nexport const ArchiveSummary: React.FC = () => {\n  const { job } = useJobLauncher();\n  const includes = job.parameterSet?.archiveFilter?.includes ?? [];\n  const excludes = job.parameterSet?.archiveFilter?.excludes ?? [];\n  const { archiveSystemId, archiveSystemDir, archiveOnAppError } = job;\n  return (\n    <div>\n      <StepSummaryField\n        field={`Archive System ID: ${archiveSystemId ?? 'default'}`}\n        key={`archive-system-id-summary`}\n      />\n      <StepSummaryField\n        field={`Archive System Directory: ${archiveSystemDir ?? 'default'}`}\n        key={`archive-system-dir-summary`}\n      />\n      <StepSummaryField\n        field={`Archive On App Error: ${archiveOnAppError}`}\n        key={`archive-on-app-error-summary`}\n      />\n      <StepSummaryField\n        field={`Includes: ${includes.length}`}\n        key={`archive-filter-includes-summary`}\n      />\n      <StepSummaryField\n        field={`Excludes: ${excludes.length}`}\n        key={`archive-filter-excludes-summary`}\n      />\n    </div>\n  );\n};\n\nconst validationSchema = Yup.object().shape({\n  archiveOnAppError: Yup.boolean(),\n  archiveSystemId: Yup.string(),\n  archiveSystemDir: Yup.string(),\n  parameterSet: Yup.object({\n    archiveFilter: Yup.object({\n      includes: Yup.array(\n        Yup.string()\n          .min(1)\n          .required('A pattern must be specified for this include')\n      ),\n      excludes: Yup.array(\n        Yup.string()\n          .min(1)\n          .required('A pattern must be specified for this exclude')\n      ),\n      includeLaunchFiles: Yup.boolean(),\n    }),\n  }),\n});\n\nconst step: JobStep = {\n  id: 'archiving',\n  name: 'Archiving',\n  render: <Archive />,\n  summary: <ArchiveSummary />,\n  validationSchema,\n  generateInitialValues: ({ job }) => ({\n    archiveOnAppError: job.archiveOnAppError,\n    archiveSystemId: job.archiveSystemId,\n    archiveSystemDir: job.archiveSystemDir,\n    parameterSet: {\n      archiveFilter: job.parameterSet?.archiveFilter,\n    },\n  }),\n};\n\nexport default step;\n","import { Jobs } from '@tapis/tapis-typescript';\n\nexport const jobRequiredFieldsComplete = (job: Partial<Jobs.ReqSubmitJob>) => {\n  return !!job.name && !!job.appId && !!job.appVersion;\n};\n","import { useCallback } from 'react';\nimport { useJobLauncher } from '../components';\nimport { JSONDisplay } from 'tapis-ui/_common';\nimport { fileInputsComplete } from 'tapis-api/utils/jobFileInputs';\nimport { fileInputArraysComplete } from 'tapis-api/utils/jobFileInputArrays';\nimport { jobRequiredFieldsComplete } from 'tapis-api/utils/jobRequiredFields';\nimport {\n  validateExecSystem,\n  ValidateExecSystemResult,\n} from 'tapis-api/utils/jobExecSystem';\nimport { StepSummaryField } from '../components';\nimport { SubmitWrapper } from 'tapis-ui/_wrappers';\nimport { Jobs } from '@tapis/tapis-typescript';\nimport { useSubmit } from 'tapis-hooks/jobs';\nimport { JobStep } from '..';\nimport { Button } from 'reactstrap';\nimport arrayStyles from '../FieldArray.module.scss';\n\nexport const JobSubmit: React.FC = () => {\n  const { job, app, systems } = useJobLauncher();\n  const isComplete =\n    validateExecSystem(job, app, systems) ===\n      ValidateExecSystemResult.Complete &&\n    jobRequiredFieldsComplete(job) &&\n    fileInputsComplete(app, job.fileInputs ?? []) &&\n    fileInputArraysComplete(app, job.fileInputArrays ?? []);\n\n  const { isLoading, error, isSuccess, submit, data } = useSubmit(\n    app.id!,\n    app.version!\n  );\n  const onSubmit = useCallback(() => {\n    submit(job as Jobs.ReqSubmitJob);\n  }, [submit, job]);\n  const summary = isComplete\n    ? isSuccess\n      ? `Successfully submitted job ${data?.result?.uuid ?? ''}`\n      : `The job is ready for submission`\n    : undefined;\n  return (\n    <div>\n      <h2>Job Submission</h2>\n      <div className={arrayStyles.array}>\n        <StepSummaryField\n          field={summary}\n          error=\"All required fields must be completed before the job can be submitted\"\n        />\n        <SubmitWrapper\n          isLoading={isLoading}\n          error={error}\n          success={isSuccess ? ` ` : ''}\n          reverse={true}\n        >\n          <Button\n            color=\"primary\"\n            disabled={isLoading || !isComplete || isSuccess}\n            onClick={onSubmit}\n          >\n            Submit Job\n          </Button>\n        </SubmitWrapper>\n      </div>\n      <div>\n        This is a preview of the json job submission data. You may copy it for\n        future reference.\n      </div>\n      <JSONDisplay json={job} />\n    </div>\n  );\n};\n\nexport const JobSubmitSummary: React.FC = () => {\n  const { app, job, systems } = useJobLauncher();\n  const isComplete =\n    validateExecSystem(job, app, systems) &&\n    jobRequiredFieldsComplete(job) &&\n    fileInputsComplete(app, job.fileInputs ?? []) &&\n    fileInputArraysComplete(app, job.fileInputArrays ?? []);\n\n  return (\n    <div>\n      <StepSummaryField\n        field={isComplete ? 'The job is ready for submission' : undefined}\n        error=\"All required fields must be completed before the job can be submitted\"\n        key=\"job-submit-summary\"\n      />\n    </div>\n  );\n};\n\nconst step: JobStep = {\n  id: 'jobSubmit',\n  name: 'Job Submission',\n  render: <JobSubmit />,\n  summary: <JobSubmitSummary />,\n  validationSchema: {},\n  generateInitialValues: () => ({}),\n};\n\nexport default step;\n","import JobStart from './JobStart';\nimport ExecOptions from './ExecOptions';\nimport FileInputs from './FileInputs';\nimport FileInputArrays from './FileInputArrays';\nimport AppArgs from './AppArgs';\nimport EnvVariables from './EnvVariables';\nimport SchedulerOptions from './SchedulerOptions';\nimport Archive from './Archive';\nimport JobSubmit from './JobSubmit';\n\nconst jobSteps = [\n  JobStart,\n  ExecOptions,\n  FileInputs,\n  FileInputArrays,\n  AppArgs,\n  EnvVariables,\n  SchedulerOptions,\n  Archive,\n  JobSubmit,\n];\n\nexport default jobSteps;\n","import React, { useCallback, useMemo } from 'react';\nimport { WizardStep } from 'tapis-ui/_wrappers/Wizard';\nimport { QueryWrapper, Wizard } from 'tapis-ui/_wrappers';\nimport { Apps, Jobs } from '@tapis/tapis-typescript';\nimport { useDetail as useAppDetail } from 'tapis-hooks/apps';\nimport generateJobDefaults from 'tapis-api/utils/jobDefaults';\nimport {\n  useList as useSystemsList,\n  useSchedulerProfiles,\n} from 'tapis-hooks/systems';\nimport { useJobLauncher, JobLauncherProvider } from './components';\nimport { JobStep } from '.';\nimport jobSteps from './steps';\nimport { Systems } from '@tapis/tapis-typescript';\nimport { ListTypeEnum } from '@tapis/tapis-typescript-systems';\n\ntype JobLauncherWizardProps = {\n  appId: string;\n  appVersion: string;\n};\n\nexport const defaultParams: Systems.GetSystemsRequest = {\n  select: 'allAttributes',\n  listType: ListTypeEnum.All,\n};\n\nexport const JobLauncherWizardRender: React.FC<{ jobSteps: Array<JobStep> }> =\n  ({ jobSteps }) => {\n    const { add, job, app, systems } = useJobLauncher();\n\n    const formSubmit = useCallback(\n      (value: Partial<Jobs.ReqSubmitJob>) => {\n        if (value.jobType === Apps.JobTypeEnum.Fork) {\n          value.execSystemLogicalQueue = undefined;\n        }\n        if (value.isMpi) {\n          value.cmdPrefix = undefined;\n        } else {\n          value.mpiCmd = undefined;\n        }\n        if (value.parameterSet) {\n          value.parameterSet = {\n            ...job.parameterSet,\n            ...value.parameterSet,\n          };\n        }\n        add(value);\n      },\n      [add, job]\n    );\n\n    // Map Array of JobSteps into an array of WizardSteps\n    const steps: Array<WizardStep<Jobs.ReqSubmitJob>> = useMemo(() => {\n      return jobSteps.map((jobStep) => {\n        const { generateInitialValues, validateThunk, ...stepProps } = jobStep;\n        return {\n          initialValues: generateInitialValues({ job, app, systems }),\n          // generate a validation function from the JobStep's validateThunk, given the current hook values\n          validate: validateThunk\n            ? validateThunk({ job, app, systems })\n            : undefined,\n          ...stepProps,\n        };\n      });\n    }, [app, job, systems, jobSteps]);\n\n    return (\n      <Wizard\n        steps={steps}\n        memo={`${app.id}${app.version}`}\n        formSubmit={formSubmit}\n      />\n    );\n  };\n\nconst JobLauncherWizard: React.FC<JobLauncherWizardProps> = ({\n  appId,\n  appVersion,\n}) => {\n  const { data, isLoading, error } = useAppDetail(\n    { appId, appVersion },\n    { refetchOnWindowFocus: false }\n  );\n  const {\n    data: systemsData,\n    isLoading: systemsIsLoading,\n    error: systemsError,\n  } = useSystemsList(defaultParams, { refetchOnWindowFocus: false });\n  const {\n    data: schedulerProfilesData,\n    isLoading: schedulerProfilesIsLoading,\n    error: schedulerProfilesError,\n  } = useSchedulerProfiles({ refetchOnWindowFocus: false });\n  const app = data?.result;\n  const systems = useMemo(() => systemsData?.result ?? [], [systemsData]);\n  const schedulerProfiles = useMemo(\n    () => schedulerProfilesData?.result ?? [],\n    [schedulerProfilesData]\n  );\n  const defaultValues = useMemo(\n    () => generateJobDefaults({ app, systems }),\n    [app, systems]\n  );\n\n  return (\n    <QueryWrapper\n      isLoading={isLoading || systemsIsLoading || schedulerProfilesIsLoading}\n      error={error || systemsError || schedulerProfilesError}\n    >\n      {app && (\n        <JobLauncherProvider\n          value={{ app, systems, defaultValues, schedulerProfiles }}\n        >\n          <JobLauncherWizardRender jobSteps={jobSteps} />\n        </JobLauncherProvider>\n      )}\n    </QueryWrapper>\n  );\n};\n\nexport default JobLauncherWizard;\n","import React from 'react';\nimport { JobLauncher } from 'tapis-ui/components/jobs';\nimport { PageLayout, LayoutHeader } from 'tapis-ui/_common';\n\nconst Layout: React.FC<{ appId: string; appVersion: string }> = ({\n  appId,\n  appVersion,\n}) => {\n  const header = <LayoutHeader type={'sub-header'}>Job Launcher</LayoutHeader>;\n\n  const body = (\n    <div style={{ flex: 1 }}>\n      <JobLauncher appId={appId} appVersion={appVersion} />\n    </div>\n  );\n\n  return <PageLayout top={header} right={body} />;\n};\n\nexport default React.memo(Layout);\n","import React from 'react';\nimport {\n  Route,\n  useRouteMatch,\n  RouteComponentProps,\n  Switch,\n} from 'react-router-dom';\nimport JobLauncher from '../JobLauncher';\nimport { SectionMessage } from 'tapis-ui/_common';\n\nconst Router: React.FC = () => {\n  const { path } = useRouteMatch();\n  return (\n    <Switch>\n      <Route path={`${path}`} exact>\n        <SectionMessage type=\"info\">\n          Select an app from the list.\n        </SectionMessage>\n      </Route>\n\n      <Route\n        path={`${path}/:appId/:appVersion`}\n        render={({\n          match: {\n            params: { appVersion, appId },\n          },\n        }: RouteComponentProps<{\n          appId: string;\n          appVersion: string;\n        }>) => <JobLauncher appId={appId} appVersion={appVersion} />}\n      />\n    </Switch>\n  );\n};\n\nexport default Router;\n","import React from 'react';\nimport { AppsNav } from '../_components';\nimport {\n  PageLayout,\n  LayoutBody,\n  LayoutHeader,\n  LayoutNavWrapper,\n} from 'tapis-ui/_common';\n\nimport { Router } from '../_Router';\n\nconst Layout: React.FC = () => {\n  const header = (\n    <LayoutHeader>\n      <div>Apps</div>\n    </LayoutHeader>\n  );\n\n  const sidebar = (\n    <LayoutNavWrapper>\n      <AppsNav />\n    </LayoutNavWrapper>\n  );\n\n  const body = (\n    <LayoutBody>\n      <Router />\n    </LayoutBody>\n  );\n\n  return <PageLayout top={header} left={sidebar} right={body} />;\n};\n\nexport default Layout;\n","import Login from './Login';\n\nexport default Login;\n","import React from 'react';\nimport { Button } from 'reactstrap';\nimport { useLogin } from 'tapis-hooks/authenticator';\nimport { useTapisConfig } from 'tapis-hooks/context';\nimport { FormikInput } from 'tapis-ui/_common';\nimport { SubmitWrapper } from 'tapis-ui/_wrappers';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\n\nconst Login: React.FC = () => {\n  const { login, isLoading, error } = useLogin();\n  const { accessToken } = useTapisConfig();\n\n  const onSubmit = ({\n    username,\n    password,\n  }: {\n    username: string;\n    password: string;\n  }) => login(username, password);\n\n  const loginSchema = Yup.object({\n    username: Yup.string().required(),\n    password: Yup.string().required(),\n  });\n\n  const initialValues = {\n    username: '',\n    password: '',\n  };\n\n  return (\n    <div>\n    <Formik\n      initialValues={initialValues}\n      validationSchema={loginSchema}\n      onSubmit={onSubmit}\n    >\n      <Form>\n        <FormikInput\n          name=\"username\"\n          label=\"Username\"\n          required={true}\n          description=\"Your TAPIS username\"\n        />\n        <FormikInput\n          name=\"password\"\n          label=\"Password\"\n          required={true}\n          description=\"Your TAPIS password\"\n          type=\"password\"\n        />\n        <SubmitWrapper\n          isLoading={isLoading}\n          error={error}\n          success={accessToken && 'Successfully logged in'}\n        >\n          <Button\n            type=\"submit\"\n            className=\"btn btn-primary\"\n            disabled={isLoading || accessToken != null}\n          >\n            Log In\n          </Button>\n        </SubmitWrapper>\n      </Form>\n    </Formik>\n    <Button\n      onClick={() => {window.location.replace('https://scoped.tapis.io/v3/oauth2/authorize?client_id=scoped&redirect_uri=https%3A%2F%2Fjaeestee.github.io%2Fscoped-tapis-ui%2F%23%2Fcallback&response_type=token')}}\n      className=\"btn btn-primary\"\n    >\n      Log In with OAuth2\n    </Button>\n  </div>\n  );\n};\n\nexport default Login;\n","import OAuthLogin from './OAuthLogin';\n\nexport default OAuthLogin;\n","import React, { useState } from 'react';\nimport { Button } from 'reactstrap';\nimport { useLocation } from 'react-router-dom';\nimport { useOAuthLogin } from 'tapis-hooks/authenticator';\nimport { useTapisConfig } from 'tapis-hooks/context';\nimport { FormikInput } from 'tapis-ui/_common';\nimport { SubmitWrapper } from 'tapis-ui/_wrappers';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\n\nconst OAuthLogin: React.FC = () => {\n  const { oAuthLogin, isLoading, error } = useOAuthLogin();\n  const { accessToken, setAccessToken, basePath } = useTapisConfig();\n\n  const onSubmit = ({\n    code,\n  }: {\n    code: string;\n  }) => {oAuthLogin(code)};\n\n  const queryString = window.location.href;\n\n  const access_token = queryString.substring(queryString.indexOf('access_token=') + 13, queryString.lastIndexOf('&state'));\n  useState(() => {setAccessToken({access_token})})\n  setAccessToken({access_token})\n\n  \n  const loginSchema = Yup.object({\n    code: Yup.string().required(),\n  });\n\n\n  const initialValues = {\n    code: queryString.substring(queryString.indexOf('access_token=') + 13, queryString.lastIndexOf('&state')),\n  };\n\n  // const code = queryString.substring(queryString.indexOf('code=') + 5, queryString.lastIndexOf('&state'))\n  // const tokenLink = `https://scoped.tapis.io/v3/oauth2/token?grant_type=authorization_code&redirect_uri=https%3A%2F%2Fjaeestee.github.io%2Fscoped-tapis-ui%2F%23%2Fcallback&code=` + code\n  \n  return (\n    <div>\n      \n      <Formik\n      initialValues={initialValues}\n      validationSchema={loginSchema}\n      onSubmit={onSubmit}\n      >\n        <Form>\n        <SubmitWrapper\n          isLoading={isLoading}\n          error={error}\n          success={accessToken && 'Successfully logged in'}\n        >\n          <Button\n            type=\"submit\"\n            className=\"btn btn-primary\"\n            disabled={isLoading || accessToken != null}\n          >\n            Authorize\n          </Button>\n          <Button\n            onClick={() => {window.location.replace('https://jaeestee.github.io/scoped-tapis-ui/#/')}}\n            className=\"btn btn-primary\"\n          >\n              DASHBOARD\n          </Button>\n        </SubmitWrapper>\n        </Form>\n      </Formik>\n      <div>\n        {queryString.substring(queryString.indexOf('access_token=') + 13, queryString.lastIndexOf('&state'))}\n      </div>  \n    </div>\n  );\n};\n\nexport default OAuthLogin;\n","import React from 'react';\nimport { Redirect, useLocation } from 'react-router-dom';\nimport { Location } from 'history';\nimport { Login as TapisLogin } from '../_components';\nimport { SectionHeader } from 'tapis-ui/_common';\nimport { useTapisConfig } from 'tapis-hooks';\n\nconst Layout: React.FC = () => {\n  const { accessToken } = useTapisConfig();\n  let location = useLocation<{ from: Location }>();\n  let { from } = location.state || { from: { pathname: '/' } };\n\n  if (accessToken?.access_token) {\n    return <Redirect to={from} />;\n  }\n\n  return (\n    <>\n      <SectionHeader>Login</SectionHeader>\n      <div className=\"container\">\n        <TapisLogin />\n      </div>\n    </>\n  );\n};\n\nexport default Layout;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { SectionHeader, LoadingSpinner, Icon } from 'tapis-ui/_common';\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  CardFooter,\n  CardText,\n} from 'reactstrap';\nimport { useTapisConfig } from 'tapis-hooks';\nimport { useList as useSystemsList } from 'tapis-hooks/systems';\nimport { useList as useJobsList } from 'tapis-hooks/jobs';\nimport { useList as useAppsList } from 'tapis-hooks/apps';\nimport styles from './Dashboard.module.scss';\nimport './Dashboard.scss';\nimport { ListTypeEnum } from '@tapis/tapis-typescript-systems';\n\ntype DashboardCardProps = {\n  icon: string;\n  link: string;\n  counter: string;\n  name: string;\n  text: string;\n  loading: boolean;\n};\n\nconst DashboardCard: React.FC<DashboardCardProps> = ({\n  icon,\n  link,\n  counter,\n  name,\n  text,\n  loading,\n}) => {\n  return (\n    <Card className={styles.card}>\n      <CardHeader>\n        <div className={styles['card-header']}>\n          <div>\n            <Icon name={icon} className=\"dashboard__card-icon\" />\n          </div>\n          <div>{name}</div>\n        </div>\n      </CardHeader>\n      <CardBody>\n        <CardTitle tag=\"h5\">\n          {loading ? (\n            <LoadingSpinner placement=\"inline\" />\n          ) : (\n            <div>{counter}</div>\n          )}\n        </CardTitle>\n        <CardText>{text}</CardText>\n      </CardBody>\n      <CardFooter className={styles['card-footer']}>\n        <Link to={link}>Go to {name}</Link>\n        <Icon name=\"push-right\" />\n      </CardFooter>\n    </Card>\n  );\n};\n\nconst Dashboard: React.FC = () => {\n  const { accessToken, claims } = useTapisConfig();\n  const systems = useSystemsList({ listType: ListTypeEnum.All });\n  const jobs = useJobsList({});\n  const apps = useAppsList({\n    select: 'jobAttributes,version',\n    listType: ListTypeEnum.All,\n  });\n\n  return (\n    <div>\n      <SectionHeader className=\"dashboard__section-header\">\n        Dashboard for {claims['tapis/tenant_id']?.toUpperCase()}\n      </SectionHeader>\n      <div className={styles.cards}>\n        {accessToken ? (\n          <>\n            <Link\n              to=\"/systems\"\n              style={{ color: 'black', textDecoration: 'none' }}\n            >\n              <DashboardCard\n                icon=\"data-files\"\n                name=\"Systems\"\n                text=\"View TAPIS systems\"\n                link=\"/systems\"\n                counter={`${systems?.data?.result?.length} systems`}\n                loading={systems?.isLoading}\n              />\n            </Link>\n            <Link\n              to=\"/files\"\n              style={{ color: 'black', textDecoration: 'none' }}\n            >\n              <DashboardCard\n                icon=\"folder\"\n                name=\"Files\"\n                text=\"Access files available on TAPIS systems\"\n                link=\"/files\"\n                counter={`Files available on ${systems?.data?.result?.length} systems`}\n                loading={systems?.isLoading}\n              />\n            </Link>\n            <Link to=\"/apps\" style={{ color: 'black', textDecoration: 'none' }}>\n              <DashboardCard\n                icon=\"applications\"\n                name=\"Applications\"\n                text=\"View SCOPED applications and launch jobs\"\n                link=\"/apps\"\n                counter={`${apps?.data?.result?.length} apps`}\n                loading={apps?.isLoading}\n              />\n            </Link>\n            <Link to=\"/jobs\" style={{ color: 'black', textDecoration: 'none' }}>\n              <DashboardCard\n                icon=\"jobs\"\n                name=\"Jobs\"\n                text=\"View status and details for previously launched SCOPED jobs\"\n                link=\"/jobs\"\n                counter={`${jobs?.data?.result?.length} jobs`}\n                loading={jobs?.isLoading}\n              />\n            </Link>\n          </>\n        ) : (\n          <Link to=\"/login\" style={{ color: 'black', textDecoration: 'none' }}>\n            <Card>\n              <CardHeader>\n                <div className={styles['card-header']}>\n                  <div>\n                    <Icon name=\"user\" className=\"dashboard__card-icon\" />\n                  </div>\n                  <div>You are not logged in</div>\n                </div>\n              </CardHeader>\n              <CardBody>\n                <CardTitle>Please log in to use SCOPED</CardTitle>\n              </CardBody>\n              <CardFooter className={styles['card-footer']}>\n                <Link to=\"/login\">Proceed to login</Link>\n                <Icon name=\"push-right\" />\n              </CardFooter>\n            </Card>\n          </Link>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n","import JobsNav from './JobsNav';\n\nexport default JobsNav;\n","import React from 'react';\nimport { useRouteMatch } from 'react-router-dom';\nimport { useList } from 'tapis-hooks/jobs';\nimport { Jobs } from '@tapis/tapis-typescript';\nimport { Navbar, NavItem } from 'tapis-ui/_wrappers/Navbar';\nimport { QueryWrapper } from 'tapis-ui/_wrappers';\n\nconst JobsNav: React.FC = () => {\n  const { data, isLoading, error } = useList();\n  const { url } = useRouteMatch();\n  const jobsList: Array<Jobs.JobListDTO> = data?.result ?? [];\n\n  return (\n    <QueryWrapper isLoading={isLoading} error={error}>\n      <Navbar>\n        {jobsList.length ? (\n          jobsList.map((job: Jobs.JobListDTO) => (\n            <NavItem to={`${url}/${job.uuid}`} icon=\"jobs\" key={job.uuid}>\n              {`${job.name} - (${job.status})`}\n            </NavItem>\n          ))\n        ) : (\n          <i>No jobs found</i>\n        )}\n      </Navbar>\n    </QueryWrapper>\n  );\n};\n\nexport default JobsNav;\n","import React from 'react';\nimport { JobDetail } from 'tapis-ui/components/jobs';\nimport { PageLayout, LayoutHeader } from 'tapis-ui/_common';\n\ninterface JobDetailProps {\n  jobUuid: string;\n}\n\nconst Layout: React.FC<JobDetailProps> = ({ jobUuid }) => {\n  const header = <LayoutHeader type={'sub-header'}>Job Details</LayoutHeader>;\n\n  const body = (\n    <div style={{ flex: 1 }}>\n      <JobDetail jobUuid={jobUuid}></JobDetail>\n    </div>\n  );\n  return <PageLayout top={header} right={body}></PageLayout>;\n};\n\nexport default Layout;\n","import React from 'react';\nimport {\n  Route,\n  useRouteMatch,\n  RouteComponentProps,\n  Switch,\n} from 'react-router-dom';\nimport JobDetail from '../JobDetail';\nimport { SectionMessage } from 'tapis-ui/_common';\n\nconst Router: React.FC = () => {\n  const { path } = useRouteMatch();\n\n  return (\n    <Switch>\n      <Route path={`${path}`} exact>\n        <SectionMessage type=\"info\">Select a job from the list.</SectionMessage>\n      </Route>\n\n      <Route\n        path={`${path}/:jobUuid`}\n        render={({\n          match: {\n            params: { jobUuid },\n          },\n        }: RouteComponentProps<{ jobUuid: string }>) => (\n          <JobDetail jobUuid={jobUuid} />\n        )}\n      />\n    </Switch>\n  );\n};\n\nexport default Router;\n","import React from 'react';\nimport { JobsNav } from '../_components';\nimport { Router } from '../_Router';\nimport {\n  PageLayout,\n  LayoutBody,\n  LayoutHeader,\n  LayoutNavWrapper,\n} from 'tapis-ui/_common';\n\nconst Layout: React.FC = () => {\n  const header = (\n    <LayoutHeader>\n      <div>Jobs</div>\n    </LayoutHeader>\n  );\n\n  const sidebar = (\n    <LayoutNavWrapper>\n      <JobsNav />\n    </LayoutNavWrapper>\n  );\n\n  const body = (\n    <LayoutBody>\n      <Router />\n    </LayoutBody>\n  );\n\n  return <PageLayout top={header} left={sidebar} right={body} />;\n};\n\nexport default Layout;\n","import SystemsNav from './SystemsNav';\n\nexport default SystemsNav;\n","import React from 'react';\nimport { useRouteMatch } from 'react-router-dom';\nimport { useList } from 'tapis-hooks/systems';\nimport { Systems } from '@tapis/tapis-typescript';\nimport { Navbar, NavItem } from 'tapis-ui/_wrappers/Navbar';\nimport { QueryWrapper } from 'tapis-ui/_wrappers';\n\nconst SystemsNav: React.FC = () => {\n  const { url } = useRouteMatch();\n  // Get a systems listing with default request params\n  const { data, isLoading, error } = useList();\n  const definitions: Array<Systems.TapisSystem> = data?.result ?? [];\n\n  return (\n    <QueryWrapper isLoading={isLoading} error={error}>\n      <Navbar>\n        {definitions.length ? (\n          definitions.map((system) => (\n            <NavItem\n              to={`${url}/${system.id}`}\n              icon=\"data-files\"\n              key={system.id}\n            >\n              {`${system.id} (${system.host})`}\n            </NavItem>\n          ))\n        ) : (\n          <i>No systems found</i>\n        )}\n      </Navbar>\n    </QueryWrapper>\n  );\n};\n\nexport default SystemsNav;\n","import { FormikInput, Collapse } from 'tapis-ui/_common';\nimport styles from '../../CreateSystemModal.module.scss';\nimport { Systems } from '@tapis/tapis-typescript';\nimport { Button } from 'reactstrap';\nimport { FieldArray, useFormikContext, FieldArrayRenderProps } from 'formik';\nimport { LogicalQueue } from '@tapis/tapis-typescript-systems';\n\ntype BatchLQFieldProps = {\n  item: LogicalQueue;\n  index: number;\n  remove: (index: number) => Systems.ReqPostSystem | undefined;\n};\n\nconst BatchLogicalQueuesField: React.FC<BatchLQFieldProps> = ({\n  item,\n  index,\n  remove,\n}) => {\n  return (\n    <>\n      <Collapse\n        open={!item}\n        title={`Batch Logical Queue`}\n        className={styles['item']}\n      >\n        <FormikInput\n          name={`batchLogicalQueues.${index}.name`}\n          label=\"Name\"\n          required={true}\n          description={`Name`}\n          aria-label=\"Input\"\n        />\n        <FormikInput\n          name={`batchLogicalQueues.${index}.hpcQueueName`}\n          label=\"HPC Queue Name\"\n          required={true}\n          description={`HPC queue name`}\n          aria-label=\"Input\"\n        />\n        <FormikInput\n          name={`batchLogicalQueues.${index}.maxJobs`}\n          label=\"Max Jobs\"\n          type=\"number\"\n          required={false}\n          description={`Maximum number of jobs`}\n          aria-label=\"Input\"\n        />\n        <FormikInput\n          name={`batchLogicalQueues.${index}.maxJobsPerUser`}\n          label=\"Max Jobs Per User\"\n          type=\"number\"\n          required={false}\n          description={`Maximum number of jobs per user`}\n          aria-label=\"Input\"\n        />\n        <FormikInput\n          name={`batchLogicalQueues.${index}.minNodeCount`}\n          label=\"Min Node Count\"\n          type=\"number\"\n          required={false}\n          description={`Minimum number of nodes`}\n          aria-label=\"Input\"\n        />\n        <FormikInput\n          name={`batchLogicalQueues.${index}.maxNodeCount`}\n          label=\"Max Node Count\"\n          type=\"number\"\n          required={false}\n          description={`Maximum number of nodes`}\n          aria-label=\"Input\"\n        />\n        <FormikInput\n          name={`batchLogicalQueues.${index}.minCoresPerNode`}\n          label=\"Min Cores Per Node\"\n          type=\"number\"\n          required={false}\n          description={`Minimum number of cores per node`}\n          aria-label=\"Input\"\n        />\n        <FormikInput\n          name={`batchLogicalQueues.${index}.maxCoresPerNode`}\n          label=\"Max Cores Per Node\"\n          type=\"number\"\n          required={false}\n          description={`Maximum number of cores per node`}\n          aria-label=\"Input\"\n        />\n        <FormikInput\n          name={`batchLogicalQueues.${index}.minMemoryMB`}\n          label=\"Min Memory MB\"\n          type=\"number\"\n          required={false}\n          description={`Minimum memory in MB`}\n          aria-label=\"Input\"\n        />\n        <FormikInput\n          name={`batchLogicalQueues.${index}.maxMemoryMB`}\n          label=\"Max Memory MB\"\n          type=\"number\"\n          required={false}\n          description={`Maximum memory in MB`}\n          aria-label=\"Input\"\n        />\n        <FormikInput\n          name={`batchLogicalQueues.${index}.minMinutes`}\n          label=\"Min Minutes\"\n          type=\"number\"\n          required={false}\n          description={`Minimum number of minutes`}\n          aria-label=\"Input\"\n        />\n        <FormikInput\n          name={`batchLogicalQueues.${index}.maxMinutes`}\n          label=\"Max Minutes\"\n          type=\"number\"\n          required={false}\n          description={`Maximum number of minutes`}\n          aria-label=\"Input\"\n        />\n        <Button onClick={() => remove(index)} size=\"sm\">\n          Remove\n        </Button>\n      </Collapse>\n    </>\n  );\n};\n\nconst BatchLogicalQueuesInputs: React.FC<{\n  arrayHelpers: FieldArrayRenderProps;\n}> = ({ arrayHelpers }) => {\n  const { values } = useFormikContext();\n\n  const batchLogicalQueues =\n    (values as Partial<Systems.ReqPostSystem>)?.batchLogicalQueues ?? [];\n\n  return (\n    <Collapse\n      open={batchLogicalQueues.length > 0}\n      title=\"Batch Logical Queues\"\n      note={`${batchLogicalQueues.length} items`}\n      className={styles['array']}\n    >\n      {batchLogicalQueues.map((batchLogicalQueuesInput, index) => (\n        <BatchLogicalQueuesField\n          key={`batchLogicalQueues.${index}`}\n          item={batchLogicalQueuesInput}\n          index={index}\n          remove={arrayHelpers.remove}\n        />\n      ))}\n      <Button onClick={() => arrayHelpers.push({})} size=\"sm\">\n        + Add Logical Queue\n      </Button>\n    </Collapse>\n  );\n};\n\nexport const BatchLogicalQueuesSettings: React.FC = () => {\n  return (\n    <div>\n      <FieldArray\n        name=\"batchLogicalQueues\"\n        render={(arrayHelpers) => {\n          return (\n            <>\n              <BatchLogicalQueuesInputs arrayHelpers={arrayHelpers} />\n            </>\n          );\n        }}\n      />\n    </div>\n  );\n};\n\nexport default BatchLogicalQueuesSettings;\n","import { useFormikContext } from 'formik';\nimport { FormikInput, Collapse } from 'tapis-ui/_common';\nimport { FormikSelect, FormikCheck } from 'tapis-ui/_common/FieldWrapperFormik';\nimport {\n  SchedulerTypeEnum,\n  SystemTypeEnum,\n} from '@tapis/tapis-typescript-systems';\nimport styles from '../../CreateSystemModal.module.scss';\nimport { useMemo } from 'react';\nimport { Systems } from '@tapis/tapis-typescript';\nimport BatchLogicalQueuesSettings from './BatchLogicalQueuesSettings';\n\n//Array that is used in the drop-down menus\nconst schedulerTypes = Object.values(SchedulerTypeEnum);\n\nconst BatchSettings: React.FC = () => {\n  //used when trying to read the current value of a parameter\n  const { values } = useFormikContext();\n\n  //reading the canRunBatch at its current state\n  const canRunBatch = useMemo(\n    () => (values as Partial<Systems.ReqPostSystem>).canRunBatch,\n    [values]\n  );\n  //reading if the systemType is Linux at its current state\n  const isLinux = useMemo(\n    () =>\n      (values as Partial<Systems.ReqPostSystem>).systemType ===\n      SystemTypeEnum.Linux,\n    [values]\n  );\n\n  return (\n    <div>\n      {isLinux ? (\n        <Collapse title=\"Batch Settings\" className={styles['array']}>\n          <FormikCheck\n            name=\"canRunBatch\"\n            required={false}\n            label=\"Can Run Batch\"\n            description={'Decides if the system can run batch'}\n          />\n          {canRunBatch ? (\n            <div>\n              <FormikSelect\n                name=\"batchScheduler\"\n                description=\"Batch scheduler for the system\"\n                label=\"Batch Scheduler\"\n                required={false}\n                data-testid=\"batchScheduler\"\n              >\n                <option disabled value=\"\">\n                  Select a batch scheduler\n                </option>\n                {schedulerTypes.map((values) => {\n                  return <option>{values}</option>;\n                })}\n              </FormikSelect>\n              <FormikInput\n                name=\"batchSchedulerProfile\"\n                label=\"Batch Scheduler Profile\"\n                required={false}\n                description={`Batch scheduler profile`}\n                aria-label=\"Input\"\n              />\n              <FormikInput\n                name=\"batchDefaultLogicalQueue\"\n                label=\"Batch Default Logical Queue\"\n                required={false}\n                description={`Batch default logical queue`}\n                aria-label=\"Input\"\n              />\n              <BatchLogicalQueuesSettings />\n            </div>\n          ) : null}\n        </Collapse>\n      ) : null}\n    </div>\n  );\n};\n\nexport default BatchSettings;\n","import { FormikInput, Collapse } from 'tapis-ui/_common';\nimport { FormikCheck } from 'tapis-ui/_common/FieldWrapperFormik';\nimport { useMemo } from 'react';\nimport { Systems } from '@tapis/tapis-typescript';\nimport { useFormikContext } from 'formik';\nimport styles from '../CreateSystemModal.module.scss';\n\nconst ProxySettings: React.FC = () => {\n  //used when trying to read the current value of a parameter\n  const { values } = useFormikContext();\n\n  //reading the useProxy at its current state\n  const useProxy = useMemo(\n    () => (values as Partial<Systems.ReqPostSystem>).useProxy,\n    [values]\n  );\n\n  return (\n    <Collapse title=\"Proxy Settings\" className={styles['array']}>\n      <FormikCheck\n        name=\"useProxy\"\n        required={false}\n        label=\"Use Proxy\"\n        description={'Decides if the system can use proxy'}\n      />\n      {useProxy ? (\n        <div>\n          <FormikInput\n            name=\"proxyHost\"\n            label=\"Proxy Host\"\n            required={false}\n            description={`Host of the proxy`}\n            aria-label=\"Input\"\n          />\n          <FormikInput\n            name=\"proxyPort\"\n            label=\"Proxy Port\"\n            type=\"number\"\n            required={false}\n            description={`Port of the proxy`}\n            aria-label=\"Input\"\n          />\n        </div>\n      ) : null}\n    </Collapse>\n  );\n};\n\nexport default ProxySettings;\n","import { FormikInput, Collapse } from 'tapis-ui/_common';\nimport { FormikCheck } from 'tapis-ui/_common/FieldWrapperFormik';\nimport { useMemo } from 'react';\nimport { Systems } from '@tapis/tapis-typescript';\nimport { useFormikContext } from 'formik';\nimport styles from '../CreateSystemModal.module.scss';\n\nconst DtnSettings: React.FC = () => {\n  //used when trying to read the current value of a parameter\n  const { values } = useFormikContext();\n\n  //reading the isDtn at its current state\n  const isDtn = useMemo(\n    () => (values as Partial<Systems.ReqPostSystem>).isDtn,\n    [values]\n  );\n  //reading the canExec at its current state\n  const canExec = useMemo(\n    () => (values as Partial<Systems.ReqPostSystem>).canExec,\n    [values]\n  );\n\n  return (\n    <div>\n      {!canExec ? (\n        <Collapse title=\"DTN Settings\" className={styles['array']}>\n          <FormikCheck\n            name=\"isDtn\"\n            required={false}\n            label=\"Is DTN\"\n            description={'Decides if the system is a delay-tolerant network'}\n          />\n          {isDtn ? (\n            <div>\n              <FormikInput\n                name=\"dtnSystemId\"\n                label=\"DTN System ID\"\n                required={false}\n                description={`DTN system id`}\n                aria-label=\"Input\"\n              />\n              <FormikInput\n                name=\"dtnMountPoint\"\n                label=\"DTN Mount Point\"\n                required={false}\n                description={`DTN mount point`}\n                aria-label=\"Input\"\n              />\n              <FormikInput\n                name=\"dtnMountSourcePath\"\n                label=\"DTN Mount Source Path\"\n                required={false}\n                description={`DTN mount source path`}\n                aria-label=\"Input\"\n              />\n            </div>\n          ) : null}\n        </Collapse>\n      ) : null}\n    </div>\n  );\n};\n\nexport default DtnSettings;\n","import { FormikInput, Collapse } from 'tapis-ui/_common';\nimport { FormikCheck } from 'tapis-ui/_common/FieldWrapperFormik';\nimport styles from '../CreateSystemModal.module.scss';\n\nconst CmdSettings: React.FC = () => {\n  return (\n    <Collapse title=\"CMD Settings\" className={styles['array']}>\n      <FormikCheck\n        name=\"enableCmdPrefix\"\n        required={false}\n        label=\"Enable CMD Prefix\"\n        description={'Enables the cmd prefix'}\n      />\n      <FormikInput\n        name=\"mpiCmd\"\n        label=\"MPI CMD\"\n        required={false}\n        description={`Mpi cmd`}\n        aria-label=\"Input\"\n      />\n    </Collapse>\n  );\n};\n\nexport default CmdSettings;\n","import { FormikInput, Collapse } from 'tapis-ui/_common';\nimport styles from '../CreateSystemModal.module.scss';\nimport { Systems } from '@tapis/tapis-typescript';\nimport { Button } from 'reactstrap';\nimport { FieldArray, useFormikContext, FieldArrayRenderProps } from 'formik';\n\ntype TagsFieldProps = {\n  item: string;\n  index: number;\n  remove: (index: number) => Systems.ReqPostSystem | undefined;\n};\nconst TagsField: React.FC<TagsFieldProps> = ({ item, index, remove }) => {\n  return (\n    <>\n      <Collapse open={!item} title={`Tag`} className={styles['item']}>\n        <FormikInput\n          name={`tags[${index}]`}\n          label=\"Tag\"\n          required={true}\n          description=\"Tag for the system\"\n        />\n        <Button onClick={() => remove(index)} size=\"sm\">\n          Remove\n        </Button>\n      </Collapse>\n    </>\n  );\n};\n\nconst TagsInputs: React.FC<{ arrayHelpers: FieldArrayRenderProps }> = ({\n  arrayHelpers,\n}) => {\n  const { values } = useFormikContext();\n\n  const tags = (values as Partial<Systems.ReqPostSystem>)?.tags ?? [];\n\n  return (\n    <Collapse\n      open={tags.length > 0}\n      title=\"Tags\"\n      note={`${tags.length} items`}\n      className={styles['array']}\n    >\n      {tags.map((tagInput, index) => (\n        <TagsField\n          key={`tags[${index}]`}\n          item={tagInput}\n          index={index}\n          remove={arrayHelpers.remove}\n        />\n      ))}\n      <Button onClick={() => arrayHelpers.push({})} size=\"sm\">\n        + Add Tag\n      </Button>\n    </Collapse>\n  );\n};\n\nexport const TagsSettings: React.FC = () => {\n  return (\n    <div>\n      <FieldArray\n        name=\"tags\"\n        render={(arrayHelpers) => {\n          return (\n            <>\n              <TagsInputs arrayHelpers={arrayHelpers} />\n            </>\n          );\n        }}\n      />\n    </div>\n  );\n};\n\nexport default TagsSettings;\n","import { FormikInput, Collapse } from 'tapis-ui/_common';\nimport styles from '../../CreateSystemModal.module.scss';\nimport { Systems } from '@tapis/tapis-typescript';\nimport { Button } from 'reactstrap';\nimport { FieldArray, useFormikContext, FieldArrayRenderProps } from 'formik';\nimport { KeyValuePair } from '@tapis/tapis-typescript-systems';\n\ntype JobEnvVariablesFieldProps = {\n  item: KeyValuePair;\n  index: number;\n  remove: (index: number) => Systems.ReqPostSystem | undefined;\n};\n\nconst JobEnvVariablesField: React.FC<JobEnvVariablesFieldProps> = ({\n  item,\n  index,\n  remove,\n}) => {\n  return (\n    <>\n      <Collapse\n        open={!item}\n        title={`Job Environment Variable`}\n        className={styles['item']}\n      >\n        <FormikInput\n          name={`jobEnvVariables.${index}.key`}\n          label=\"Key\"\n          required={true}\n          description={`Key`}\n          aria-label=\"Input\"\n        />\n        <FormikInput\n          name={`jobEnvVariables.${index}.value`}\n          label=\"Value\"\n          required={false}\n          description={`Value`}\n          aria-label=\"Input\"\n        />\n        <FormikInput\n          name={`jobEnvVariables.${index}.description`}\n          label=\"Description\"\n          required={false}\n          description={`Description`}\n          aria-label=\"Input\"\n        />\n        <Button onClick={() => remove(index)} size=\"sm\">\n          Remove\n        </Button>\n      </Collapse>\n    </>\n  );\n};\n\nconst JobEnvVariablesInputs: React.FC<{ arrayHelpers: FieldArrayRenderProps }> =\n  ({ arrayHelpers }) => {\n    const { values } = useFormikContext();\n\n    const jobEnvVariables =\n      (values as Partial<Systems.ReqPostSystem>)?.jobEnvVariables ?? [];\n\n    return (\n      <Collapse\n        open={jobEnvVariables.length > 0}\n        title=\"Job Environment Variables\"\n        note={`${jobEnvVariables.length} items`}\n        className={styles['array']}\n      >\n        {jobEnvVariables.map((jobEnvVariablesInput, index) => (\n          <JobEnvVariablesField\n            key={`jobEnvVariables.${index}`}\n            item={jobEnvVariablesInput}\n            index={index}\n            remove={arrayHelpers.remove}\n          />\n        ))}\n        <Button onClick={() => arrayHelpers.push({})} size=\"sm\">\n          + Add Job Environment Variable\n        </Button>\n      </Collapse>\n    );\n  };\n\nexport const JobEnvVariablesSettings: React.FC = () => {\n  return (\n    <div>\n      <FieldArray\n        name=\"jobEnvVariables\"\n        render={(arrayHelpers) => {\n          return (\n            <>\n              <JobEnvVariablesInputs arrayHelpers={arrayHelpers} />\n            </>\n          );\n        }}\n      />\n    </div>\n  );\n};\n\nexport default JobEnvVariablesSettings;\n","import { FormikInput, Collapse } from 'tapis-ui/_common';\nimport { FormikSelect } from 'tapis-ui/_common/FieldWrapperFormik';\nimport styles from '../../CreateSystemModal.module.scss';\nimport { Systems } from '@tapis/tapis-typescript';\nimport { Button } from 'reactstrap';\nimport { FieldArray, useFormikContext, FieldArrayRenderProps } from 'formik';\nimport {\n  Capability,\n  CategoryEnum,\n  DatatypeEnum,\n} from '@tapis/tapis-typescript-systems';\n\nconst categories = Object.values(CategoryEnum);\nconst datatypes = Object.values(DatatypeEnum);\n\ntype JobCapabilitiesFieldProps = {\n  item: Capability;\n  index: number;\n  remove: (index: number) => Systems.ReqPostSystem | undefined;\n};\n\nconst JobCapabilitiesField: React.FC<JobCapabilitiesFieldProps> = ({\n  item,\n  index,\n  remove,\n}) => {\n  return (\n    <>\n      <Collapse\n        open={!item}\n        title={`Job Capability`}\n        className={styles['item']}\n      >\n        <FormikSelect\n          name={`jobCapabilities.${index}.category`}\n          description=\"Category\"\n          label=\"Category\"\n          required={true}\n          data-testid=\"category\"\n        >\n          <option value={''}>Select a category</option>\n          {categories.map((values) => {\n            return <option>{values}</option>;\n          })}\n        </FormikSelect>\n        <FormikInput\n          name={`jobCapabilities.${index}.name`}\n          label=\"Name\"\n          required={true}\n          description={`Name`}\n          aria-label=\"Input\"\n        />\n        <FormikSelect\n          name={`jobCapabilities.${index}.datatype`}\n          description=\"Datatype\"\n          label=\"Datatype\"\n          required={true}\n          data-testid=\"datatype\"\n        >\n          <option value={''}>Select a datatype</option>\n          {datatypes.map((values) => {\n            return <option>{values}</option>;\n          })}\n        </FormikSelect>\n        <FormikInput\n          name={`jobCapabilities.${index}.precedence`}\n          label=\"Precedence\"\n          type=\"number\"\n          required={false}\n          description={`Precedence`}\n          aria-label=\"Input\"\n        />\n        <FormikInput\n          name={`jobCapabilities.${index}.value`}\n          label=\"Value\"\n          required={false}\n          description={`Value`}\n          aria-label=\"Input\"\n        />\n        <Button onClick={() => remove(index)} size=\"sm\">\n          Remove\n        </Button>\n      </Collapse>\n    </>\n  );\n};\n\nconst JobCapabilitiesInputs: React.FC<{ arrayHelpers: FieldArrayRenderProps }> =\n  ({ arrayHelpers }) => {\n    const { values } = useFormikContext();\n\n    const jobCapabilities =\n      (values as Partial<Systems.ReqPostSystem>)?.jobCapabilities ?? [];\n\n    return (\n      <Collapse\n        open={jobCapabilities.length > 0}\n        title=\"Job Capabilities\"\n        note={`${jobCapabilities.length} items`}\n        className={styles['array']}\n      >\n        {jobCapabilities.map((jobCapabilitiesInput, index) => (\n          <JobCapabilitiesField\n            key={`jobCapabilities.${index}`}\n            item={jobCapabilitiesInput}\n            index={index}\n            remove={arrayHelpers.remove}\n          />\n        ))}\n        <Button onClick={() => arrayHelpers.push({})} size=\"sm\">\n          + Add Job Capability\n        </Button>\n      </Collapse>\n    );\n  };\n\nexport const JobCapabilitiesSettings: React.FC = () => {\n  return (\n    <div>\n      <FieldArray\n        name=\"jobCapabilities\"\n        render={(arrayHelpers) => {\n          return (\n            <>\n              <JobCapabilitiesInputs arrayHelpers={arrayHelpers} />\n            </>\n          );\n        }}\n      />\n    </div>\n  );\n};\n\nexport default JobCapabilitiesSettings;\n","import { FormikInput, Collapse } from 'tapis-ui/_common';\nimport styles from '../../CreateSystemModal.module.scss';\nimport JobEnvVariablesSettings from './JobEnvVariableSettings';\nimport JobCapabilitiesSettings from './JobCapabilitiesSettings';\n\nconst JobSettings: React.FC = () => {\n  return (\n    <Collapse title=\"Job Settings\" className={styles['array']}>\n      <FormikInput\n        name=\"jobWorkingDir\"\n        label=\"Job Working Directory\"\n        required={false}\n        description={`Job working directory`}\n        aria-label=\"Input\"\n      />\n      <FormikInput\n        name=\"jobMaxJobs\"\n        label=\"Job Max Jobs\"\n        type=\"number\"\n        required={false}\n        description={`Job max jobs`}\n        aria-label=\"Input\"\n      />\n      <FormikInput\n        name=\"jobMaxJobsPerUser\"\n        label=\"Job Max Jobs Per User\"\n        type=\"number\"\n        required={false}\n        description={`Job max jobs per user`}\n        aria-label=\"Input\"\n      />\n      <JobEnvVariablesSettings />\n      <JobCapabilitiesSettings />\n    </Collapse>\n  );\n};\n\nexport default JobSettings;\n","import { FormikInput, Collapse } from 'tapis-ui/_common';\nimport { FormikSelect } from 'tapis-ui/_common/FieldWrapperFormik';\nimport { RuntimeTypeEnum } from '@tapis/tapis-typescript-systems';\nimport { Systems } from '@tapis/tapis-typescript';\nimport { useMemo } from 'react';\nimport { SystemTypeEnum } from '@tapis/tapis-typescript-systems';\nimport { useFormikContext } from 'formik';\nimport styles from '../CreateSystemModal.module.scss';\nimport BatchSettings from './Batch/BatchSettings';\nimport ProxySettings from './ProxySettings';\nimport DtnSettings from './DtnSettings';\nimport CmdSettings from './CmdSettings';\nimport TagsSettings from './TagsSettings';\nimport JobSettings from './Job/JobSettings';\n\n//Array that is used in the drop-down menus\nconst runtimeTypes = Object.values(RuntimeTypeEnum);\n\ntype AdvancedSettingsProp = {\n  simplified: boolean;\n};\n\nconst AdvancedSettings: React.FC<AdvancedSettingsProp> = ({ simplified }) => {\n  //used when trying to read the current value of a parameter\n  const { values } = useFormikContext();\n\n  //reading if the systemType is S3 at its current state\n  const isS3 = useMemo(\n    () =>\n      (values as Partial<Systems.ReqPostSystem>).systemType ===\n      SystemTypeEnum.S3,\n    [values]\n  );\n\n  //reading the runtimeType at its current state\n  const runtimeType = (values as Partial<Systems.ReqPostSystem>).jobRuntimes;\n\n  if (simplified) {\n    return (\n      <Collapse\n        title=\"Advanced Settings\"\n        className={styles['item']}\n        open={true}\n      >\n        <FormikInput\n          name=\"rootDir\"\n          label=\"Root Directory\"\n          required={false}\n          description={`Root directory`}\n          aria-label=\"Input\"\n        />\n        <FormikSelect\n          name=\"jobRuntimes\"\n          description=\"The job runtime type for the system\"\n          label=\"Runtime Type\"\n          required={false}\n          data-testid=\"jobRuntimes\"\n        >\n          <option disabled value=\"\">\n            Select a job runtime\n          </option>\n          {runtimeTypes.map((values) => {\n            return <option>{values}</option>;\n          })}\n        </FormikSelect>\n        <FormikInput\n          name=\"version\"\n          label={`${runtimeType} Version`}\n          required={false}\n          description={`Version of ${runtimeType}`}\n          aria-label=\"Input\"\n          disabled={true}\n        />\n        <FormikInput\n          name=\"effectiveUserId\"\n          label=\"Effective User ID\"\n          required={false}\n          description={`Effective user id`}\n          aria-label=\"Input\"\n        />\n        {isS3 ? (\n          <FormikInput\n            name=\"bucketName\"\n            label=\"Bucket Name\"\n            required={false}\n            description={`Bucket name`}\n            aria-label=\"Input\"\n          />\n        ) : null}\n        <JobSettings />\n        <BatchSettings />\n        <ProxySettings />\n        <DtnSettings />\n        <CmdSettings />\n        <TagsSettings />\n      </Collapse>\n    );\n  } else {\n    return null;\n  }\n};\n\nexport default AdvancedSettings;\n","import { Button, Input, FormGroup, Label } from 'reactstrap';\nimport { GenericModal } from 'tapis-ui/_common';\nimport { SubmitWrapper } from 'tapis-ui/_wrappers';\nimport { ToolbarModalProps } from '../SystemToolbar';\nimport { Form, Formik } from 'formik';\nimport { FormikInput } from 'tapis-ui/_common';\nimport { FormikSelect, FormikCheck } from 'tapis-ui/_common/FieldWrapperFormik';\nimport { useMakeNewSystem } from 'tapis-hooks/systems';\nimport { useEffect, useCallback, useState } from 'react';\nimport styles from './CreateSystemModal.module.scss';\nimport * as Yup from 'yup';\nimport {\n  SystemTypeEnum,\n  AuthnEnum,\n  RuntimeTypeEnum,\n  SchedulerTypeEnum,\n  LogicalQueue,\n  Capability,\n  KeyValuePair,\n} from '@tapis/tapis-typescript-systems';\nimport { useQueryClient } from 'react-query';\nimport { default as queryKeys } from 'tapis-hooks/systems/queryKeys';\nimport AdvancedSettings from './Settings/AdvancedSettings';\n\n//Arrays that are used in the drop-down menus\nconst systemTypes = Object.values(SystemTypeEnum);\nconst authnMethods = Object.values(AuthnEnum);\n\nconst CreateSystemModal: React.FC<ToolbarModalProps> = ({ toggle }) => {\n  //Allows the system list to update without the user having to refresh the page\n  const queryClient = useQueryClient();\n  const onSuccess = useCallback(() => {\n    queryClient.invalidateQueries(queryKeys.list);\n  }, [queryClient]);\n\n  const { makeNewSystem, isLoading, error, isSuccess, reset } =\n    useMakeNewSystem();\n\n  useEffect(() => {\n    reset();\n  }, [reset]);\n\n  //used for the advanced checkbox\n  const [simplified, setSimplified] = useState(false);\n  const onChange = useCallback(() => {\n    setSimplified(!simplified);\n  }, [setSimplified, simplified]);\n\n  const validationSchema = Yup.object({\n    sysname: Yup.string()\n      .min(1)\n      .max(80, 'System name should not be longer than 80 characters')\n      .matches(\n        /^[a-zA-Z0-9_.-]+$/,\n        \"Must contain only alphanumeric characters and the following: '.', '_', '-'\"\n      )\n      .required('System name is a required field'),\n    description: Yup.string().max(\n      2048,\n      'Description schould not be longer than 2048 characters'\n    ),\n    host: Yup.string()\n      .min(1)\n      .max(256, 'Host name should not be longer than 256 characters')\n      .matches(\n        /^[a-zA-Z0-9_.-]+$/,\n        \"Must contain only alphanumeric characters and the following: '.', '_', '-'\"\n      )\n      .required('Host name is a required field'),\n    rootDir: Yup.string()\n      .min(1)\n      .max(4096, 'Root Directory should not be longer than 4096 characters'),\n    jobWorkingDir: Yup.string()\n      .min(1)\n      .max(\n        4096,\n        'Job Working Directory should not be longer than 4096 characters'\n      ),\n    effectiveUserId: Yup.string().max(\n      60,\n      'Effective User ID should not be longer than 60 characters'\n    ),\n    batchSchedulerProfile: Yup.string().max(\n      80,\n      'Batch Scheduler Profile should not be longer than 80 characters'\n    ),\n    batchDefaultLogicalQueue: Yup.string().max(\n      128,\n      'Batch Default Logical Queue should not be longer than 128 characters'\n    ),\n    proxyHost: Yup.string().max(\n      256,\n      'Proxy Host should not be longer than 256 characters'\n    ),\n    dtnSystemId: Yup.string().max(\n      80,\n      'DTN System ID should not be longer than 80 characters'\n    ),\n    mpiCmd: Yup.string().max(\n      126,\n      'mpiCmd should not be longer than 126 characters'\n    ),\n  });\n\n  const initialValues = {\n    sysname: '',\n    description: undefined,\n    systemType: SystemTypeEnum.Linux,\n    host: 'stampede2.tacc.utexas.edu',\n    defaultAuthnMethod: AuthnEnum.Password,\n    canExec: true,\n    rootDir: '/',\n    jobRuntimes: RuntimeTypeEnum.Singularity,\n    version: undefined,\n    effectiveUserId: undefined, //apiUserId\n    bucketName: undefined,\n\n    //batch\n    canRunBatch: true,\n    batchScheduler: SchedulerTypeEnum.Slurm,\n    batchSchedulerProfile: 'tacc',\n    batchDefaultLogicalQueue: 'tapisNormal',\n\n    batchLogicalQueues: [\n      {\n        name: 'tapisNormal',\n        hpcQueueName: 'normal',\n        maxJobs: 50,\n        maxJobsPerUser: 10,\n        minNodeCount: 1,\n        maxNodeCount: 16,\n        minCoresPerNode: 1,\n        maxCoresPerNode: 68,\n        minMemoryMB: 1,\n        maxMemoryMB: 16384,\n        minMinutes: 1,\n        maxMinutes: 60,\n      },\n    ],\n\n    //proxy\n    useProxy: false,\n    proxyHost: undefined,\n    proxyPort: 0,\n\n    //dtn\n    isDtn: false,\n    dtnSystemId: undefined,\n    dtnMountPoint: undefined,\n    dtnMountSourcePath: undefined,\n\n    //cmd\n    enableCmdPrefix: false,\n    mpiCmd: undefined,\n\n    jobWorkingDir: 'HOST_EVAL($SCRATCH)',\n    jobMaxJobs: undefined,\n    jobMaxJobsPerUser: undefined,\n    jobCapabilities: [],\n    jobEnvVariables: [],\n\n    tags: [],\n  };\n\n  const onSubmit = ({\n    sysname,\n    description,\n    systemType,\n    host,\n    defaultAuthnMethod,\n    canExec,\n    rootDir,\n    jobWorkingDir,\n    jobRuntimes,\n    version,\n    effectiveUserId,\n    bucketName,\n\n    //batch\n    canRunBatch,\n    batchScheduler,\n    batchSchedulerProfile,\n    batchDefaultLogicalQueue,\n    batchLogicalQueues,\n\n    //proxy\n    useProxy,\n    proxyHost,\n    proxyPort,\n\n    //dtn\n    isDtn,\n    dtnSystemId,\n    dtnMountPoint,\n    dtnMountSourcePath,\n\n    //cmd\n    enableCmdPrefix,\n    mpiCmd,\n\n    jobMaxJobs,\n    jobMaxJobsPerUser,\n    jobCapabilities,\n    jobEnvVariables,\n\n    tags,\n  }: {\n    sysname: string;\n    description: string | undefined;\n    systemType: SystemTypeEnum;\n    host: string;\n    defaultAuthnMethod: AuthnEnum;\n    canExec: boolean;\n    rootDir: string;\n    jobWorkingDir: string;\n    jobRuntimes: RuntimeTypeEnum;\n    version: string | undefined;\n    effectiveUserId: string | undefined;\n    bucketName: string | undefined;\n\n    //batch\n    canRunBatch: boolean;\n    batchScheduler: SchedulerTypeEnum;\n    batchSchedulerProfile: string;\n    batchDefaultLogicalQueue: string;\n    batchLogicalQueues: Array<LogicalQueue>;\n\n    //proxy\n    useProxy: boolean;\n    proxyHost: string | undefined;\n    proxyPort: number;\n\n    //dtn\n    isDtn: boolean;\n    dtnSystemId: string | undefined;\n    dtnMountPoint: string | undefined;\n    dtnMountSourcePath: string | undefined;\n\n    //cmd\n    enableCmdPrefix: boolean;\n    mpiCmd: string | undefined;\n\n    jobMaxJobs: number | undefined;\n    jobMaxJobsPerUser: number | undefined;\n    jobCapabilities: Array<Capability>;\n    jobEnvVariables: Array<KeyValuePair>;\n\n    tags: Array<string> | undefined;\n  }) => {\n    //Converting the string into a boolean value\n    const jobRuntimesArray = [{ runtimeType: jobRuntimes, version }];\n\n    makeNewSystem(\n      {\n        id: sysname,\n        description,\n        systemType,\n        host,\n        defaultAuthnMethod,\n        canExec,\n        rootDir,\n        jobWorkingDir,\n        jobRuntimes: jobRuntimesArray,\n        effectiveUserId,\n        bucketName,\n\n        //batch\n        canRunBatch,\n        batchScheduler,\n        batchSchedulerProfile,\n        batchDefaultLogicalQueue,\n        batchLogicalQueues,\n\n        //proxy\n        useProxy,\n        proxyHost,\n        proxyPort,\n\n        //dtn\n        isDtn,\n        dtnSystemId,\n        dtnMountPoint,\n        dtnMountSourcePath,\n\n        //cmd\n        enableCmdPrefix,\n        mpiCmd,\n\n        jobMaxJobs,\n        jobMaxJobsPerUser,\n        jobCapabilities,\n        jobEnvVariables,\n\n        tags,\n      },\n      true,\n      { onSuccess }\n    );\n  };\n\n  return (\n    <GenericModal\n      toggle={toggle}\n      title=\"Create New System\"\n      body={\n        <div className={styles['modal-settings']}>\n          <Formik\n            initialValues={initialValues}\n            validationSchema={validationSchema}\n            onSubmit={onSubmit}\n          >\n            {() => (\n              <Form id=\"newsystem-form\">\n                <FormGroup check>\n                  <Label check size=\"sm\" className={`form-field__label`}>\n                    <Input type=\"checkbox\" onChange={onChange} />\n                    Advanced Settings\n                  </Label>\n                </FormGroup>\n                <FormikInput\n                  name=\"sysname\"\n                  label=\"System Name\"\n                  required={true}\n                  description={`System name`}\n                  aria-label=\"Input\"\n                />\n                <FormikInput\n                  name=\"description\"\n                  label=\"Description\"\n                  required={false}\n                  description={`System description`}\n                  aria-label=\"Input\"\n                />\n                <FormikSelect\n                  name=\"systemType\"\n                  description=\"The system type\"\n                  label=\"System Type\"\n                  required={true}\n                  data-testid=\"systemType\"\n                >\n                  <option disabled value={''}>\n                    Select a system type\n                  </option>\n                  {systemTypes.map((values) => {\n                    return <option>{values}</option>;\n                  })}\n                </FormikSelect>\n                <FormikInput\n                  name=\"host\"\n                  label=\"Host\"\n                  required={true}\n                  description={`Host of the system`}\n                  aria-label=\"Input\"\n                />\n                <FormikSelect\n                  name=\"defaultAuthnMethod\"\n                  description=\"Authentication method for the system\"\n                  label=\"Default Authentication Method\"\n                  required={true}\n                  data-testid=\"defaultAuthnMethod\"\n                >\n                  <option disabled value=\"\">\n                    Select a default athenication method\n                  </option>\n                  {authnMethods.map((values) => {\n                    return <option>{values}</option>;\n                  })}\n                </FormikSelect>\n                {true ? (\n                  <FormikCheck\n                    name=\"canExec\"\n                    required={true}\n                    label=\"Can Execute\"\n                    description={'Decides if the system can execute'}\n                  />\n                ) : null}\n\n                <AdvancedSettings simplified={simplified} />\n              </Form>\n            )}\n          </Formik>\n        </div>\n      }\n      footer={\n        <SubmitWrapper\n          className={styles['modal-footer']}\n          isLoading={isLoading}\n          error={error}\n          success={isSuccess ? `Successfully created a new system` : ''}\n          reverse={true}\n        >\n          <Button\n            form=\"newsystem-form\"\n            color=\"primary\"\n            disabled={isLoading || isSuccess}\n            aria-label=\"Submit\"\n            type=\"submit\"\n          >\n            Create a new system\n          </Button>\n        </SubmitWrapper>\n      }\n    />\n  );\n};\n\nexport default CreateSystemModal;\n","import CreateSystemModal from './CreateSystemModal';\n\nexport default CreateSystemModal;\n","import React, { useState } from 'react';\nimport { Button } from 'reactstrap';\nimport { Icon } from 'tapis-ui/_common';\nimport styles from './SystemToolbar.module.scss';\nimport { useLocation } from 'react-router-dom';\nimport CreateSystemModal from './CreateSystemModal';\n\ntype ToolbarButtonProps = {\n  text: string;\n  icon: string;\n  onClick: () => void;\n  disabled: boolean;\n};\n\nexport type ToolbarModalProps = {\n  toggle: () => void;\n};\n\nexport const ToolbarButton: React.FC<ToolbarButtonProps> = ({\n  text,\n  icon,\n  onClick,\n  disabled = true,\n  ...rest\n}) => {\n  return (\n    <div>\n      <Button\n        disabled={disabled}\n        onClick={onClick}\n        className={styles['toolbar-btn']}\n        {...rest}\n      >\n        <Icon name={icon}></Icon>\n        <span> {text}</span>\n      </Button>\n    </div>\n  );\n};\n\nconst SystemToolbar: React.FC = () => {\n  const [modal, setModal] = useState<string | undefined>(undefined);\n  const { pathname } = useLocation();\n\n  const toggle = () => {\n    setModal(undefined);\n  };\n  return (\n    <div id=\"file-operation-toolbar\">\n      {pathname && (\n        <div className={styles['toolbar-wrapper']}>\n          <ToolbarButton\n            text=\"Create a New System\"\n            icon=\"add\"\n            disabled={false}\n            onClick={() => setModal('createsystem')}\n            aria-label=\"createSystem\"\n          />\n\n          {modal === 'createsystem' && <CreateSystemModal toggle={toggle} />}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SystemToolbar;\n","import SystemToolbar from './SystemToolbar';\n\nexport default SystemToolbar;\n","import { SystemDetail } from 'tapis-ui/components/systems';\nimport { PageLayout, LayoutHeader } from 'tapis-ui/_common';\n\nconst Layout: React.FC<{ systemId: string }> = ({ systemId }) => {\n  const header = (\n    <LayoutHeader type={'sub-header'}>System Details</LayoutHeader>\n  );\n\n  const body = (\n    <div style={{ flex: 1 }}>\n      <SystemDetail systemId={systemId}></SystemDetail>\n    </div>\n  );\n\n  return <PageLayout top={header} right={body}></PageLayout>;\n};\n\nexport default Layout;\n","import React from 'react';\nimport {\n  Route,\n  useRouteMatch,\n  RouteComponentProps,\n  Switch,\n} from 'react-router-dom';\nimport SystemDetail from '../SystemDetail';\nimport { SectionMessage } from 'tapis-ui/_common';\n\nconst Router: React.FC = () => {\n  const { path } = useRouteMatch();\n\n  return (\n    <Switch>\n      <Route path={`${path}`} exact>\n        <SectionMessage type=\"info\">\n          Select a system from the list.\n        </SectionMessage>\n      </Route>\n\n      <Route\n        path={`${path}/:systemId`}\n        render={({\n          match: {\n            params: { systemId },\n          },\n        }: RouteComponentProps<{ systemId: string }>) => (\n          <SystemDetail systemId={systemId} />\n        )}\n      />\n    </Switch>\n  );\n};\n\nexport default Router;\n","import React from 'react';\nimport {\n  PageLayout,\n  LayoutBody,\n  LayoutHeader,\n  LayoutNavWrapper,\n} from 'tapis-ui/_common';\nimport { SystemsNav } from '../_components';\nimport SystemToolbar from '../_components/SystemToolbar';\nimport { Router } from '../_Router';\n\nconst Layout: React.FC = () => {\n  const header = (\n    <LayoutHeader>\n      <div>System List</div>\n      <SystemToolbar />\n    </LayoutHeader>\n  );\n\n  const sidebar = (\n    <LayoutNavWrapper>\n      <SystemsNav />\n    </LayoutNavWrapper>\n  );\n\n  const body = (\n    <LayoutBody>\n      <Router />\n    </LayoutBody>\n  );\n\n  return <PageLayout top={header} left={sidebar} right={body} />;\n};\n\nexport default Layout;\n","import SystemsNav from './SystemsNav';\n\nexport default SystemsNav;\n","import React from 'react';\nimport { useRouteMatch } from 'react-router-dom';\nimport { useList } from 'tapis-hooks/systems';\nimport { Systems } from '@tapis/tapis-typescript';\nimport { Navbar, NavItem } from 'tapis-ui/_wrappers/Navbar';\nimport { QueryWrapper } from 'tapis-ui/_wrappers';\n\nconst SystemsNav: React.FC = () => {\n  const { url } = useRouteMatch();\n  // Get a systems listing with default request params\n  const { data, isLoading, error } = useList();\n  const definitions: Array<Systems.TapisSystem> = data?.result ?? [];\n\n  return (\n    <QueryWrapper isLoading={isLoading} error={error}>\n      <Navbar>\n        {definitions.length ? (\n          definitions.map((system) => (\n            <NavItem to={`${url}/${system.id}/`} icon=\"folder\" key={system.id}>\n              {`${system.id}`}\n            </NavItem>\n          ))\n        ) : (\n          <i>No systems found</i>\n        )}\n      </Navbar>\n    </QueryWrapper>\n  );\n};\n\nexport default SystemsNav;\n","import React from 'react';\nimport { FilesContextType } from '.';\n\nexport const filesContext: FilesContextType = {\n  selectedFiles: [],\n  setSelectedFiles: () => {},\n};\n\nconst FilesContext: React.Context<FilesContextType> =\n  React.createContext<FilesContextType>(filesContext);\n\nexport default FilesContext;\n","import React, { useState } from 'react';\nimport { Files } from '@tapis/tapis-typescript';\nimport { FilesContextType } from '.';\nimport FilesContext from './FilesContext';\n\nconst FilesProvider: React.FC<React.PropsWithChildren<{}>> = ({ children }) => {\n  const [selectedFiles, setSelectedFiles] = useState<Array<Files.FileInfo>>([]);\n\n  // Provide a context state for the rest of the application, including\n  // a way of modifying the state\n  const contextValue: FilesContextType = {\n    selectedFiles,\n    setSelectedFiles,\n  };\n\n  return (\n    <FilesContext.Provider value={contextValue}>\n      {children}\n    </FilesContext.Provider>\n  );\n};\n\nexport default FilesProvider;\n","import { useContext } from 'react';\nimport { useCallback } from 'react';\nimport FilesContext from './FilesContext';\nimport { Files } from '@tapis/tapis-typescript';\n\nconst useFilesSelect = () => {\n  const { selectedFiles, setSelectedFiles } = useContext(FilesContext);\n\n  const select = useCallback(\n    (files: Array<Files.FileInfo>, mode: 'single' | 'multi') => {\n      if (mode === 'single' && files.length === 1) {\n        setSelectedFiles(files);\n      }\n\n      if (mode === 'multi') {\n        const selectedSet = new Set(selectedFiles.map((file) => file.path));\n        const newSelection = [\n          ...selectedFiles,\n          ...files.filter((file) => !selectedSet.has(file.path)),\n        ];\n        setSelectedFiles(newSelection);\n      }\n    },\n    [selectedFiles, setSelectedFiles]\n  );\n\n  const unselect = useCallback(\n    (files: Array<Files.FileInfo>) => {\n      const selectedSet = new Set(\n        selectedFiles.map((selected) => selected.path)\n      );\n      files.forEach((file) => selectedSet.delete(file.path ?? ''));\n      const newSelection = selectedFiles.filter((selected) =>\n        selectedSet.has(selected.path)\n      );\n      setSelectedFiles(newSelection);\n    },\n    [selectedFiles, setSelectedFiles]\n  );\n\n  const clear = useCallback(() => {\n    setSelectedFiles([]);\n  }, [setSelectedFiles]);\n\n  return {\n    selectedFiles,\n    select,\n    unselect,\n    clear,\n  };\n};\n\nexport default useFilesSelect;\n","import React, { useEffect } from 'react';\nimport { FileListing } from 'tapis-ui/components/files';\nimport { PageLayout } from 'tapis-ui/_common';\nimport { useFilesSelect } from 'tapis-app/Files/_components/FilesContext';\nimport styles from './Layout.module.scss';\n\ntype LayoutProps = {\n  systemId: string;\n  path: string;\n  location: string;\n};\n\nconst Layout: React.FC<LayoutProps> = ({ systemId, path, location }) => {\n  const { selectedFiles, select, unselect, clear } = useFilesSelect();\n  useEffect(() => {\n    clear();\n  }, [systemId, path, clear]);\n\n  const body = (\n    <div className={styles.body}>\n      <FileListing\n        className={styles.container}\n        systemId={systemId}\n        path={path}\n        location={location}\n        selectMode={{ mode: 'multi', types: ['dir', 'file'] }}\n        selectedFiles={selectedFiles}\n        onSelect={(files) => select(files, 'multi')}\n        onUnselect={unselect}\n      ></FileListing>\n    </div>\n  );\n\n  return <PageLayout right={body} constrain></PageLayout>;\n};\n\nexport default Layout;\n","import React from 'react';\nimport {\n  Route,\n  useRouteMatch,\n  RouteComponentProps,\n  Switch,\n  useLocation,\n} from 'react-router-dom';\nimport FileListing from '../FileListing';\nimport { SectionMessage } from 'tapis-ui/_common';\n\nexport const backLocation = (\n  systemPath: string | undefined,\n  pathname: string\n) =>\n  systemPath ? `${pathname.split('/').slice(0, -2).join('/')}/` : undefined;\n\nconst Router: React.FC = () => {\n  const { path } = useRouteMatch();\n  const { pathname } = useLocation();\n\n  return (\n    <Switch>\n      <Route path={`${path}`} exact>\n        <SectionMessage type=\"info\">\n          Select a system from the list.\n        </SectionMessage>\n      </Route>\n\n      <Route\n        path={`${path}/:systemId/:systemPath*`}\n        render={({\n          match: {\n            params: { systemId, systemPath },\n          },\n        }: RouteComponentProps<{ systemId: string; systemPath?: string }>) => {\n          return (\n            <FileListing\n              systemId={systemId}\n              path={systemPath ?? '/'}\n              location={pathname}\n            />\n          );\n        }}\n      />\n    </Switch>\n  );\n};\n\nexport default Router;\n","import CreateDirModal from './CreateDirModal';\n\nexport default CreateDirModal;\n","import { useCallback } from 'react';\nimport { Button } from 'reactstrap';\nimport { GenericModal } from 'tapis-ui/_common';\nimport { SubmitWrapper } from 'tapis-ui/_wrappers';\nimport { ToolbarModalProps } from '../Toolbar';\nimport { Form, Formik } from 'formik';\nimport { FormikInput } from 'tapis-ui/_common';\nimport { useMkdir } from 'tapis-hooks/files';\nimport { focusManager } from 'react-query';\nimport { useEffect } from 'react';\nimport * as Yup from 'yup';\n\nconst CreateDirModal: React.FC<ToolbarModalProps> = ({\n  toggle,\n  systemId,\n  path,\n}) => {\n  const onSuccess = useCallback(() => {\n    // Calling the focus manager triggers react-query's\n    // automatic refetch on window focus\n    focusManager.setFocused(true);\n  }, []);\n\n  const { mkdir, isLoading, error, isSuccess, reset } = useMkdir();\n\n  useEffect(() => {\n    reset();\n  }, [reset]);\n\n  const validationSchema = Yup.object({\n    dirname: Yup.string()\n      .min(1)\n      .max(255, 'Directory name cannot be longer than 255 characters')\n      .matches(\n        /^[a-zA-Z0-9_.-]+$/,\n        \"Must contain only alphanumeric characters and the following: '.', '_', '-'\"\n      )\n      .required('Directory name is a required field'),\n  });\n\n  const initialValues = {\n    dirname: '',\n  };\n\n  const onSubmit = ({ dirname }: { dirname: string }) => {\n    mkdir(systemId ?? '', `${path ?? '/'}${dirname}`, { onSuccess });\n  };\n\n  return (\n    <GenericModal\n      toggle={toggle}\n      title=\"Create Directory\"\n      body={\n        <div>\n          <Formik\n            initialValues={initialValues}\n            validationSchema={validationSchema}\n            onSubmit={onSubmit}\n          >\n            <Form id=\"newdirectory-form\">\n              <FormikInput\n                name=\"dirname\"\n                label=\"Directory name\"\n                required={true}\n                description={`Creates a directory in ${systemId}/${path}`}\n                aria-label=\"Input\"\n              />\n            </Form>\n          </Formik>\n        </div>\n      }\n      footer={\n        <SubmitWrapper\n          isLoading={isLoading}\n          error={error}\n          success={isSuccess ? `Successfully created directory` : ''}\n          reverse={true}\n        >\n          <Button\n            form=\"newdirectory-form\"\n            color=\"primary\"\n            disabled={isLoading || isSuccess}\n            aria-label=\"Submit\"\n            type=\"submit\"\n          >\n            Create directory\n          </Button>\n        </SubmitWrapper>\n      }\n    />\n  );\n};\n\nexport default CreateDirModal;\n","import { MutateOptions } from 'react-query';\nimport { useState } from 'react';\nimport { from, of } from 'rxjs';\nimport { concatMap } from 'rxjs/operators';\n\nexport type MutationFunction<T, ResponseType> = (\n  item: T,\n  options?: MutateOptions<ResponseType, Error, T>\n) => Promise<ResponseType>;\n\ntype UseMutationsParams<T, ResponseType> = {\n  fn: MutationFunction<T, ResponseType>;\n  onStart?: (item: T) => void;\n  onSuccess?: (item: T, response: ResponseType) => void;\n  onError?: (item: T, error: Error) => void;\n  onComplete?: () => void;\n};\n\nconst useMutations = <T extends unknown, ResponseType extends unknown>(\n  params: UseMutationsParams<T, ResponseType>\n) => {\n  const { fn, onSuccess, onError, onComplete, onStart } = params;\n  const [isLoading, setIsLoading] = useState(false);\n  const [isFinished, setIsFinished] = useState(false);\n\n  const run = (items: Array<T>) => {\n    setIsLoading(true);\n    from(items)\n      .pipe(\n        concatMap((item) => {\n          onStart && onStart(item);\n          return of(item);\n        }),\n        concatMap((item) =>\n          fn(item)\n            .then((data) => {\n              onSuccess && onSuccess(item, data);\n            })\n            .catch((error) => {\n              onError && onError(item, error);\n            })\n        )\n      )\n      .subscribe(\n        () => {},\n        () => {},\n        () => {\n          setIsLoading(false);\n          setIsFinished(true);\n          onComplete && onComplete();\n        }\n      );\n  };\n\n  return {\n    isLoading,\n    isFinished,\n    run,\n  };\n};\n\nexport default useMutations;\n","import { useMutations } from 'tapis-hooks/utils';\nimport { useReducer, useState } from 'react';\nimport { MutationFunction } from 'tapis-hooks/utils/useMutations';\nimport { FileOpEventStatusEnum, FileOpState } from '.';\n\ntype UseFileOperationsParams<T, ResponseType> = {\n  fn: MutationFunction<T, ResponseType>;\n  key?: (item: T) => string;\n  onComplete?: () => void;\n};\n\ninterface FileParamType {\n  path?: string;\n}\n\nconst useFileOperations = <\n  T extends FileParamType,\n  ResponseType extends unknown\n>({\n  // Mutation function to run\n  fn,\n  // Optional identifier function for the state dictionary\n  key = (item: T) => item.path!,\n  onComplete,\n}: UseFileOperationsParams<T, ResponseType>) => {\n  const [started, setStarted] = useState(false);\n\n  const reducer = (\n    state: FileOpState,\n    action: { item: T; status: FileOpEventStatusEnum; error?: Error }\n  ) => {\n    const { item, status, error } = action;\n    return {\n      ...state,\n      [key(item)]: { status, error },\n    };\n  };\n\n  const [state, dispatch] = useReducer(reducer, {} as FileOpState);\n\n  const onStart = (item: T) =>\n    dispatch({\n      item,\n      status: FileOpEventStatusEnum.loading,\n    });\n  const onSuccess = (item: T) =>\n    dispatch({\n      item,\n      status: FileOpEventStatusEnum.success,\n    });\n  const onError = (item: T, error: Error) =>\n    dispatch({\n      item,\n      status: FileOpEventStatusEnum.error,\n      error,\n    });\n\n  const { run, isLoading, isFinished } = useMutations<T, ResponseType>({\n    fn,\n    onStart,\n    onSuccess,\n    onError,\n    onComplete,\n  });\n\n  const errorEntry = Object.entries(state).find(([_, state]) => state.error);\n  const error = errorEntry ? errorEntry[1].error! : null;\n  const isSuccess = !isLoading && !error && started;\n\n  return {\n    run: (items: T[]) => {\n      setStarted(true);\n      return run(items);\n    },\n    isLoading,\n    isFinished,\n    isSuccess,\n    error,\n    state,\n  };\n};\n\nexport default useFileOperations;\n","import { useEffect, useState, useCallback, useReducer } from 'react';\nimport { Button } from 'reactstrap';\nimport { GenericModal } from 'tapis-ui/_common';\nimport { SubmitWrapper } from 'tapis-ui/_wrappers';\nimport { ToolbarModalProps } from '../Toolbar';\nimport { useUpload } from 'tapis-hooks/files';\nimport { focusManager } from 'react-query';\nimport { useDropzone } from 'react-dropzone';\nimport styles from './UploadModal.module.scss';\nimport { FileListingTable } from 'tapis-ui/components/files/FileListing';\nimport { Files } from '@tapis/tapis-typescript';\nimport { Column } from 'react-table';\nimport sizeFormat from 'utils/sizeFormat';\nimport { useFileOperations } from '../_hooks';\nimport { InsertHookParams } from 'tapis-hooks/files/useUpload';\nimport Progress from 'tapis-ui/_common/Progress';\nimport { FileOpEventStatusEnum } from '../_hooks/useFileOperations';\nimport { FileOperationStatus } from '../_components';\n\nexport enum FileOpEventStatus {\n  loading = 'loading',\n  progress = 'progress',\n  error = 'error',\n  success = 'success',\n  none = 'none',\n}\n\nexport type FileProgressState = {\n  [name: string]: number;\n};\n\ntype UploadModalProps = ToolbarModalProps & {\n  maxFileSizeBytes?: number;\n};\n\nconst UploadModal: React.FC<UploadModalProps> = ({\n  toggle,\n  path,\n  systemId,\n  maxFileSizeBytes = 524288000,\n}) => {\n  const [files, setFiles] = useState<Array<File>>([]);\n\n  const reducer = (\n    state: FileProgressState,\n    action: { name: string; progress: number }\n  ) => {\n    const { name, progress } = action;\n    return {\n      ...state,\n      [name]: progress,\n    };\n  };\n\n  const [fileProgressState, dispatch] = useReducer(\n    reducer,\n    {} as FileProgressState\n  );\n\n  const onProgress = (uploadProgress: number, file: File) => {\n    dispatch({\n      name: file.name,\n      progress: uploadProgress,\n    });\n  };\n\n  const onDrop = useCallback(\n    (selectedFiles: Array<File>) => {\n      // Create an array of files unique File objects. This prevents\n      // a user from trying to upload 2 or more of the same file.\n      const uniqueFiles = selectedFiles.filter(\n        (selectedFile) =>\n          // The some function contains the selection logic for\n          // the filter function. All files that have the same name\n          // as any file in the uniqueFiles array or exceeds the max\n          // file size will not be added to the final array.\n          !files.some(\n            (existingFile) =>\n              existingFile.name === selectedFile.name ||\n              selectedFile.size > maxFileSizeBytes\n          )\n      );\n\n      setFiles([...files, ...uniqueFiles]);\n    },\n    [files, setFiles, maxFileSizeBytes]\n  );\n\n  const { getRootProps, getInputProps } = useDropzone({\n    onDrop,\n  });\n\n  const removeFile = useCallback(\n    (file: Files.FileInfo) => {\n      setFiles([...files.filter((checkFile) => file.name !== checkFile.name)]);\n    },\n    [files, setFiles]\n  );\n\n  const { uploadAsync, reset } = useUpload();\n\n  const key = (params: InsertHookParams) => params.file.name;\n  const onComplete = useCallback(() => {\n    focusManager.setFocused(true);\n  }, []);\n\n  const { state, run, isLoading, isSuccess, error } = useFileOperations<\n    InsertHookParams,\n    Files.FileStringResponse\n  >({\n    fn: uploadAsync,\n    key,\n    onComplete,\n  });\n\n  useEffect(() => {\n    reset();\n  }, [reset, path]);\n\n  const onSubmit = useCallback(() => {\n    const operations: Array<InsertHookParams> = files.map((file) => ({\n      systemId: systemId!,\n      path: path!,\n      file,\n      progressCallback: onProgress,\n    }));\n    run(operations);\n  }, [files, run, systemId, path]);\n\n  const filesToFileInfo = (filesArr: Array<File>): Array<Files.FileInfo> => {\n    return filesArr.map((file) => {\n      return { name: file.name, size: file.size, type: 'file' };\n    });\n  };\n\n  const statusColumn: Array<Column> = [\n    {\n      Header: '',\n      id: 'deleteStatus',\n      Cell: (el) => {\n        const file = el.row.original as Files.FileInfo;\n        const status = state[file.name!]?.status;\n        if (!status) {\n          return (\n            <span\n              className={styles['remove-file']}\n              onClick={() => {\n                removeFile(filesToFileInfo(files)[el.row.index]);\n              }}\n            >\n              &#x2715;\n            </span>\n          );\n        }\n        if (\n          status === FileOpEventStatusEnum.loading &&\n          fileProgressState[file.name!] !== undefined\n        ) {\n          return (\n            <div className={styles['progress-bar-container']}>\n              <Progress value={fileProgressState[file.name!]} />\n            </div>\n          );\n        }\n        return <FileOperationStatus status={status} />;\n      },\n    },\n  ];\n\n  return (\n    <GenericModal\n      toggle={toggle}\n      title={`Upload files`}\n      body={\n        <div>\n          {!(isLoading || isSuccess) && (\n            <div\n              aria-label=\"Dropzone\"\n              className={styles['file-dropzone']}\n              {...getRootProps()}\n            >\n              <input aria-label=\"File Input\" {...getInputProps()} />\n              <Button aria-label=\"File Select\">Select files</Button>\n              <div>\n                <p>or drag and drop</p>\n                <b>Max file size: {sizeFormat(maxFileSizeBytes)}</b>\n              </div>\n            </div>\n          )}\n          <h3 className={styles['files-list-header']}>\n            Uploading to {systemId}/{path}\n          </h3>\n          {error && <p className={styles['upload-error']}>{error.message}</p>}\n          <div className={styles['files-list-container']}>\n            <FileListingTable\n              files={filesToFileInfo(files)}\n              fields={['size']}\n              appendColumns={statusColumn}\n              className={styles['file-list-table']}\n            />\n          </div>\n        </div>\n      }\n      footer={\n        <SubmitWrapper\n          isLoading={isLoading}\n          error={error}\n          success={isSuccess ? `Successfully uploaded files` : ''}\n          reverse={true}\n        >\n          <Button\n            color=\"primary\"\n            disabled={isLoading || isSuccess || !!error || files.length === 0}\n            aria-label=\"Submit\"\n            onClick={onSubmit}\n          >\n            Upload ({files.length})\n          </Button>\n        </SubmitWrapper>\n      }\n    />\n  );\n};\n\nexport default UploadModal;\n","import FileOperationStatus from './FileOperationStatus';\n\nexport default FileOperationStatus;\n","import React from 'react';\nimport { FileOpEventStatusEnum } from '../../_hooks/useFileOperations';\nimport { LoadingSpinner, Icon } from 'tapis-ui/_common';\n\nconst FileOperationStatus: React.FC<{ status: FileOpEventStatusEnum }> = ({\n  status,\n}) => {\n  switch (status) {\n    case FileOpEventStatusEnum.loading:\n      return <LoadingSpinner placement=\"inline\" />;\n    case FileOpEventStatusEnum.success:\n      return <Icon name=\"approved-reverse\" className=\"success\" />;\n    case FileOpEventStatusEnum.error:\n      return <Icon name=\"alert\" />;\n  }\n  return <div>Unknown status!</div>;\n};\n\nexport default FileOperationStatus;\n","import MoveCopyModal from './MoveCopyModal';\n\nexport default MoveCopyModal;\n","import { useCallback, useState } from 'react';\nimport { Button } from 'reactstrap';\nimport { GenericModal, Breadcrumbs } from 'tapis-ui/_common';\nimport { SubmitWrapper } from 'tapis-ui/_wrappers';\nimport breadcrumbsFromPathname from 'tapis-ui/_common/Breadcrumbs/breadcrumbsFromPathname';\nimport { FileListingTable } from 'tapis-ui/components/files/FileListing/FileListing';\nimport { FileOperationStatus } from '../_components';\nimport { FileExplorer } from 'tapis-ui/components/files';\nimport { ToolbarModalProps } from '../Toolbar';\nimport { useLocation } from 'react-router';\nimport { focusManager } from 'react-query';\nimport { useCopy, useMove } from 'tapis-hooks/files';\nimport { MoveCopyHookParams } from 'tapis-hooks/files';\nimport { Files } from '@tapis/tapis-typescript';\nimport { Column } from 'react-table';\nimport styles from './MoveCopyModal.module.scss';\nimport { useFilesSelect } from '../../FilesContext';\nimport { useFileOperations } from '../_hooks';\n\ntype MoveCopyModalProps = {\n  operation: Files.MoveCopyRequestOperationEnum;\n} & ToolbarModalProps;\n\nconst MoveCopyModal: React.FC<MoveCopyModalProps> = ({\n  toggle,\n  systemId = '',\n  path = '/',\n  operation,\n}) => {\n  const { pathname } = useLocation();\n  const [destinationPath, setDestinationPath] = useState<string | null>(path);\n  const { selectedFiles, unselect } = useFilesSelect();\n\n  const opFormatted = operation.charAt(0) + operation.toLowerCase().slice(1);\n\n  const { copyAsync } = useCopy();\n  const { moveAsync } = useMove();\n  const fn =\n    operation === Files.MoveCopyRequestOperationEnum.Copy\n      ? copyAsync\n      : moveAsync;\n\n  const onComplete = useCallback(() => {\n    // Calling the focus manager triggers react-query's\n    // automatic refetch on window focus\n    focusManager.setFocused(true);\n  }, []);\n\n  const onNavigate = useCallback(\n    (_: string | null, path: string | null) => {\n      setDestinationPath(path);\n    },\n    [setDestinationPath]\n  );\n\n  const removeFile = useCallback(\n    (file: Files.FileInfo) => {\n      unselect([file]);\n      if (selectedFiles.length === 1) {\n        toggle();\n      }\n    },\n    [selectedFiles, toggle, unselect]\n  );\n\n  const { run, state, isLoading, isFinished, isSuccess, error } =\n    useFileOperations<MoveCopyHookParams, Files.FileStringResponse>({\n      fn,\n      onComplete,\n    });\n\n  const onSubmit = useCallback(() => {\n    const operations: Array<MoveCopyHookParams> = selectedFiles.map((file) => ({\n      systemId,\n      newPath: `${destinationPath!}/${file.name!}`,\n      path: file.path!,\n    }));\n    run(operations);\n  }, [selectedFiles, run, destinationPath, systemId]);\n\n  const statusColumns: Array<Column> = [\n    {\n      Header: '',\n      id: 'moveCopyStatus',\n      Cell: (el) => {\n        const path = (el.row.original as Files.FileInfo).path!;\n        if (!state[path]) {\n          return (\n            <span\n              className={styles['remove-file']}\n              onClick={() => {\n                removeFile(selectedFiles[el.row.index]);\n              }}\n            >\n              &#x2715;\n            </span>\n          );\n        }\n        return <FileOperationStatus status={state[path].status} />;\n      },\n    },\n  ];\n\n  const body = (\n    <div className=\"row h-100\">\n      <div className=\"col-md-6 d-flex flex-column\">\n        {/* Table of selected files */}\n        <div className={`${styles['col-header']}`}>\n          {`${\n            operation === Files.MoveCopyRequestOperationEnum.Copy\n              ? 'Copying '\n              : 'Moving '\n          }`}\n          {selectedFiles.length} files\n        </div>\n        <Breadcrumbs\n          breadcrumbs={[\n            ...breadcrumbsFromPathname(pathname)\n              .splice(1)\n              .map((fragment) => ({ text: fragment.text })),\n          ]}\n        />\n        <div className={styles['nav-list']}>\n          <FileListingTable\n            files={selectedFiles}\n            className={`${styles['file-list-origin']} `}\n            fields={['size']}\n            appendColumns={statusColumns}\n          />\n        </div>\n      </div>\n      <div className=\"col-md-6 d-flex flex-column\">\n        {/* Table of selected files */}\n        <div className={`${styles['col-header']}`}>Destination</div>\n        <FileExplorer\n          systemId={systemId}\n          path={path}\n          onNavigate={onNavigate}\n          fields={['size']}\n          className={styles['file-list']}\n        />\n      </div>\n    </div>\n  );\n\n  const footer = (\n    <SubmitWrapper\n      isLoading={isLoading}\n      error={error}\n      success={\n        isSuccess\n          ? 'Successfully ' +\n            (operation === Files.MoveCopyRequestOperationEnum.Move\n              ? 'moved'\n              : 'copied') +\n            ' files'\n          : ''\n      }\n      reverse={true}\n    >\n      <Button\n        color=\"primary\"\n        disabled={\n          !destinationPath ||\n          destinationPath === path ||\n          isLoading ||\n          (isFinished && !error)\n        }\n        aria-label=\"Submit\"\n        type=\"submit\"\n        onClick={onSubmit}\n      >\n        {opFormatted}\n      </Button>\n    </SubmitWrapper>\n  );\n\n  return (\n    <GenericModal\n      toggle={toggle}\n      title={`${opFormatted} Files`}\n      size=\"xl\"\n      body={body}\n      footer={footer}\n    />\n  );\n};\n\nexport default MoveCopyModal;\n","import RenameModal from './RenameModal';\n\nexport default RenameModal;\n","import { useCallback, useState } from 'react';\nimport { Button } from 'reactstrap';\nimport { GenericModal } from 'tapis-ui/_common';\nimport { SubmitWrapper } from 'tapis-ui/_wrappers';\nimport { ToolbarModalProps } from '../Toolbar';\nimport { Form, Formik } from 'formik';\nimport { FormikInput } from 'tapis-ui/_common';\nimport { useMove } from 'tapis-hooks/files';\nimport { focusManager } from 'react-query';\nimport { useEffect } from 'react';\nimport { useFilesSelect } from '../../FilesContext';\nimport * as Yup from 'yup';\n\nconst RenameModal: React.FC<ToolbarModalProps> = ({\n  toggle,\n  systemId,\n  path,\n}) => {\n  const { selectedFiles, clear } = useFilesSelect();\n  const [inputName, setInputName] = useState<string>();\n  const file = selectedFiles ? selectedFiles[0] : undefined;\n\n  const onSuccess = useCallback(() => {\n    // Calling the focus manager triggers react-query's\n    // automatic refetch on window focus\n    clear();\n    focusManager.setFocused(true);\n  }, [clear]);\n\n  const { move, isLoading, error, isSuccess, reset } = useMove();\n\n  useEffect(() => {\n    reset();\n  }, [reset]);\n\n  const validationSchema = Yup.object({\n    newname: Yup.string()\n      .min(1)\n      .max(255, 'The new filename cannot be longer than 255 characters')\n      .matches(\n        /[a-zA-Z0-9_.-]+/,\n        \"Filename must contain only alphanumeric characters and the following: '.', '_', '-'\"\n      )\n      .required('The new filename is required'),\n  });\n\n  const initialValues = {\n    newname: file?.name ?? inputName ?? '',\n  };\n\n  const onSubmit = useCallback(\n    ({ newname }: { newname: string }) => {\n      setInputName(newname);\n      if (!file?.name) {\n        return;\n      }\n      move(\n        {\n          systemId: systemId!,\n          path: `${path}${file!.name}`,\n          newPath: `${path}${newname}`,\n        },\n        { onSuccess }\n      );\n    },\n    [setInputName, file, move, onSuccess, systemId, path]\n  );\n\n  const dirOrFile = (type: string | undefined) => {\n    return type === 'dir' ? 'directory' : 'file';\n  };\n\n  return (\n    <GenericModal\n      toggle={toggle}\n      title={`Rename ${dirOrFile(file?.type)}`}\n      body={\n        <div>\n          <Formik\n            initialValues={initialValues}\n            validationSchema={validationSchema}\n            onSubmit={onSubmit}\n          >\n            <Form id=\"rename-form\">\n              <FormikInput\n                name=\"newname\"\n                label={`${\n                  dirOrFile(file?.type).charAt(0).toUpperCase() +\n                  dirOrFile(file?.type).slice(1)\n                } Name`}\n                required={true}\n                description=\"Rename File\"\n              />\n            </Form>\n          </Formik>\n        </div>\n      }\n      footer={\n        <SubmitWrapper\n          isLoading={false}\n          error={error}\n          success={isSuccess ? `Successfully renamed` : ''}\n          reverse={true}\n        >\n          <Button\n            form=\"rename-form\"\n            color=\"primary\"\n            disabled={isLoading || isSuccess}\n            aria-label=\"Submit\"\n            type=\"submit\"\n          >\n            Rename\n          </Button>\n        </SubmitWrapper>\n      }\n    />\n  );\n};\n\nexport default RenameModal;\n","import Progress from './Progress';\n\nexport default Progress;\n","import styles from './Progress.module.scss';\n\ntype ProgressProps = {\n  value: number;\n  color?: string;\n  styles?: { [name: string]: string };\n  showProgress?: boolean;\n};\n\nconst Progress: React.FC<ProgressProps> = ({\n  value,\n  color,\n  showProgress = true,\n}) => {\n  const style = {\n    '--width': `${value}%`,\n  } as React.CSSProperties;\n\n  return (\n    <div className={styles['progress-bar']}>\n      <div className={styles['inner-bar']} style={style} />\n      {showProgress && (\n        <div className={styles['overlay']}>\n          <p>{value}%</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Progress;\n","import UploadModal from './UploadModal';\n\nexport default UploadModal;\n","import PermissionsModal from './PermissionsModal';\n\nexport default PermissionsModal;\n","import { GenericModal } from 'tapis-ui/_common';\nimport { ToolbarModalProps } from '../Toolbar';\nimport { useFilesSelect } from '../../FilesContext';\nimport { usePermissions } from 'tapis-hooks/files';\nimport { FileStat, FileOperation } from 'tapis-ui/components/files';\nimport { useTapisConfig } from 'tapis-hooks';\nimport { QueryWrapper } from 'tapis-ui/_wrappers';\nimport { Files } from '@tapis/tapis-typescript';\nimport { Tabs } from 'tapis-ui/_common';\nimport styles from './PermissionsModal.module.scss';\nimport React from 'react';\n\nconst PermissionsModal: React.FC<ToolbarModalProps> = ({\n  toggle,\n  systemId,\n  path,\n}) => {\n  const { selectedFiles } = useFilesSelect();\n\n  const file = selectedFiles[0];\n  const { claims } = useTapisConfig();\n  const username = claims['tapis/username'];\n  const filePath = file.path!;\n  const permsRequest: Files.GetPermissionsRequest = {\n    systemId: systemId ?? '',\n    path: filePath,\n    username,\n  };\n\n  const { data, isLoading, error } = usePermissions(permsRequest);\n\n  const write: boolean =\n    data?.result?.permission === Files.FilePermissionPermissionEnum.Modify;\n\n  const tabs: { [name: string]: React.ReactNode } = {\n    Info: (\n      <FileStat\n        systemId={systemId!}\n        path={filePath}\n        className={styles['list-content']}\n      />\n    ),\n  };\n\n  if (write) {\n    tabs['Linux Native Operations'] = (\n      <FileOperation systemId={systemId!} path={filePath} />\n    );\n  }\n\n  const body = (\n    <QueryWrapper isLoading={isLoading} error={error}>\n      <Tabs tabs={tabs} />\n    </QueryWrapper>\n  );\n\n  return <GenericModal toggle={toggle} title={`Permissions`} body={body} />;\n};\n\nexport default PermissionsModal;\n","import DeleteModal from './DeleteModal';\n\nexport default DeleteModal;\n","import { useEffect, useCallback } from 'react';\nimport { Button } from 'reactstrap';\nimport { GenericModal } from 'tapis-ui/_common';\nimport { SubmitWrapper } from 'tapis-ui/_wrappers';\nimport { FileListingTable } from 'tapis-ui/components/files/FileListing/FileListing';\nimport { ToolbarModalProps } from '../Toolbar';\nimport { focusManager } from 'react-query';\nimport { useDelete } from 'tapis-hooks/files';\nimport { Column } from 'react-table';\nimport styles from './DeleteModal.module.scss';\nimport { useFilesSelect } from '../../FilesContext';\nimport { Files } from '@tapis/tapis-typescript';\nimport { DeleteHookParams } from 'tapis-hooks/files/useDelete';\nimport { useFileOperations } from '../_hooks';\nimport { FileOperationStatus } from '../_components';\n\nconst DeleteModal: React.FC<ToolbarModalProps> = ({\n  toggle,\n  systemId = '',\n  path = '/',\n}) => {\n  const { selectedFiles, unselect } = useFilesSelect();\n  const { deleteFileAsync, reset } = useDelete();\n\n  useEffect(() => {\n    reset();\n  }, [reset]);\n\n  const onComplete = useCallback(() => {\n    // Calling the focus manager triggers react-query's\n    // automatic refetch on window focus\n    focusManager.setFocused(true);\n  }, []);\n\n  const { run, state, isLoading, isSuccess, error } = useFileOperations<\n    DeleteHookParams,\n    Files.FileStringResponse\n  >({\n    fn: deleteFileAsync,\n    onComplete,\n  });\n\n  const onSubmit = useCallback(() => {\n    const operations: Array<DeleteHookParams> = selectedFiles.map((file) => ({\n      systemId,\n      path: file.path!,\n    }));\n    run(operations);\n  }, [selectedFiles, run, systemId]);\n\n  const removeFile = useCallback(\n    (file: Files.FileInfo) => {\n      unselect([file]);\n      if (selectedFiles.length === 1) {\n        toggle();\n      }\n    },\n    [selectedFiles, toggle, unselect]\n  );\n\n  const statusColumn: Array<Column> = [\n    {\n      Header: '',\n      id: 'deleteStatus',\n      Cell: (el) => {\n        const file = selectedFiles[el.row.index];\n        if (!state[file.path!]) {\n          return (\n            <span\n              className={styles['remove-file']}\n              onClick={() => {\n                removeFile(selectedFiles[el.row.index]);\n              }}\n            >\n              &#x2715;\n            </span>\n          );\n        }\n        return <FileOperationStatus status={state[file.path!].status} />;\n      },\n    },\n  ];\n\n  return (\n    <GenericModal\n      toggle={() => {\n        toggle();\n        unselect(selectedFiles);\n      }}\n      title={`Delete files and folders`}\n      body={\n        <div>\n          <h3>\n            {systemId}/{path}\n          </h3>\n          <div className={styles['files-list-container']}>\n            <FileListingTable\n              files={selectedFiles}\n              fields={['size']}\n              appendColumns={statusColumn}\n              className={styles['file-list-table']}\n            />\n          </div>\n        </div>\n      }\n      footer={\n        <SubmitWrapper\n          isLoading={false}\n          error={error}\n          success={isSuccess ? `Successfully deleted files` : ''}\n          reverse={true}\n        >\n          <Button\n            color=\"primary\"\n            disabled={isLoading || isSuccess || selectedFiles.length === 0}\n            aria-label=\"Submit\"\n            onClick={onSubmit}\n          >\n            Confirm delete ({selectedFiles.length})\n          </Button>\n          {!isSuccess && (\n            <Button\n              color=\"danger\"\n              disabled={isLoading || isSuccess || selectedFiles.length === 0}\n              aria-label=\"Cancel\"\n              onClick={() => {\n                toggle();\n              }}\n            >\n              Cancel\n            </Button>\n          )}\n        </SubmitWrapper>\n      }\n    />\n  );\n};\n\nexport default DeleteModal;\n","import CopyMoveModal from './TransferModal';\n\nexport default CopyMoveModal;\n","import React, { useCallback, useState, useEffect } from 'react';\nimport { GenericModal, Breadcrumbs } from 'tapis-ui/_common';\nimport breadcrumbsFromPathname from 'tapis-ui/_common/Breadcrumbs/breadcrumbsFromPathname';\nimport { FileListingTable } from 'tapis-ui/components/files/FileListing/FileListing';\nimport FileExplorer from 'tapis-ui/components/files/FileExplorer/FileExplorer';\nimport { ToolbarModalProps } from '../Toolbar';\nimport { useLocation } from 'react-router';\nimport { Files } from '@tapis/tapis-typescript';\nimport styles from './TransferModal.module.scss';\nimport { useFilesSelect } from '../../FilesContext';\nimport { Tabs } from 'tapis-ui/_common';\nimport {\n  TransferListing,\n  TransferDetails,\n  TransferCreate,\n  TransferCancel,\n} from 'tapis-ui/components/files';\nimport { useList } from 'tapis-hooks/files/transfers';\n\nconst TransferModal: React.FC<ToolbarModalProps> = ({\n  toggle,\n  systemId = '',\n  path = '/',\n}) => {\n  const { pathname } = useLocation();\n  const [destination, setDestination] = useState<{\n    systemId: string;\n    path: string;\n  }>({ systemId, path });\n  const [transfer, setTransfer] = useState<Files.TransferTask | null>(null);\n  const { selectedFiles } = useFilesSelect();\n\n  const { refetch } = useList({});\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      refetch();\n    }, 5000);\n    return () => clearInterval(interval);\n  }, [refetch]);\n\n  const onNavigate = useCallback(\n    (systemId: string | null, path: string | null) => {\n      if (!!systemId && !!path) {\n        setDestination({ systemId, path });\n      }\n    },\n    [setDestination]\n  );\n\n  const onSelect = useCallback(\n    (transfer: Files.TransferTask) => {\n      setTransfer(transfer);\n    },\n    [setTransfer]\n  );\n\n  const createTransferTab = (\n    <div className={`row h-100 ${styles.pane}`}>\n      <div className=\"col-md-6 d-flex flex-column\">\n        {/* Table of selected files */}\n        <div className={`${styles['col-header']}`}>\n          Transfering {selectedFiles.length} files\n        </div>\n        <Breadcrumbs\n          breadcrumbs={[\n            ...breadcrumbsFromPathname(pathname)\n              .splice(1)\n              .map((fragment) => ({ text: fragment.text })),\n          ]}\n        />\n        <div className={styles['nav-list']}>\n          <FileListingTable\n            files={selectedFiles}\n            className={`${styles['file-list-origin']} `}\n            fields={['size']}\n          />\n        </div>\n      </div>\n      <div className=\"col-md-6 d-flex flex-column\">\n        {/* Table of selected files */}\n        <div className={`${styles['col-header']}`}>Destination</div>\n        <FileExplorer\n          systemId={systemId}\n          path={path}\n          onNavigate={onNavigate}\n          fields={['size']}\n          className={styles['file-list']}\n          allowSystemChange\n        />\n        <TransferCreate\n          sourceSystemId={systemId}\n          destinationSystemId={destination?.systemId ?? ''}\n          destinationPath={destination?.path ?? ''}\n          files={selectedFiles}\n        />\n      </div>\n    </div>\n  );\n\n  const listTransfersTab = (\n    <div className={`row h-100 ${styles.pane}`}>\n      <div className=\"col-md-6 d-flex flex-column\">\n        <div className={`${styles['nav-list']} ${styles['transfer-list']}`}>\n          <TransferListing onSelect={onSelect} />\n        </div>\n      </div>\n      <div className=\"col-md-6 d-flex flex-column\">\n        <div>\n          {transfer ? (\n            <div>\n              <TransferDetails\n                transferTaskId={transfer?.uuid!}\n                className={styles['transfer-detail']}\n              />\n              <TransferCancel\n                transferTaskId={transfer?.uuid!}\n                className={styles['transfer-cancel']}\n              />\n            </div>\n          ) : (\n            <i>Select a file transfer to view details</i>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n\n  const tabs: { [name: string]: React.ReactNode } = {};\n  if (selectedFiles.length > 0) {\n    tabs['Start a Transfer'] = createTransferTab;\n  }\n  tabs['Recent Transfers'] = listTransfersTab;\n\n  const body = <Tabs tabs={tabs} className={styles.body} />;\n\n  return (\n    <GenericModal\n      toggle={toggle}\n      title=\"Transfer Files\"\n      size=\"xl\"\n      body={body}\n    />\n  );\n};\n\nexport default TransferModal;\n","import React, { useState, useEffect } from 'react';\nimport { useNotifications, NotificationRecord, Notification } from '.';\nimport Snackbar, { SnackbarCloseReason } from '@material-ui/core/Snackbar';\nimport Slide, { SlideProps } from '@material-ui/core/Slide';\nimport { Icon } from 'tapis-ui/_common';\nimport styles from './NotificationToast.module.scss';\n\nconst NotificationToast = () => {\n  type TransitionType =\n    | React.ComponentType<\n        SlideProps & {\n          children?: React.ReactElement<any, any> | undefined;\n        }\n      >\n    | undefined;\n  const { notifications, markread } = useNotifications();\n  const [open, setOpen] = useState(false);\n  const [notificationRecord, setNotificationRecord] =\n    useState<NotificationRecord | null>(null);\n  const [transition, setTransition] = React.useState<TransitionType>(undefined);\n\n  useEffect(() => {\n    if (notifications.length && !notificationRecord) {\n      // Set a new toast when we don't have an active one\n      setNotificationRecord({ ...notifications[0] });\n      setTransition(() => (props: SlideProps) => (\n        <Slide {...props} direction=\"right\" />\n      ));\n      setOpen(true);\n    } else if (notifications.length && notificationRecord && open) {\n      // Close an active toast when a new one is added\n      setOpen(false);\n      markread(notificationRecord?.id!);\n      setNotificationRecord({ ...notifications[0] });\n      setTransition(() => (props: SlideProps) => (\n        <Slide {...props} direction=\"right\" />\n      ));\n      setOpen(true);\n    }\n    /* eslint-disable-next-line */\n  }, [notifications]);\n\n  const handleExited = () => {\n    setNotificationRecord(null);\n    markread(notificationRecord?.id!);\n  };\n\n  type HandleCloseType = (\n    event: React.SyntheticEvent<any, Event>,\n    reason: SnackbarCloseReason\n  ) => void;\n\n  const handleClose: HandleCloseType = (_event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpen(false);\n  };\n\n  return notificationRecord && !notificationRecord.read ? (\n    <Snackbar\n      key={notificationRecord ? notificationRecord.id : undefined}\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'left',\n      }}\n      TransitionComponent={transition}\n      open={open}\n      autoHideDuration={3500}\n      onClose={handleClose}\n      TransitionProps={{\n        onExited: handleExited,\n      }}\n      classes={{\n        anchorOriginBottomLeft: styles['notification-toast-container'],\n      }}\n      ContentProps={{\n        classes: {\n          root: styles['notification-toast'],\n          message: styles['notification-toast-body'],\n        },\n      }}\n      message={<ToastMessage notification={notificationRecord!.notification} />}\n    />\n  ) : null;\n};\n\nexport const ToastMessage: React.FC<{ notification: Notification }> = ({\n  notification,\n}) => {\n  return (\n    <>\n      <div className={styles['notification-toast-icon-wrapper']}>\n        <Icon\n          name={notification.icon}\n          className={\n            notification.status === 'ERROR' ? styles['toast-is-error'] : ''\n          }\n        />\n      </div>\n      <div className={styles['notification-toast-content']}>\n        <span>{notification.message}</span>\n      </div>\n    </>\n  );\n};\n\nexport default NotificationToast;\n","import React from 'react';\nimport { NotificationsContextType } from '.';\n\nexport const notificationsContext: NotificationsContextType = {\n  notifications: [],\n  dispatch: () => {},\n};\n\nconst NotificationsContext: React.Context<NotificationsContextType> =\n  React.createContext<NotificationsContextType>(notificationsContext);\n\nexport default NotificationsContext;\n","import { useContext } from 'react';\nimport NotificationsContext from './NotificationsContext';\nimport { Notification } from '.';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst useNotifications = () => {\n  const { notifications, dispatch } = useContext(NotificationsContext);\n\n  const add = (notification: Notification) => {\n    const id = uuidv4();\n    dispatch({ operation: 'add', notification, id });\n    return id;\n  };\n\n  const markread = (id: string) => {\n    dispatch({ operation: 'markread', id });\n  };\n\n  const remove = (id: string) => {\n    dispatch({ operation: 'remove', id });\n  };\n\n  const set = (id: string, notification: Notification) => {\n    dispatch({ operation: 'set', id, notification });\n  };\n\n  return {\n    notifications,\n    add,\n    markread,\n    remove,\n    set,\n  };\n};\n\nexport default useNotifications;\n","import React, { useReducer } from 'react';\nimport {\n  NotificationsContextType,\n  NotificationRecord,\n  Notification,\n  NotificationToast,\n} from '.';\nimport NotificationsContext from './NotificationsContext';\n\nexport const reducer = (\n  state: Array<NotificationRecord>,\n  action: {\n    operation: 'add' | 'markread' | 'remove' | 'set';\n    notification?: Notification;\n    id: string;\n  }\n): Array<NotificationRecord> => {\n  const { operation, notification, id } = action;\n  if (operation === 'add') {\n    if (!notification) {\n      throw new Error('notification field missing');\n    }\n    return [{ notification, id, read: false }, ...state];\n  }\n  const index = state.findIndex((existing) => existing.id === id);\n  if (index === -1) {\n    throw new Error(`Could not find notification with id ${id}`);\n  }\n  if (operation === 'markread') {\n    state[index].read = true;\n    return [...state];\n  }\n  if (operation === 'set') {\n    if (!notification) {\n      throw new Error('notification field missing');\n    }\n    state[index].notification = { ...notification! };\n    return [...state];\n  }\n  if (operation === 'remove') {\n    state.splice(index, 1);\n    return [...state];\n  }\n  return state;\n};\n\nconst NotificationsProvider: React.FC<React.PropsWithChildren<{}>> = ({\n  children,\n}) => {\n  const [notifications, dispatch] = useReducer(\n    reducer,\n    [] as Array<NotificationRecord>\n  );\n\n  // Provide a context state for the rest of the application, including\n  // a way of modifying the state\n  const contextValue: NotificationsContextType = {\n    notifications,\n    dispatch,\n  };\n\n  return (\n    <NotificationsContext.Provider value={contextValue}>\n      <NotificationToast />\n      {children}\n    </NotificationsContext.Provider>\n  );\n};\n\nexport default NotificationsProvider;\n","import { Files } from '@tapis/tapis-typescript';\nimport React, { useState, useCallback } from 'react';\nimport { Button } from 'reactstrap';\nimport { Icon } from 'tapis-ui/_common';\nimport styles from './Toolbar.module.scss';\nimport CreateDirModal from './CreateDirModal';\nimport MoveCopyModal from './MoveCopyModal';\nimport RenameModal from './RenameModal';\nimport UploadModal from './UploadModal';\nimport PermissionsModal from './PermissionsModal';\nimport DeleteModal from './DeleteModal';\nimport TransferModal from './TransferModal';\nimport { useLocation } from 'react-router-dom';\nimport { useFilesSelect } from '../FilesContext';\nimport {\n  // useDownload,\n  DownloadStreamParams,\n  usePermissions,\n  useDownload,\n} from 'tapis-hooks/files';\nimport { useNotifications } from 'tapis-app/_components/Notifications';\n\ntype ToolbarButtonProps = {\n  text: string;\n  icon: string;\n  onClick: () => void;\n  disabled: boolean;\n};\n\nexport type ToolbarModalProps = {\n  toggle: () => void;\n  systemId?: string;\n  path?: string;\n};\n\nexport const ToolbarButton: React.FC<ToolbarButtonProps> = ({\n  text,\n  icon,\n  onClick,\n  disabled = true,\n  ...rest\n}) => {\n  return (\n    <div>\n      <Button\n        disabled={disabled}\n        onClick={onClick}\n        className={styles['toolbar-btn']}\n        {...rest}\n      >\n        <Icon name={icon}></Icon>\n        <span> {text}</span>\n      </Button>\n    </div>\n  );\n};\n\nconst Toolbar: React.FC = () => {\n  const [modal, setModal] = useState<string | undefined>(undefined);\n  const { selectedFiles } = useFilesSelect();\n  const { pathname } = useLocation();\n  const systemId = pathname.split('/')[2];\n  const currentPath = pathname.split('/').splice(3).join('/');\n  const { download } = useDownload();\n  const { add } = useNotifications();\n\n  const { data } = usePermissions({ systemId, path: currentPath });\n  const permission = data?.result?.permission;\n\n  const onDownload = useCallback(() => {\n    selectedFiles.forEach((file) => {\n      const params: DownloadStreamParams = {\n        systemId,\n        path: file.path ?? '',\n        destination: file.name ?? 'tapisfile',\n      };\n      const isZip = file.type === 'dir';\n      if (isZip) {\n        params.zip = true;\n        params.destination = `${params.destination}.zip`;\n        add({ icon: 'data-files', message: `Preparing download` });\n        params.onStart = (response: Response) => {\n          add({ icon: 'data-files', message: `Starting download` });\n        };\n      }\n      download(params, {\n        onError: isZip\n          ? () => {\n              add({\n                icon: 'data-files',\n                message: `Download failed`,\n                status: 'ERROR',\n              });\n            }\n          : undefined,\n      });\n    });\n  }, [selectedFiles, add, download, systemId]);\n\n  const toggle = () => {\n    setModal(undefined);\n  };\n  return (\n    <div id=\"file-operation-toolbar\">\n      {pathname !== '/files' && (\n        <div className={styles['toolbar-wrapper']}>\n          <ToolbarButton\n            text=\"Rename\"\n            icon=\"rename\"\n            disabled={\n              selectedFiles.length !== 1 ||\n              permission !== Files.FilePermissionPermissionEnum.Modify\n            }\n            onClick={() => setModal('rename')}\n            aria-label=\"Rename\"\n          />\n          <ToolbarButton\n            text=\"Move\"\n            icon=\"move\"\n            disabled={\n              selectedFiles.length === 0 ||\n              permission !== Files.FilePermissionPermissionEnum.Modify\n            }\n            onClick={() => setModal('move')}\n            aria-label=\"Move\"\n          />\n          <ToolbarButton\n            text=\"Copy\"\n            icon=\"copy\"\n            disabled={selectedFiles.length === 0}\n            onClick={() => setModal('copy')}\n            aria-label=\"Copy\"\n          />\n          {/*\n              <ToolbarButton\n                text=\"Permissions\"\n                icon=\"gear\"\n                disabled={selectedFiles.length !== 1 || permission !== Files.FilePermissionPermissionEnum.Modify}\n                onClick={() => setModal('permissions')}\n              />\n            */}\n          <ToolbarButton\n            text=\"Transfers\"\n            icon=\"globe\"\n            disabled={false}\n            onClick={() => setModal('transfer')}\n          />\n          <ToolbarButton\n            text=\"Download\"\n            icon=\"download\"\n            disabled={selectedFiles.length === 0}\n            onClick={onDownload}\n            aria-label=\"Download\"\n          />\n          <ToolbarButton\n            text=\"Upload\"\n            icon=\"upload\"\n            disabled={permission !== Files.FilePermissionPermissionEnum.Modify}\n            onClick={() => {\n              setModal('upload');\n            }}\n            aria-label=\"Upload\"\n          />\n          <ToolbarButton\n            text=\"Folder\"\n            icon=\"add\"\n            disabled={permission !== Files.FilePermissionPermissionEnum.Modify}\n            onClick={() => setModal('createdir')}\n            aria-label=\"Add\"\n          />\n          <ToolbarButton\n            text=\"Delete\"\n            icon=\"trash\"\n            disabled={\n              selectedFiles.length === 0 ||\n              permission !== Files.FilePermissionPermissionEnum.Modify\n            }\n            onClick={() => setModal('delete')}\n            aria-label=\"Delete\"\n          />\n          {modal === 'createdir' && (\n            <CreateDirModal\n              toggle={toggle}\n              systemId={systemId}\n              path={currentPath}\n            />\n          )}\n          {modal === 'copy' && (\n            <MoveCopyModal\n              toggle={toggle}\n              systemId={systemId}\n              path={currentPath}\n              operation={Files.MoveCopyRequestOperationEnum.Copy}\n            />\n          )}\n          {modal === 'move' && (\n            <MoveCopyModal\n              toggle={toggle}\n              systemId={systemId}\n              path={currentPath}\n              operation={Files.MoveCopyRequestOperationEnum.Move}\n            />\n          )}\n          {modal === 'rename' && (\n            <RenameModal\n              toggle={toggle}\n              systemId={systemId}\n              path={currentPath}\n            />\n          )}\n          {modal === 'transfer' && (\n            <TransferModal\n              toggle={toggle}\n              systemId={systemId}\n              path={currentPath}\n            />\n          )}\n          {modal === 'upload' && (\n            <UploadModal\n              toggle={toggle}\n              path={currentPath}\n              systemId={systemId}\n            />\n          )}\n          {modal === 'permissions' && (\n            <PermissionsModal\n              toggle={toggle}\n              systemId={systemId}\n              path={currentPath}\n            />\n          )}\n          {modal === 'delete' && (\n            <DeleteModal\n              toggle={toggle}\n              systemId={systemId}\n              path={currentPath}\n            />\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Toolbar;\n","import Toolbar from './Toolbar';\n\nexport default Toolbar;\n","import React from 'react';\nimport {\n  PageLayout,\n  LayoutBody,\n  LayoutHeader,\n  LayoutNavWrapper,\n  Breadcrumbs,\n} from 'tapis-ui/_common';\nimport { SystemsNav } from '../_components';\nimport { Router } from '../_Router';\nimport Toolbar from '../_components/Toolbar';\nimport { useLocation } from 'react-router';\nimport breadcrumbsFromPathname from 'tapis-ui/_common/Breadcrumbs/breadcrumbsFromPathname';\nimport styles from './Layout.module.scss';\nimport { FilesProvider } from '../_components/FilesContext';\n\nconst Layout: React.FC = () => {\n  const { pathname } = useLocation();\n  const crumbs = breadcrumbsFromPathname(pathname).splice(1);\n  const header = (\n    <LayoutHeader>\n      <div className={styles.breadcrumbs}>\n        <Breadcrumbs breadcrumbs={[{ text: 'Files' }, ...crumbs]} />\n      </div>\n      <Toolbar />\n    </LayoutHeader>\n  );\n\n  const sidebar = (\n    <LayoutNavWrapper>\n      <SystemsNav />\n    </LayoutNavWrapper>\n  );\n\n  const body = (\n    <LayoutBody constrain>\n      <Router />\n    </LayoutBody>\n  );\n\n  return (\n    <FilesProvider>\n      <PageLayout top={header} left={sidebar} right={body} />\n    </FilesProvider>\n  );\n};\n\nexport default Layout;\n","import React from 'react';\nimport { InlineMessage, SectionMessage } from 'tapis-ui/_common';\nimport styles from './UIPatternsMessage.module.scss';\n\nconst EXAMPLE_LINK = {\n  short: (\n    <a\n      href={window.location.href}\n      onClick={(e) => e.preventDefault()}\n      className=\"wb-link\"\n    >\n      Example link\n    </a>\n  ),\n  long: (\n    <a\n      href={window.location.href}\n      onClick={(e) => e.preventDefault()}\n      className=\"wb-link\"\n    >\n      Example link can be a complete sentence.\n    </a>\n  ),\n};\nconst EXAMPLE_TEXT = {\n  info: {\n    short: 'You exist.',\n    long: 'All your information, are belong to us.',\n  },\n  success: {\n    short: 'We did well.',\n    long: 'All your success, are belong to us.',\n  },\n  warn: {\n    short: 'You did poorly.',\n    long: 'All your warning, are come from us.',\n  },\n  error: {\n    short: 'You failed.',\n    long: 'All your error, are belong to you.',\n  },\n};\n\nconst NOTIFICATION_TEXT = (\n  <em>\n    Can not render in isolation. See{' '}\n    <a\n      href=\"https://xd.adobe.com/view/db2660cc-1011-4f26-5d31-019ce87c1fe8-ad17/screen/3821fc3e-bda1-40d4-9e50-a514e90aa088/\"\n      target=\"_blank\"\n      rel=\"noreferrer\"\n    >\n      Adobe Design.\n    </a>\n  </em>\n);\n\nfunction UIPatternsMessages() {\n  return (\n    <table className={styles.container}>\n      <thead>\n        <tr>\n          <th scope=\"row\" className={styles.secondary}>\n            component\n          </th>\n          <th scope=\"col\">\n            <code>&lt;InlineMessage&gt;</code>\n            <code>&lt;Message scope=&quot;inline&quot;&gt;</code>\n          </th>\n          <th scope=\"col\">\n            <code>&lt;SectionMessage (canDismiss)&gt;</code>\n            <code>&lt;Message scope=&quot;section&quot; (canDismiss)&gt;</code>\n          </th>\n          <th scope=\"col\">\n            <code>\n              <s>&lt;AppMessage&gt;</s>\n            </code>\n            <code>&lt;NotifcationToast&gt;</code>\n          </th>\n        </tr>\n        <tr>\n          <th scope=\"row\" className={styles.secondary}>\n            <code>scope</code>\n          </th>\n          <th scope=\"col\">\n            <code>inline</code>\n          </th>\n          <th scope=\"col\">\n            <code>section</code>\n          </th>\n          <th scope=\"col\">\n            <code>app</code>\n          </th>\n        </tr>\n        <tr>\n          <th scope=\"col\" className={styles.secondary}>\n            <code>type</code>\n          </th>\n          <td>\n            When to Use\n            <ul>\n              <li>action result statement in table row</li>\n              <li>message when table can not load data</li>\n            </ul>\n          </td>\n          <td>\n            When to Use\n            <ul>\n              <li>warning at the top of a form</li>\n              <li>message after successful submission of form</li>\n            </ul>\n          </td>\n          <td>\n            When to Use\n            <ul>\n              <li>user action is required</li>\n              <li>important user-initiated action is completed</li>\n              <li>security concern</li>\n              <li>milestone for time-sensitive activity</li>\n            </ul>\n          </td>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <th scope=\"row\">\n            <code>info</code>\n          </th>\n          <td>\n            <InlineMessage type=\"info\">\n              {EXAMPLE_TEXT.info.long} {EXAMPLE_LINK.short}\n            </InlineMessage>\n            <hr />\n            <InlineMessage type=\"info\">\n              {EXAMPLE_TEXT.info.short} {EXAMPLE_LINK.long}\n            </InlineMessage>\n          </td>\n          <td>\n            <SectionMessage type=\"info\">\n              {EXAMPLE_TEXT.info.long} {EXAMPLE_LINK.short}\n            </SectionMessage>\n            <SectionMessage type=\"info\" canDismiss>\n              {EXAMPLE_TEXT.info.short} {EXAMPLE_LINK.long}\n            </SectionMessage>\n          </td>\n          <td rowSpan=\"2\">{NOTIFICATION_TEXT}</td>\n        </tr>\n        <tr>\n          <th scope=\"row\">\n            <code>success</code>\n          </th>\n          <td>\n            <InlineMessage type=\"success\">\n              {EXAMPLE_TEXT.success.long} {EXAMPLE_LINK.short}\n            </InlineMessage>\n            <hr />\n            <InlineMessage type=\"success\">\n              {EXAMPLE_TEXT.success.short} {EXAMPLE_LINK.long}\n            </InlineMessage>\n          </td>\n          <td>\n            <SectionMessage type=\"success\">\n              {EXAMPLE_TEXT.success.long} {EXAMPLE_LINK.short}\n            </SectionMessage>\n            <SectionMessage type=\"success\" canDismiss>\n              {EXAMPLE_TEXT.success.short} {EXAMPLE_LINK.long}\n            </SectionMessage>\n          </td>\n          {/* <td /> */}\n        </tr>\n        <tr>\n          <th scope=\"row\">\n            <code>warn</code>\n          </th>\n          <td>\n            <InlineMessage type=\"warn\">\n              {EXAMPLE_TEXT.warn.long} {EXAMPLE_LINK.short}\n            </InlineMessage>\n            <hr />\n            <InlineMessage type=\"warn\">\n              {EXAMPLE_TEXT.warn.short} {EXAMPLE_LINK.long}\n            </InlineMessage>\n          </td>\n          <td>\n            <SectionMessage type=\"warn\">\n              {EXAMPLE_TEXT.warn.long} {EXAMPLE_LINK.short}\n            </SectionMessage>\n            <SectionMessage type=\"warn\" canDismiss>\n              {EXAMPLE_TEXT.warn.short} {EXAMPLE_LINK.long}\n            </SectionMessage>\n          </td>\n          <td rowSpan=\"2\" className={styles['is-row-end']}>\n            {NOTIFICATION_TEXT}\n          </td>\n        </tr>\n        <tr>\n          <th scope=\"row\">\n            <code>error</code>\n          </th>\n          <td>\n            <InlineMessage type=\"error\">\n              {EXAMPLE_TEXT.error.long} {EXAMPLE_LINK.short}\n            </InlineMessage>\n            <hr />\n            <InlineMessage type=\"error\">\n              {EXAMPLE_TEXT.error.short} {EXAMPLE_LINK.long}\n            </InlineMessage>\n          </td>\n          <td>\n            <SectionMessage type=\"error\">\n              {EXAMPLE_TEXT.error.long} {EXAMPLE_LINK.short}\n            </SectionMessage>\n            <SectionMessage type=\"error\" canDismiss>\n              {EXAMPLE_TEXT.error.short} {EXAMPLE_LINK.long}\n            </SectionMessage>\n          </td>\n          {/* <td /> */}\n        </tr>\n      </tbody>\n    </table>\n  );\n}\n\nexport default UIPatternsMessages;\n","import React from 'react';\nimport { DescriptionList, Icon } from 'tapis-ui/_common';\n\nimport styles from './UIPatternsDescriptionList.module.css';\n\nconst DATA = {\n  Username: 'bobward500',\n  Prefix: 'Mr.',\n  Name: 'Bob Ward',\n  Suffix: 'The 5th',\n  'Favorite Numeric Value': 5,\n  Icon: <Icon name=\"dashboard\" />,\n};\n\nfunction UIPatternsDropdownSelector() {\n  return (\n    <>\n      <div className={styles['list-cols']}>\n        <dl>\n          <dt>Vertical Layout & Default Density</dt>\n          <dd>\n            <DescriptionList data={DATA} />\n          </dd>\n        </dl>\n        <dl>\n          <dt>Vertical Layout & Compact Density</dt>\n          <dd>\n            <DescriptionList data={DATA} density=\"compact\" />\n          </dd>\n        </dl>\n        <dl>\n          <dt>Vertical Layout & Compact Density - Narrow Container</dt>\n          <dd>\n            <DescriptionList\n              data={DATA}\n              density=\"compact\"\n              className={styles['item-x-narrow']}\n            />\n          </dd>\n        </dl>\n      </div>\n      <div className={styles['list-rows']}>\n        <dl>\n          <dt>Horizontal Layout & Default Density</dt>\n          <dd>\n            <DescriptionList data={DATA} direction=\"horizontal\" />\n          </dd>\n          <dt>Horizontal Layout & Compact Density</dt>\n          <dd>\n            <DescriptionList\n              data={DATA}\n              density=\"compact\"\n              direction=\"horizontal\"\n            />\n          </dd>\n          <dt>Horizontal Layout & Compact Density - Narrow Container</dt>\n          <dd>\n            <DescriptionList\n              data={DATA}\n              density=\"compact\"\n              direction=\"horizontal\"\n              className={styles['item-narrow']}\n            />\n          </dd>\n        </dl>\n      </div>\n      <div className={styles['list-rows']}>\n        <dl>\n          <dt>Vertical Layout & Nested Data</dt>\n          <dd>\n            <DescriptionList\n              data={{\n                'Nested List One': (\n                  <DescriptionList data={DATA} direction=\"vertical\" />\n                ),\n                'Nested List Two': (\n                  <DescriptionList data={DATA} direction=\"vertical\" />\n                ),\n              }}\n            />\n          </dd>\n          <dt>Horizontal Layout & Nested Data</dt>\n          <dd>\n            <DescriptionList\n              data={{\n                'Nested List One': (\n                  <DescriptionList data={DATA} direction=\"horizontal\" />\n                ),\n                'Nested List Two': (\n                  <DescriptionList data={DATA} direction=\"horizontal\" />\n                ),\n              }}\n              direction=\"vertical\"\n            />\n          </dd>\n        </dl>\n      </div>\n    </>\n  );\n}\n\nexport default UIPatternsDropdownSelector;\n","import React from 'react';\nimport { DropdownSelector } from 'tapis-ui/_common';\n\nfunction UIPatternsDropdownSelector() {\n  return (\n    <dl>\n      <dt>\n        Default (<code>single</code>)\n      </dt>\n      <dd>\n        <small>Only field (not dropdown) can be styled cross-browser.</small>\n        <DropdownSelector>\n          <optgroup label=\"Cryptographic People\">\n            <option value=\"alice\">Alice</option>\n            <option value=\"bob\">Bob</option>\n            <option value=\"charlie\">Charlie</option>\n          </optgroup>\n          <optgroup label=\"Common American Fruit\">\n            <option value=\"apple\">Apple</option>\n            <option value=\"banana\">Banana</option>\n            <option value=\"grapes\">Grapes</option>\n          </optgroup>\n        </DropdownSelector>\n      </dd>\n      <dt>\n        Multiple (<code>multiple</code>)\n      </dt>\n      <dd>\n        <small>Styling options are limited and browser-dependent.</small>\n        <DropdownSelector type=\"multiple\">\n          <optgroup label=\"Cryptographic People\">\n            <option value=\"alice\">Alice</option>\n            <option value=\"bob\">Bob</option>\n            <option value=\"charlie\">Charlie</option>\n          </optgroup>\n          <optgroup label=\"Common American Fruit\">\n            <option value=\"apple\">Apple</option>\n            <option value=\"banana\">Banana</option>\n            <option value=\"grapes\">Grapes</option>\n          </optgroup>\n        </DropdownSelector>\n      </dd>\n    </dl>\n  );\n}\n\nexport default UIPatternsDropdownSelector;\n","import React from 'react';\nimport { Pill } from 'tapis-ui/_common';\n\nfunction UIPatternsPill() {\n  return (\n    <dl>\n      <dt>Default Pill (normal)</dt>\n      <dd>\n        <Pill>Example Pill</Pill>\n      </dd>\n      <dt>Normal Pill</dt>\n      <dd>\n        <Pill type=\"normal\">Normal Pill</Pill>\n      </dd>\n      <dt>Success Pill</dt>\n      <dd>\n        <Pill type=\"success\">Success Pill</Pill>\n      </dd>\n      <dt>Warning Pill</dt>\n      <dd>\n        <Pill type=\"warning\">Warning Pill</Pill>\n      </dd>\n      <dt>Danger Pill</dt>\n      <dd>\n        <Pill type=\"danger\">Danger Pill</Pill>\n      </dd>\n    </dl>\n  );\n}\n\nexport default UIPatternsPill;\n","import React from 'react';\nimport { ReadMore } from 'tapis-ui/_common';\nimport styles from './UIPatternsReadMore.module.scss';\n\nfunction UIPatternsReadMore() {\n  return (\n    <div className={styles.root}>\n      <ReadMore>\n        Long text beyond 4 lines should be clamped. Short text should not be\n        clamped. This element is responsive to line number changes due to window\n        resizing. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis\n        dapibus leo ornare sem mollis viverra. Sed metus tortor, luctus vitae\n        tempus a, consectetur eu enim. Vivamus euismod ante sed augue aliquam,\n        at venenatis risus varius. Duis laoreet, tellus at euismod consequat,\n        nulla neque vestibulum sapien, at placerat erat nibh at ligula. Interdum\n        et malesuada fames ac ante ipsum primis in faucibus. Vestibulum mattis\n        elit non enim gravida tempus. Quisque et nisi ligula. Quisque sagittis\n        vel ex sed rhoncus. In lacus purus, elementum vel ullamcorper at,\n        accumsan congue sem. Morbi eu mattis magna. Donec arcu ligula, mollis ac\n        leo ut, pretium euismod turpis. Maecenas quis elit id dui vehicula\n        sagittis semper aliquet enim.\n      </ReadMore>\n    </div>\n  );\n}\n\nexport default UIPatternsReadMore;\n","import React from 'react';\nimport UIPatternsMessage from './UIPatternsMessage';\nimport UIPatternsDescriptionList from './UIPatternsDescriptionList';\nimport UIPatternsDropdownSelector from './UIPatternsDropdownSelector';\nimport UIPatternsPill from './UIPatternsPill';\nimport UIPatternsReadMore from './UIPatternsReadMore';\nimport styles from './UIPatterns.module.scss';\n\nfunction UIPatterns() {\n  return (\n    <div>\n      <div className={styles.items}>\n        <div className={styles['grid-item']}>\n          <h6>Message &amp; Notification</h6>\n          <UIPatternsMessage />\n        </div>\n        <div className={styles['grid-item']}>\n          <h6>DropdownSelector</h6>\n          <UIPatternsDropdownSelector />\n        </div>\n      </div>\n      <div className={styles.items}>\n        <div className={styles['grid-item']}>\n          <h6>DescriptionList</h6>\n          <UIPatternsDescriptionList />\n        </div>\n      </div>\n      <div className={styles.items}>\n        <div className={styles['grid-item']}>\n          <h6>Pills</h6>\n          <UIPatternsPill />\n        </div>\n      </div>\n      <div className={styles.items}>\n        <div className={styles['grid-item']}>\n          <h6>Read More</h6>\n          <UIPatternsReadMore />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default UIPatterns;\n","import React from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { SectionHeader, ProtectedRoute } from 'tapis-ui/_common';\nimport { useLogin } from 'tapis-hooks/authenticator';\n\nimport Apps from '../Apps';\nimport Login from '../Login';\nimport OAuthLogin from '../Login/_components/OAuthLogin';\nimport Dashboard from '../Dashboard';\nimport Jobs from '../Jobs';\nimport Systems from '../Systems';\nimport Files from '../Files';\nimport UIPatterns from '../UIPatterns';\n\nconst Router: React.FC = () => {\n  const { logout } = useLogin();\n\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n        <Dashboard />\n      </Route>\n      <Route path=\"/login\">\n        <Login />\n      </Route>\n      <Route path='/callback'>\n        <OAuthLogin />\n      </Route>\n      <Route\n        path=\"/logout\"\n        render={() => {\n          logout();\n          return <Redirect to=\"/login\" />;\n        }}\n      />\n      <ProtectedRoute path=\"/systems\">\n        <Systems />\n      </ProtectedRoute>\n      <ProtectedRoute path=\"/apps\">\n        <Apps />\n      </ProtectedRoute>\n      <ProtectedRoute path=\"/jobs\">\n        <Jobs />\n      </ProtectedRoute>\n      <ProtectedRoute path=\"/files\">\n        <Files />\n      </ProtectedRoute>\n      <Route path=\"/uipatterns\">\n        <SectionHeader>UI Patterns</SectionHeader>\n        <UIPatterns />\n      </Route>\n    </Switch>\n  );\n};\n\nexport default Router;\n","import App from './Layout';\n\nexport default App;\n","import React, { useState } from 'react';\nimport { Sidebar } from 'tapis-app/_components';\nimport { Router } from 'tapis-app/_Router';\nimport { PageLayout } from 'tapis-ui/_common';\nimport { NotificationsProvider } from 'tapis-app/_components/Notifications';\nimport { useHistory, Link } from 'react-router-dom';\nimport './Layout.scss';\nimport { useTapisConfig } from 'tapis-hooks';\nimport {\n  ButtonDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n} from 'reactstrap';\n\nconst Layout: React.FC = () => {\n  const { claims } = useTapisConfig();\n  const history = useHistory();\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n\n  const header = (\n    <div className=\"tapis-ui__header\">\n      <Link to=\"/\" style={{ color: 'black', textDecoration: 'none' }}>\n        <div>\n          <img\n            src=\"https://raw.githubusercontent.com/jaeestee/scoped-tapis-ui/main/public/SCOPED_Logo.ico\"\n            alt=\"SCOPED Logo\"\n          />{' '}\n          SCOPED\n        </div>\n      </Link>\n      <div>\n        {claims['sub'] && (\n          <ButtonDropdown\n            size=\"sm\"\n            isOpen={isOpen}\n            toggle={() => setIsOpen(!isOpen)}\n            className=\"dropdown-button\"\n          >\n            <DropdownToggle caret>{claims['sub']}</DropdownToggle>\n            <DropdownMenu style={{ maxHeight: '50vh', overflowY: 'scroll' }}>\n              <DropdownItem onClick={() => history.push('/logout')}>\n                Logout\n              </DropdownItem>\n            </DropdownMenu>\n          </ButtonDropdown>\n        )}\n      </div>\n    </div>\n  );\n\n  const workbenchContent = (\n    <div className=\"workbench-content\">\n      <Router />\n    </div>\n  );\n\n  return (\n    <NotificationsProvider>\n      <div style={{ display: 'flex', flexGrow: 1, height: '100vh' }}>\n        <PageLayout top={header} left={<Sidebar />} right={workbenchContent} />\n      </div>\n    </NotificationsProvider>\n  );\n};\n\nexport default Layout;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom';\nimport App from 'tapis-app';\nimport TapisProvider from 'tapis-hooks/provider';\nimport 'tapis-ui/index.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <TapisProvider basePath={'https://scoped.tapis.io'}>\n      <Router>\n        <App />\n      </Router>\n    </TapisProvider>\n  </React.StrictMode>,\n  document.getElementById('react-root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();\n"],"sourceRoot":""}